
(1 (zzz-to-char . [(20170519 335) ((emacs (24 4)) (cl-lib (0 5)) (avy (0 3 0))) "Fancy version of `zap-to-char' command" single ((:commit . "b62414b155fe2e09d91b70059a909d1403d89acf") (:url . "https://github.com/mrkkrp/zzz-to-char") (:keywords "convenience"))]) (zygospore . [(20140703 152) nil "reversible C-x 1 (delete-other-windows)" single ((:commit . "1af5ee663f5a7aa08d96a77cacff834dcdf55ea8") (:url . "https://github.com/louiskottmann/zygospore.el"))]) (zweilight-theme . [(20170112 2205) nil "A dark color theme for Emacs." single ((:commit . "7f45ab9e23164d65538edb2beb9692ecdc24c31e") (:url . "http://github.com/philiparvidsson/zweilight-emacs"))]) (ztree . [(20170223 1014) ((cl-lib (0))) "Text mode directory tree" tar ((:commit . "febc2d02373312ce69f56c9dbe54cabea3e0813c") (:url . "https://github.com/fourier/ztree") (:keywords "files" "tools"))]) (zpresent . [(20170620 2134) ((emacs (25 1)) (org-parser (0 3)) (dash (2 13 0))) "Simple presentation mode based on org files." single ((:url . "https://bitbucket.org/zck/zpresent.el") (:keywords "comm"))]) (zoutline . [(20160915 503) nil "Simple outline library." single ((:commit . "714c10a25112b3da62696585bea289c3f8e74158") (:url . "https://github.com/abo-abo/zoutline") (:keywords "outline"))]) (zotxt . [(20170109 2040) ((request-deferred (0 2 0))) "Tools to integrate emacs with Zotero via the zotxt plugin." tar ((:commit . "1a010ea5db617269adc132e4cc028a44d9b629bd"))]) (zotelo . [(20160602 249) ((cl-lib (0 5))) "Manage Zotero collections from emacs" single ((:commit . "d9dc089b9adfcc70a63f2a84269a12eb7cb4c748") (:url . "https://github.com/vitoshka/zotelo") (:keywords "zotero" "emacs" "reftex" "bibtex" "mozrepl" "bibliography manager"))]) (zossima . [(20121123 1635) ((inf-ruby (2 2 3))) "Ruby from Emacs" tar ((:commit . "991676635c374d2a12714dcf48c1ce2d6f97a375") (:url . "https://github.com/technomancy/zossima") (:keywords "ruby" "convenience"))]) (zop-to-char . [(20160212 754) ((cl-lib (0 5))) "A replacement of zap-to-char." single ((:commit . "816ea90337db0545a2f0a5079f4d7b3a2822af7d") (:url . "https://github.com/thierryvolpiatto/zop-to-char"))]) (zoom-window . [(20170302 27) ((emacs (24 3))) "Zoom window like tmux" single ((:commit . "cd6ecc103fc30b171bda7daf1f44a550854d0dbf") (:url . "https://github.com/syohex/emacs-zoom-window"))]) (zoom-frm . [(20170309 1439) ((frame-fns (0)) (frame-cmds (0))) "Commands to zoom frame font size." single ((:url . "https://www.emacswiki.org/emacs/download/zoom-frm.el") (:keywords "frames" "extensions" "convenience"))]) (zonokai-theme . [(20160321 1925) nil "No description available." tar ((:commit . "38ee819b711e848437ba6d563594129a0ecac598"))]) (zones . [(20170605 1046) nil "Zones of text - like multiple regions" single ((:url . "https://www.emacswiki.org/emacs/download/zones.el") (:keywords "narrow" "restriction" "widen" "region" "zone"))]) (zone-sl . [(20160201 410) ((emacs (24 3))) "Zone out with steam locomotives." single ((:commit . "7ec22e3661c6348382f9fc39a9d0063dbd2352ff") (:url . "https://github.com/kawabata/zone-sl") (:keywords "games"))]) (zone-select . [(20160118 619) ((emacs (24 3)) (dash (2 8))) "Select zone programs." single ((:commit . "bf30da12f1625fe6563448fccf3c506acad10af7") (:url . "https://github.com/kawabata/zone-select") (:keywords "games"))]) (zone-rainbow . [(20160120 534) ((emacs (24 3))) "Zone out with rainbow." single ((:commit . "2ba4f1a87c69c4712124ebf12c1f3ea171e1af36") (:url . "https://github.com/kawabata/zone-rainbow") (:keywords "games"))]) (zone-nyan . [(20161014 154) ((esxml (0 3 1))) "Zone out with nyan cat" single ((:commit . "0ec6328ee58d7d140c8c7be84822c07741f3ad2b") (:url . "https://github.com/wasamasa/zone-nyan") (:keywords "zone"))]) (zombie-trellys-mode . [(20150304 648) ((emacs (24)) (cl-lib (0 5)) (haskell-mode (1 5))) "A minor mode for interaction with Zombie Trellys" single ((:commit . "7f0c45fdda3a44c3b6d1762d116abb1421b8fba2") (:keywords "languages"))]) (zombie . [(20141222 816) nil "major mode for editing ZOMBIE programs" single ((:commit . "ff8cd1b4cdbb4b0b9b8fd1ec8f6fb93eba249345") (:url . "http://hins11.yu-yake.com/"))]) (znc . [(20160627 1332) ((cl-lib (0 2))) "ZNC + ERC" single ((:commit . "ce468d185e4a949c45fdd7586313144bc69d4fe5") (:url . "https://github.com/sshirokov/ZNC.el"))]) (zlc . [(20151010 1857) nil "Provides zsh like completion system to Emacs" single ((:commit . "4dd2ba267ecdeac845a7cbb3147294ee7daa25f4") (:keywords "matching" "convenience"))]) (zig-mode . [(20170413 130) ((emacs (24))) "A major mode for the Zig programming language" single ((:commit . "9a252ebd4ccd8a30abef3d9ed0ecb510e3d88844") (:url . "https://github.com/AndreaOrru/zig-mode") (:keywords "zig" "languages"))]) (zerodark-theme . [(20170607 1301) ((all-the-icons (2 0 0)) (magit (2 8 0)) (flycheck (29))) "A dark, medium contrast theme for Emacs" single ((:commit . "ab406749083a41e5ca7fe518949a09853f23e5d5") (:url . "https://github.com/NicolasPetton/zerodark-theme") (:keywords "themes"))]) (zenity-color-picker . [(20160302 354) ((emacs (24 4))) "Insert and adjust colors using Zenity" single ((:commit . "4f4f46676a461ebc881487fb70c8c181e323db5e") (:url . "https://bitbucket.org/Soft/zenity-color-picker.el") (:keywords "colors"))]) (zencoding-mode . [(20140213 22) nil "Unfold CSS-selector-like expressions to markup" single ((:commit . "58e42af182c98cb9941d27cd042d227fbf4e146c") (:url . "https://github.com/rooney/zencoding") (:keywords "convenience"))]) (zenburn-theme . [(20170511 1337) nil "A low contrast color theme for Emacs." single ((:commit . "2f31ef9a954ec08202668a8d1b004db5a05831a2") (:url . "http://github.com/bbatsov/zenburn-emacs"))]) (zen-and-art-theme . [(20120622 737) nil "zen and art color theme for GNU Emacs 24" single ((:commit . "a7226cbce0bca2501d69a620cb2aeabfc396c232"))]) (zeitgeist . [(20131228 1009) nil "No description available." single ((:commit . "cdd1c219ed3afa9500403c3c499f49583d599034"))]) (zeal-at-point . [(20170427 2042) nil "Search the word at point with Zeal" single ((:commit . "50a1bd4240ff0db7c8f2046c3b00c5a8e14b9d2f") (:url . "https://github.com/jinzhu/zeal-at-point"))]) (z3-mode . [(20151120 1455) ((flycheck (0 23)) (emacs (24))) "A z3/SMTLIBv2 interactive development environment" single ((:commit . "163dc01d59e9880b4dc188d4e1ad84d6c0c852e1") (:url . "https://github.com/zv/z3-mode") (:keywords "z3" "yices" "mathsat" "smt" "beaver"))]) (youdao-dictionary . [(20170226 49) ((popup (0 5 0)) (pos-tip (0 4 6)) (chinese-word-at-point (0 2)) (names (0 5)) (emacs (24))) "Youdao Dictionary interface for Emacs" single ((:commit . "44548f56a1c736e6a7fae4546657bff0a94bf3cb") (:url . "https://github.com/xuchunyang/youdao-dictionary.el") (:keywords "convenience" "chinese" "dictionary"))]) (yoshi-theme . [(20170330 0) nil "Theme named after my cat" single ((:commit . "eab4fb67e8fec47c25c4c1393ac1211f043dbd44") (:url . "http://projects.ryuslash.org/yoshi-theme/") (:keywords "faces"))]) (yesql-ghosts . [(20150220 437) ((s (1 9 0)) (dash (2 10 0)) (cider (0 8 0))) "Display ghostly yesql defqueries inline" single ((:commit . "8f1faf0137b85a5072d13e1240a463d9a35ce2bb"))]) (ydk-mode . [(20170113 121) nil "Language support for Yu-Gi-Oh! deck files" single ((:commit . "f3f125b29408e0b0a34fec27dcb7c02c5dbfd04e") (:url . "https://github.com/jacksonrayhamilton/ydk-mode") (:keywords "faces" "games" "languages" "ydk" "yugioh" "yu-gi-oh"))]) (ycmd . [(20170622 146) ((emacs (24 4)) (dash (2 13 0)) (s (1 11 0)) (deferred (0 5 1)) (cl-lib (0 6 1)) (let-alist (1 0 5)) (request (0 3 0)) (request-deferred (0 3 0)) (pkg-info (0 6))) "emacs bindings to the ycmd completion server" tar ((:commit . "43d690e4922dbf44e5deffc89cd06f2b1bd79ad2") (:url . "https://github.com/abingham/emacs-ycmd"))]) (ycm . [(20150822 1136) nil "Emacs client for the YouCompleteMe auto-completion server." single ((:commit . "4da8a14abcd0f4fa3235042ade2e12b5068c0601") (:keywords "c" "abbrev"))]) (yaxception . [(20150105 652) nil "Provide framework about exception like Java for Elisp" single ((:commit . "4e94cf3e0b9b5631b0e90eb4b7de597ee7185875") (:url . "https://github.com/aki2o/yaxception") (:keywords "exception" "error" "signal"))]) (yatex . [(20170611 1642) nil "Yet Another tex-mode for emacs //野鳥//" tar nil]) (yatemplate . [(20161108 1305) ((yasnippet (0 8 1)) (emacs (24 3))) "File templates with yasnippet" tar ((:commit . "3854836489ce06bb65cf9aecbdc06aa5fc6801c5") (:url . "https://github.com/mineo/yatemplate") (:keywords "files" "convenience"))]) (yasnippet . [(20170624 803) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar ((:commit . "65952e30547754eb5ed11750f0cd736095fd6700") (:url . "http://github.com/joaotavora/yasnippet") (:keywords "convenience" "emulation"))]) (yascroll . [(20170315 1206) ((cl-lib (0 3))) "Yet Another Scroll Bar Mode" single ((:commit . "fe4494e5f4faf2832e665c7de0fed99cdbb39478") (:keywords "convenience"))]) (yari . [(20151127 2339) nil "Yet Another RI interface for Emacs" single ((:commit . "a2cb9656ee5dfe1fc2ee3854f3079a1c8e85dbe9") (:keywords "tools"))]) (yard-mode . [(20160310 850) nil "Minor mode for Ruby YARD comments" single ((:commit . "78792f6a6fbff4f1bc955f494fdb11378e7f8095") (:url . "https://github.com/pd/yard-mode.el"))]) (yara-mode . [(20160821 724) ((emacs (24))) "Major mode for editing yara rule file" single ((:commit . "3ad06bc419329ec9c872fe3292da214b3aa9a1f1") (:url . "not distributed yet") (:keywords "yara"))]) (yapfify . [(20170519 115) nil "(automatically) format python buffers using YAPF." single ((:commit . "492eb038b35f49b1012fb843d880bccc40f2260b") (:url . "https://github.com/JorisE/yapfify"))]) (yaoddmuse . [(20170325 1752) nil "Major mode for EmacsWiki and other Oddmuse wikis" single ((:url . "http://www.emacswiki.org/emacs/download/yaoddmuse.el") (:keywords "yaoddmuse" "oddmuse"))]) (yankpad . [(20170607 819) ((emacs (24))) "Paste snippets from an org-mode file" single ((:commit . "70e755fcf58e37092de2c335355eab93d5f1fb44") (:url . "http://github.com/Kungsgeten/yankpad") (:keywords "abbrev" "convenience"))]) (yang-mode . [(20170323 1104) nil "major mode for editing YANG files" single ((:commit . "0d5d5df86dbb6cbb2de3c0f2d0d5f8c8f29d0695"))]) (yandex-weather . [(20160311 1237) nil "Fetch Yandex Weather forecasts." tar ((:commit . "6f823fd9e04ff9efb2aa65f333079e9f7e6e5b28"))]) (yaml-tomato . [(20151122 2353) ((s (1 9))) "copy or show the yaml path currently under cursor." single ((:commit . "f9df1c9bdfcec629b03031b2d2032f9dc533cb14") (:keywords "yaml"))]) (yaml-mode . [(20170406 241) ((emacs (24 1))) "Major mode for editing YAML files" single ((:commit . "64b28913bfe910b147d6ee16488dbaedb1452ca6") (:keywords "data" "yaml"))]) (yalinum . [(20130217 243) nil "yet another display line numbers." single ((:commit . "d3e0cbe3f4f5ca311e3298e684901d6fea3ad973") (:keywords "convenience" "tools"))]) (yahtzee . [(20170617 20) ((emacs (24 3))) "The yahtzee game" single ((:commit . "5fac6adb0772069820b240efe56e429bcce61b62") (:url . "https://github.com/drdv/yahtzee") (:keywords "games"))]) (yahoo-weather . [(20160703 2008) ((emacs (24))) "Displays weather information in mode-line" single ((:commit . "5154c320400fc20a8deb1b43e21f790709c4af76") (:url . "https://github.com/lujun9972/yahoo-weather-mode") (:keywords "weather" "mode-line"))]) (yagist . [(20160417 2208) ((cl-lib (0 3))) "Yet Another Emacs integration for gist.github.com" single ((:commit . "dcdbd84f348414815d02f3da8a6ee0ac271632d4") (:url . "https://github.com/mhayashi1120/yagist.el") (:keywords "tools"))]) (yafolding . [(20170304 1917) nil "Yet another folding extension for Emacs" single ((:commit . "57c015ddd7c3454571c80825bc5391d7a10fa1d7") (:keywords "folding"))]) (yabin . [(20140205 1951) nil "Yet Another Bignum package (A thin wrapper of calc.el)." single ((:commit . "db8c404507560ef9147fcce2b94cd706fbfa03b5") (:keywords "data"))]) (xwidgete . [(20161029 1112) ((emacs (25))) "enhances usability of current xwidget browser" single ((:commit . "adcf3f84772f4a382ba791a6584fa7dddfafdcdd") (:url . "https://github.com/tuhdo/xwidgete") (:keywords "xwidgete" "tools"))]) (xtest . [(20141214 906) ((cl-lib (0 5))) "Simple Testing with Emacs & ERT" single ((:commit . "2c2bdf32667506dd9ddf6eb311832add616bdf1c") (:url . "https://github.com/promethial/xtest") (:keywords "testing" "ert"))]) (xterm-title . [(20091203 1023) nil "Update xterm titles" single ((:commit . "b6ea73d297d191d48bba7dd1e2adc23bbdfa1c3c"))]) (xterm-keybinder . [(20160522 1756) ((emacs (24 3)) (cl-lib (0 5)) (let-alist (1 0 1))) "Let you extra keybinds in xterm/urxvt" tar ((:commit . "b29c4f700b0fa0c9f627f6725b36462b8fab06d6") (:keywords "convenient"))]) (xterm-frobs . [(20161207 1609) nil "manipulate xterm when running emacs in tty mode" single ((:commit . "0832d588598dbf6bd8aa8e05c611d7c098c3f9d8"))]) (xterm-color . [(20170102 1525) ((cl-lib (0 5))) "ANSI & XTERM 256 color support" single ((:commit . "5873477fd7bd6e54142ab35fbc623ea9b55200aa") (:url . "https://github.com/atomontage/xterm-color") (:keywords "faces"))]) (xresources-theme . [(20160331 702) nil "Use your .Xresources as your emacs theme" single ((:commit . "09a0bfc1684161dd1cdc899c027808a99646a652") (:keywords "xresources" "theme"))]) (xref-js2 . [(20170530 126) ((emacs (25)) (js2-mode (20150909))) "Jump to references/definitions using ag & js2-mode's AST" single ((:commit . "d5f93605405989529c2f66b542def6c32429b927") (:url . "https://github.com/NicolasPetton/xref-js2") (:keywords "javascript" "convenience" "tools"))]) (xquery-tool . [(20170605 126) nil "A simple interface to saxonb's xquery." single ((:commit . "0d1e2960c48701b83be5255d56324f65a6ee182e") (:url . "https://github.com/paddymcall/xquery-tool.el") (:keywords "xml" "xquery" "emacs"))]) (xquery-mode . [(20170214 319) ((cl-lib (0 5))) "A simple mode for editing xquery programs" single ((:commit . "1b655ccf83d02a7bd473d2cf02359ed60bdf7369") (:url . "https://github.com/xquery-mode/xquery-mode"))]) (xo . [(20160402 2346) nil "XO linter integration with compilation mode" single ((:commit . "72fcd867cfa332fdb82f732925cf8977e690af78") (:keywords "processes"))]) (xmlunicode . [(20160319 912) nil "Unicode support for XML" tar ((:commit . "f5d185da46414c0509ebd0aa0fab416becf94612") (:keywords "utf-8" "unicode" "xml" "characters"))]) (xmlgen . [(20170411 617) nil "A DSL for generating XML." single ((:commit . "dba66681f0c5e621a9e70e8afb34903c9ffe93c4"))]) (xml-rpc . [(20160430 1458) nil "An elisp implementation of clientside XML-RPC" single ((:commit . "0ab093d60140d19e31d217c8abdc7dbdac944486") (:url . "http://github.com/hexmode/xml-rpc-el") (:keywords "xml" "rpc" "network"))]) (xml-quotes . [(20151230 1449) nil "read quotations from an XML document" tar ((:commit . "26db170e80b9295861227cdf970721b12539ed44") (:url . "https://github.com/ndw/xml-quotes") (:keywords "xml" "quotations"))]) (xml+ . [(20160210 1942) ((emacs (24 4)) (dash (2 12 0))) "Utilities for xml and html trees" single ((:commit . "1b728dda31dd13506aa4e1220f925bb43c93847b") (:url . "https://github.com/bddean/xml-plus") (:keywords "xml" "html"))]) (xkcd . [(20160419 430) ((json (1 3))) "View xkcd from Emacs" single ((:commit . "66e928706fd660cfdab204c98a347b49c4267bdf") (:url . "https://github.com/vibhavp/emacs-xkcd") (:keywords "xkcd" "webcomic"))]) (xcscope . [(20160628 2324) nil "cscope interface for (X)Emacs" single ((:commit . "1e4c8e60eb841a3ecb56ff4115b6a8ae5c0bf779") (:url . "https://github.com/dkogan/xcscope.el") (:keywords "languages" "c"))]) (xcode-mode . [(20160907 508) ((emacs (24 4)) (s (1 10 0)) (dash (2 11 0)) (multiple-cursors (1 0 0))) "A minor mode for emacs to perform Xcode like actions." single ((:commit . "2ae4f512d6c601ea39d5ab785c2b5288eac24b59") (:keywords "conveniences"))]) (xbm-life . [(20160103 217) nil "A XBM version of Conway's Game of Life" single ((:commit . "dd6a98ac9ea81b681e68f6318fed47158e5d469e") (:url . "https://github.com/wasamasa/xbm-life") (:keywords "games"))]) (xahk-mode . [(20170523 1946) ((emacs (24 1))) "Major mode for editing AutoHotkey scripts." single ((:commit . "538b891a1565d109d079185b56332cd28dd846a7") (:url . "http://xahlee.info/mswin/emacs_autohotkey_mode.html") (:keywords "languages"))]) (xah-replace-pairs . [(20170221 2112) ((emacs (24 1))) "Multi-pair find/replace in strings and region." single ((:commit . "b5bd1ff843063f6eba32ab71f33f0ebde57d5e41") (:url . "http://ergoemacs.org/emacs/elisp_replace_string_region.html") (:keywords "lisp" "tools" "find replace"))]) (xah-reformat-code . [(20170111 812) nil "commands to reformat source code." single ((:commit . "7e5bbd09be8035a482a76417d900cb5d3a70e1cd") (:url . "http://ergoemacs.org/emacs/emacs_reformat_lines.html") (:keywords "convenience"))]) (xah-math-input . [(20170210 2128) ((emacs (24 1))) "a minor mode for inputting math and Unicode symbols." single ((:commit . "a4b8aa833f65c028f7f94b9c3b5b8993b8961736") (:url . "http://ergoemacs.org/emacs/xmsi-math-symbols-input.html") (:keywords "abbrev" "convenience" "unicode" "math" "latex"))]) (xah-lookup . [(20170517 1459) ((emacs (24 1))) "look up word on internet." single ((:commit . "3872d3273b472202052dfd63a7d8e388f9517830") (:url . "http://ergoemacs.org/emacs/xah-lookup.html") (:keywords "help" "docs" "convenience"))]) (xah-get-thing . [(20170527 1806) ((emacs (24 1))) "get thing or selection at point." single ((:commit . "5adaf02b8a7464ffb81ae185edb48902a4c3a4d4") (:url . "http://ergoemacs.org/emacs/elisp_get-selection-or-unit.html") (:keywords "extensions" "lisp" "tools"))]) (xah-fly-keys . [(20170630 1618) ((emacs (24 1))) "ergonomic modal keybinding minor mode." single ((:commit . "960e180fbd84286bbba0569e72807e87ebac2f69") (:url . "http://ergoemacs.org/misc/ergoemacs_vi_mode.html") (:keywords "convenience" "emulations" "vim" "ergoemacs"))]) (xah-find . [(20170407 251) ((emacs (24 1))) "find replace in pure emacs lisp. Purpose similar to grep/sed." single ((:commit . "a83fd078b9b475edc5fd29e0c7d4f02f203e0390") (:url . "http://ergoemacs.org/emacs/elisp-xah-find-text.html") (:keywords "convenience" "extensions" "files" "tools" "unix"))]) (xah-elisp-mode . [(20170620 1705) ((emacs (24 3))) "Major mode for editing emacs lisp." single ((:commit . "1ecbe880d6aea24a77a8bd903e2c82225a35caf4") (:url . "http://ergoemacs.org/emacs/xah-elisp-mode.html") (:keywords "lisp" "languages"))]) (xah-css-mode . [(20170517 1634) ((emacs (24 3))) "Major mode for editing CSS code." single ((:commit . "a5a19ee45b54eff7eeccd81b65ba42a0e9c7ba4c") (:url . "http://ergoemacs.org/emacs/xah-css-mode.html") (:keywords "languages" "convenience" "css" "color"))]) (x86-lookup . [(20161215 448) ((emacs (24 3)) (cl-lib (0 3))) "jump to x86 instruction documentation" single ((:commit . "544a1ad4e8551c60e58e6c431470b6ef4ce7c5cb") (:url . "https://github.com/skeeto/x86-lookup"))]) (x-path-walker . [(20160922 1135) ((helm-core (1 9 2))) "Navigation feature for JSON/XML/HTML based on path (imenu like)" tar ((:commit . "3b01dbd7a039c6c84fdf8c8ee53ba72090ee950a") (:keywords "convenience"))]) (x-dict . [(20091203 1023) nil "emacs interface for several online dictionaries" single ((:commit . "920b2430bff9fb8c4bb7944aa358622545c00cee"))]) (www-synonyms . [(20170128 1451) ((request (0 2 0)) (cl-lib (0 5))) "insert synonym for a word" single ((:commit . "7e37ea35064ff31c9945f0198a653647d408c936") (:keywords "lisp"))]) (wwtime . [(20151122 810) nil "Insert a time of day with appropriate world-wide localization" single ((:commit . "d04d8fa814b5d3644efaeb28f25520ada69acbbd") (:keywords "time"))]) (wttrin . [(20170614 506) ((emacs (24 4)) (xterm-color (1 0))) "Emacs frontend for weather web service wttr.in" single ((:commit . "df5427ce2a5ad4dab652dbb1c4a1834d7ddc2abc") (:url . "https://github.com/bcbcarl/emacs-wttrin") (:keywords "comm" "weather" "wttrin"))]) (wsd-mode . [(20160930 236) nil "Emacs major-mode for www.websequencediagrams.com" tar ((:commit . "cdbdf48f60900cedca2805a8b0875327a3a81f19") (:url . "https://github.com/josteink/wsd-mode") (:keywords "wsd" "diagrams" "design" "process" "modelling" "uml"))]) (ws-butler . [(20170111 1534) nil "Unobtrusively remove trailing whitespace." single ((:commit . "80dabd5d158929e8433e46207bb521282b21e4f3") (:url . "https://github.com/lewang/ws-butler"))]) (writeroom-mode . [(20170623 327) ((emacs (24 1)) (visual-fill-column (1 9))) "Minor mode for distraction-free writing" tar ((:commit . "9e924dd7dd83f10b026c89cddef7e1646f1a3869") (:keywords "text"))]) (writegood-mode . [(20160802 1405) nil "Polish up poor writing on the fly" single ((:commit . "a99896531a260db11acb931b68dbdc45030832d7") (:url . "http://github.com/bnbeckwith/writegood-mode") (:keywords "writing" "weasel-words" "grammar"))]) (wrap-region . [(20140116 2320) ((dash (1 0 3))) "Wrap text with punctation or tag" single ((:commit . "0eff3165db36464d28ed303ab25b715307cbdee0") (:url . "http://github.com/rejeep/wrap-region") (:keywords "speed" "convenience"))]) (wotd . [(20170328 1248) ((emacs (24 4)) (org (8 2 10))) "Fetch word-of-the-day from multiple online sources" single ((:commit . "d2937a3d91e014f8028a1f33d21c18cc0b065a64") (:keywords "extensions"))]) (world-time-mode . [(20140627 107) nil "show whole days of world-time diffs" single ((:commit . "ce7a3b45c87eb24cfe61eee453175d64f741d7cc") (:keywords "tools" "calendar"))]) (workgroups2 . [(20141102 1122) ((cl-lib (0 4)) (dash (2 8 0)) (anaphora (1 0 0)) (f (0 17))) "New workspaces for Emacs" single ((:commit . "928d509157ec8a4a2e343b6115dff034c3243a7a") (:url . "https://github.com/pashinin/workgroups2") (:keywords "session" "management" "window-configuration" "persistence"))]) (workgroups . [(20110726 941) nil "workgroups for windows (for Emacs)" single ((:commit . "9572b3492ee09054dc329f64ed846c962b395e39") (:keywords "session" "management" "window-configuration" "persistence"))]) (worf . [(20170427 8) ((swiper (0 7 0)) (ace-link (0 1 0)) (hydra (0 13 0)) (zoutline (0 1 0))) "A warrior does not press so many keys! (in org-mode)" single ((:commit . "8b0de0d0896aa82a31d13972baf15de56ca5516e") (:url . "https://github.com/abo-abo/worf") (:keywords "lisp"))]) (wordsmith-mode . [(20151117 236) nil "Syntax analysis and NLP text-processing in Emacs (OSX-only)" single ((:commit . "597e1e7c7ef89b06ed8280251ecd8f40ce55e1bf"))]) (wordnut . [(20151002 1457) ((emacs (24 4))) "Major mode interface to WordNet" tar ((:commit . "bcdb86f1f7ee91f721a427b19492ee9578ae74fc"))]) (wordgen . [(20161104 944) ((emacs (24)) (cl-lib (0 5))) "Random word generator" single ((:commit . "c46d8da6dae8c82d3a5d8b903a12dd5f2ae94939") (:url . "https://github.com/Fanael/wordgen.el"))]) (wonderland . [(20130912 1819) ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) "declarative configuration for Emacsen" single ((:commit . "89d274ad694b0e748efdac23ccd60b7d8b73d7c6") (:url . "http://github.com/kurisuwhyte/emacs-wonderland") (:keywords "configuration" "profile" "wonderland"))]) (wolfram-mode . [(20170221 120) nil "No description available." single ((:commit . "d27a0f23791abde2bdda22e50108b99f11c13ed7"))]) (wolfram . [(20170122 2356) nil "Wolfram Alpha Integration" single ((:commit . "6b5dceae3fd6cdb4d7562510deeafa02c93c010b") (:keywords "math"))]) (wn-mode . [(20151109 2152) ((emacs (24))) "numeric window switching shortcuts" single ((:commit . "f05c3151523e529af5a0a3fa8c948b61fb369f6e") (:url . "https://github.com/luismbo/wn-mode") (:keywords "buffers" "windows" "switching-windows"))]) (with-namespace . [(20130407 1122) ((dash (1 1 0)) (loop (1 1))) "interoperable elisp namespaces" single ((:commit . "8ac52da3a09cf46087720e30cf730d00f140cde6") (:keywords "namespaces"))]) (with-editor . [(20170702 442) ((emacs (24 4)) (async (1 9)) (dash (2 13 0))) "Use the Emacsclient as $EDITOR" tar ((:commit . "9fc047751b537178b5123fead9426d72b794b4d3") (:url . "https://github.com/magit/with-editor") (:keywords "tools"))]) (wispjs-mode . [(20140103 1432) ((clojure-mode (0))) "Major mode for Wisp code." single ((:commit . "be094c3c3223c07b26b5d8bb8fa7aa6866369b3f") (:url . "https://github.com/krisajenkins/wispjs-mode"))]) (wisp-mode . [(20160419 1232) nil "Tools for wisp: the Whitespace-to-Lisp preprocessor" single ((:keywords "languages" "lisp"))]) (winum . [(20170430 1629) ((cl-lib (0 5))) "Navigate windows and frames using numbers." single ((:commit . "e950370d82cbb90ba291fc1c32de5d6f35068932") (:url . "http://github.com/deb0ch/winum.el") (:keywords "convenience" "frames" "windows" "multi-screen"))]) (winring . [(20150804 1108) nil "Window configuration rings" single ((:commit . "ad400939b420b5a7914103b7cfe3f0f6574ea48f") (:url . "https://gitlab.com/warsaw/winring") (:keywords "frames" "tools"))]) (winpoint . [(20131023 1013) nil "Remember buffer positions per-window, not per buffer" single ((:commit . "e6050093c076308184566fa1d1012423d6934773") (:url . "https://github.com/jorgenschaefer/winpoint") (:keywords "convenience"))]) (windsize . [(20151121 540) nil "Simple, intuitive window resizing" single ((:commit . "beb6376fdf52afa6f220c89032448460faf76e7f") (:url . "http://github.com/grammati/windsize") (:keywords "window" "resizing" "convenience"))]) (window-purpose . [(20161017 433) ((emacs (24)) (cl-lib (0 5)) (let-alist (1 0 3)) (imenu-list (0 1))) "Purpose-based window management for Emacs" tar ((:commit . "67ecaa2b52c113f92913c3beb9fb7f302bd50318") (:url . "https://github.com/bmag/emacs-purpose") (:keywords "frames"))]) (window-numbering . [(20160809 1110) nil "Numbered window shortcuts" single ((:commit . "10809b3993a97c7b544240bf5d7ce9b1110a1b89") (:url . "http://nschum.de/src/emacs/window-numbering-mode/") (:keywords "faces" "matching"))]) (window-number . [(20141106 1829) nil "Select windows by numbers." single ((:commit . "1d222f0b48c8d51bad956c3000ff0635b883a355") (:url . "https://github.com/nikolas/window-number") (:keywords "windows"))]) (window-layout . [(20170214 1633) nil "window layout manager" single ((:commit . "cd2e4f967b610c2bbef53182829e47250d027056") (:keywords "window" "layout"))]) (window-jump . [(20150213 1236) nil "Move left/right/up/down through your windows." single ((:commit . "164be41b588b615864258c502583100d3ccfe13e") (:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience"))]) (window-end-visible . [(20140508 1341) nil "Find the last visible point in a window" single ((:commit . "525500fb2ebc08f3f9ea493972e5f2e1d79f89ef") (:url . "http://github.com/rolandwalker/window-end-visible") (:keywords "extensions"))]) (window+ . [(20170309 1437) nil "Extensions to `window.el'." single ((:url . "https://www.emacswiki.org/emacs/download/window%2b.el") (:keywords "internal" "window"))]) (windata . [(20090830 340) nil "convert window configuration to list" single ((:commit . "a723fc446ceaec23d5f29ecc8245d94c99d91625") (:keywords "convenience" "frames"))]) (win-switch . [(20161009 927) nil "fast, dynamic bindings for window-switching/resizing" single ((:commit . "954eb5e4c5737f0c06368c42a7f1c3dd374d782f") (:url . "http://www.stat.cmu.edu/~genovese/emacs/win-switch/") (:keywords "window" "switch" "key bindings" "ergonomic" "efficient"))]) (wimpy-del . [(20170309 1436) nil "Require confirmation for large region deletion." single ((:url . "https://www.emacswiki.org/emacs/download/wimpy-del.el") (:keywords "region" "cut" "kill" "copy"))]) (wilt . [(20151105 518) ((emacs (24 3)) (dash (2 12 0)) (s (1 10 0))) "An extensions for calculating WILT in a buffer." single ((:commit . "5febe367c6c3729848654358af4d17ee2987da8d") (:url . "https://github.com/sixty-north/emacs-wilt"))]) (wiki-summary . [(20150408 1422) ((emacs (24))) "View Wikipedia summaries in Emacs easily." single ((:commit . "ed3755dd09f5f73ef78ec295fe842d08b316c8a0") (:url . "https://github.com/jozefg/wiki-summary.el") (:keywords "wikipedia" "utility"))]) (wiki-nav . [(20150223 554) ((button-lock (1 0 2)) (nav-flash (1 0 0))) "Simple file navigation using [[WikiStrings]]" single ((:commit . "f9082feb329432fcf2ac49a95e64bed9fda24d58") (:url . "http://github.com/rolandwalker/button-lock") (:keywords "mouse" "button" "hypermedia" "navigation"))]) (widgetjs . [(20160719 804) ((makey (0 3)) (js2-mode (20140114)) (js2-refactor (0 6 1)) (s (1 9 0))) "Widgetjs mode" single ((:commit . "74daf284e32bf84d29377d1d7a638b640ebf8f76") (:keywords "help"))]) (widget-mvc . [(20150101 2006) nil "MVC framework for the emacs widgets" single ((:commit . "ff5a85880df7b87f9f480fe3c28438a0712b7b87") (:keywords "lisp" "widget"))]) (wide-column . [(20120814 112) nil "Calls functions dependant on column position." single ((:commit . "0b382e7a3ceecafcea6c9e7e742fb6d11641b04b") (:keywords "minor mode" "cursor colour" "column width"))]) (wid-edit+ . [(20170309 1434) nil "Extensions to standard library `wid-edit.el'." single ((:url . "https://www.emacswiki.org/emacs/download/wid-edit%2b.el") (:keywords "widget" "color"))]) (whole-line-or-region . [(20110901 130) nil "operate on current line if region undefined" single ((:commit . "a60e022b30c2f4d3118bcaef1adb77b90e0ca941") (:keywords "kill" "yank" "cut" "copy" "paste" "whole" "lines"))]) (whizzml-mode . [(20170525 818) ((emacs (24 4))) "Programming mode for editing WhizzML files" tar ((:commit . "92986cbb260642c129b049950036b2b6698a8bd9") (:keywords "languages" "lisp"))]) (whitespace-cleanup-mode . [(20170505 1923) nil "Intelligently call whitespace-cleanup on save" single ((:commit . "d375bfb61cb70947a93004cba8ea17a0bc76f5a9") (:url . "https://github.com/purcell/whitespace-cleanup-mode") (:keywords "convenience"))]) (white-theme . [(20160917 1043) ((emacs (24))) "Minimalistic light color theme inspired by basic-theme" single ((:commit . "e9e6d5b9d43da6eb15e86f5fbc8b1ba83abe8c78") (:url . "http://github.com/anler/white-theme.el") (:keywords "color" "theme" "minimal" "basic" "simple" "white"))]) (white-sand-theme . [(20151117 848) ((emacs (24))) "Emacs theme with a light background." single ((:commit . "97621edd69267dd143760d94393db2c2558c9ea4"))]) (whitaker . [(20150814 422) ((dash (2 10 0))) "Comint interface for Whitaker's Words" single ((:commit . "eaf26ea647b729ca705b73ea70312d5ffdf89448") (:keywords "processes"))]) (which-key . [(20170530 526) ((emacs (24 4))) "Display available keybindings in popup" single ((:commit . "3144b4c1fc774b63fc2350a0171e8ef01ab63298") (:url . "https://github.com/justbur/emacs-which-key"))]) (what-the-commit . [(20150901 616) nil "Random commit message generator" single ((:commit . "868c80a1b8614bcbd2225cd0290142c72f2a7956") (:url . "http://barbarito.me/") (:keywords "git" "commit" "message"))]) (wgrep-pt . [(20140510 1531) ((wgrep (2 1 5))) "Writable pt buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-pt.el") (:keywords "grep" "edit" "extensions"))]) (wgrep-helm . [(20170510 1539) ((wgrep (2 1 1))) "Writable helm-grep-mode buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-helm.el") (:keywords "grep" "edit" "extensions"))]) (wgrep-ag . [(20160923 403) ((wgrep (2 1 5)) (cl-lib (0 5))) "Writable ag buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ag.el") (:keywords "grep" "edit" "extensions"))]) (wgrep-ack . [(20141012 311) ((wgrep (2 1 1))) "Writable ack-and-a-half buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep-ack.el") (:keywords "grep" "edit" "extensions"))]) (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" single ((:commit . "1cdd7c136f1e7565bb13d2df69be3dc77b83698d") (:url . "http://github.com/mhayashi1120/Emacs-wgrep/raw/master/wgrep.el") (:keywords "grep" "edit" "extensions"))]) (weibo . [(20150307 1442) ((cl-lib (0 5))) "Weibo client for Emacs" tar ((:commit . "a8abb50b7602fe15fe2bc6400ac29780e956b390") (:url . "https://github.com/austin-----/weibo.emacs") (:keywords "weibo"))]) (weechat-alert . [(20160416 548) ((weechat (0 3 1)) (cl-lib (0 5)) (alert (1 2))) "Weechat notifier using alerts" single ((:commit . "a8fd557c8f335322f132c1c6c08b6741d6394e2e") (:url . "https://github.com/kungi/weechat-alert") (:keywords "irc" "chat" "network" "weechat"))]) (weechat . [(20161211 259) ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) "Chat via WeeChat's relay protocol in Emacs" tar ((:commit . "a0d81074088d313dd596af6602e51d4253a55ca5"))]) (wedge-ws . [(20140714 1449) nil "Wedge whitespace between columns in text" single ((:commit . "4669115f02d9c6fee067cc5369bb38c0f9db88b2") (:keywords "formatting" "indentation"))]) (websocket . [(20170610 2117) nil "Emacs WebSocket client and server" single ((:commit . "a9b8e74fa190024cd450ef4f832482e8438674fa") (:keywords "communication" "websocket" "server"))]) (webpaste . [(20170612 1352) ((emacs (24 4)) (request (0 2 0)) (cl-lib (0 5))) "Paste to pastebin-like services" single ((:commit . "4b32baa166059d41092d6a13a4babc3918fb0436") (:url . "https://github.com/etu/webpaste.el") (:keywords "convenience" "comm" "paste"))]) (weblogger . [(20110926 918) ((xml-rpc (1 6 8))) "Weblog maintenance via XML-RPC APIs" single ((:commit . "b3dd4aead9d3a87e6d85e7fef4f4f3bd40d87b53") (:url . "http://launchpad.net/weblogger-el") (:keywords "weblog" "blogger" "cms" "movable" "type" "openweblog" "blog"))]) (web-server . [(20140905 1706) ((emacs (24 3))) "Emacs Web Server" tar ((:commit . "469cd3bc117bfb8da0c03a2a2fb185e80c81d068") (:url . "https://github.com/eschulte/emacs-web-server") (:keywords "http" "server" "network"))]) (web-narrow-mode . [(20170406 1910) ((web-mode (14 0 27))) "quick narrow code block in web-mode" single ((:commit . "73bdcb7d0701abe65dab4fc295d944885e05ae33") (:url . "https://github.com/Qquanwei/web-narrow-mode") (:keywords "web-mode" "react" "narrow" "web"))]) (web-mode-edit-element . [(20161114 954) ((emacs (24 4)) (web-mode (14))) "Helper-functions for attribute- and element-handling" tar ((:commit . "8b8ac07aa8c920dafd94c96a51effb0d6c0ed1ce") (:url . "https://github.com/jtkDvlp/web-mode-edit-element") (:keywords "languages" "convenience"))]) (web-mode . [(20170613 959) ((emacs (23 1))) "major mode for editing web templates" single ((:commit . "8c35710775de9369f0637a9bd5fde39e4074db72") (:url . "http://web-mode.org") (:keywords "languages"))]) (web-completion-data . [(20160318 148) nil "Shared completion data for ac-html and company-web" tar ((:commit . "c272c94e8a71b779c29653a532f619acad433a4f") (:url . "https://github.com/osv/web-completion-data") (:keywords "html" "auto-complete" "company"))]) (web-beautify . [(20161115 1447) nil "Format HTML, CSS and JavaScript/JSON" single ((:commit . "e1b45321d8c11b404b12c8e55afe55eaa7c84ee9") (:url . "https://github.com/yasuyk/web-beautify"))]) (web . [(20141231 1201) ((dash (2 9 0)) (s (1 5 0))) "useful HTTP client" single ((:commit . "483188dac4bc6b409b985c9dae45f3324a425efd") (:url . "http://github.com/nicferrier/emacs-web") (:keywords "lisp" "http" "hypermedia"))]) (weather-metno . [(20150831 1807) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar ((:commit . "bfc7137095e0ee71aad70ac46f2af677f3c051b6"))]) (wcheck-mode . [(20160711 2213) nil "General interface for text checkers" tar ((:commit . "d56345a1ec910a7d95103a441536cfba10ec9672"))]) (wc-mode . [(20170126 2029) nil "Running word count with goals (minor mode)" single ((:commit . "f218f42709a651b34d6c1ddd98856f44648ef707") (:url . "https://github.com/bnbeckwith/wc-mode"))]) (wc-goal-mode . [(20140829 659) nil "Running word count with goals (minor mode)" single ((:commit . "bf21ab9c5a449bcc20dd207a4915dcec218d2699") (:url . "https://github.com/bnbeckwith/wc-goal-mode"))]) (wavefront-obj-mode . [(20150501 1116) nil "Major mode for Wavefront obj files" single ((:commit . "75eedad052848e82cdd94064764956b906e6d6b2") (:url . "http://github.com/abend/wavefront-obj-mode"))]) (watch-buffer . [(20120331 1344) nil "run a shell command when saving a buffer" single ((:commit . "761fd7252e6d7bf5148283c2a7ee935f087d9427") (:url . "https://github.com/mjsteger/watch-buffer") (:keywords "automation" "convenience"))]) (warm-night-theme . [(20161101 728) ((emacs (24))) "Emacs 24 theme with a dark background." single ((:commit . "020f084d23409b5035150508ba6e57c2509edd64"))]) (wanderlust . [(20170627 2306) ((semi (1 14 7))) "Yet Another Message Interface on Emacsen" tar ((:commit . "770d54fafb1a0a140b449e6132db22e70b4d6aa9"))]) (wandbox . [(20170603 531) ((emacs (24)) (request (0 3 0)) (s (1 10 0))) "Wandbox client" tar ((:commit . "e002fe41f2cd9b4ce2b1dc80b83301176e9117f1") (:url . "https://github.com/kosh04/emacs-wandbox") (:keywords "tools"))]) (wand . [(20170412 1315) ((dash (20161121 55)) (s (20160928 636))) "Magic wand for Emacs - Select and execute" tar ((:commit . "3674f2edaa6ac30c314a885b229204f978ddce14") (:url . "https://github.com/cmpitg/wand") (:keywords "extensions" "tools"))]) (wakatime-mode . [(20170517 2053) nil "Automatic time tracking extension for WakaTime" single ((:commit . "b1eae15f38a367017e519c10837c44650631b154") (:keywords "calendar" "comm"))]) (waher-theme . [(20141115 430) ((emacs (24 1))) "Emacs 24 theme based on waher for st2 by dduckster" single ((:commit . "60d31519fcfd8e797723d47961b255ae2f2e2c0a") (:url . "https://github.com/jasonm23/emacs-waher-theme"))]) (waf-mode . [(20170403 1240) nil "Waf integration for Emacs" single ((:commit . "20c75eabd1d54fbce8e0dbef785c9fb68577ee4f") (:url . "https://bitbucket.org/dvalchuk/waf-mode"))]) (wacspace . [(20140826 2232) ((dash (1 2 0)) (cl-lib (0 2))) "The WACky WorkSPACE manager for emACS" tar ((:commit . "4a11168d58c9c129cfcd04a1c9581962565eca4a"))]) (w3m . [(20170630 1247) nil "an Emacs interface to w3m" tar ((:keywords "w3m" "www" "hypermedia"))]) (w32browser-dlgopen . [(20170309 1433) nil "Use w32browser with standard Windows Open File box." single ((:url . "https://www.emacswiki.org/emacs/download/w32browser-dlgopen.el") (:keywords "files" "extensions" "convenience" "dialog"))]) (w32-browser . [(20170308 1518) nil "Run Windows application associated with a file." single ((:url . "https://www.emacswiki.org/emacs/download/w32-browser.el") (:keywords "mouse" "dired" "w32" "explorer"))]) (vue-mode . [(20170621 652) ((mmm-mode (0 5 4)) (vue-html-mode (0 1)) (ssass-mode (0 1))) "Major mode for vue component based on web-mode and mmm-mode" single ((:commit . "b5ecf28ec78033ddaac69065492fa4fd1d07637e") (:keywords "languages"))]) (vue-html-mode . [(20170225 2301) nil "Major mode for editing Vue.js templates" single ((:commit . "e9708b80a319af14266562d8bf920747e94f1cf8") (:url . "http://github.com/AdamNiederer/vue-html-mode") (:keywords "languages" "vue" "template"))]) (volume . [(20150718 1309) nil "tweak your sound card volume from Emacs" single ((:commit . "ecc1550b3c8b501d37e0f0116b54b535d15f90f6") (:url . "http://www.brockman.se/software/volume-el/"))]) (volatile-highlights . [(20160611 1855) nil "Minor mode for visual feedback on some operations." single ((:commit . "9a20091f0ce7fc0a6b3e641a6a46d5f3ac4d8392") (:url . "http://www.emacswiki.org/emacs/download/volatile-highlights.el") (:keywords "emulations" "convenience" "wp"))]) (voca-builder . [(20161101 945) ((popup (0 5 2))) "Helps you build up your vocabulary" single ((:commit . "51573beec8cd8308477b0faf453aad93e17f57c5") (:url . "https://github.com/yitang/voca-builder") (:keywords "english" "vocabulary"))]) (vmd-mode . [(20161106 125) ((emacs (24 3))) "Fast Github-flavored Markdown preview using a vmd subprocess." single ((:commit . "e3b27f4f179002984643895292bb207c3e221a5c") (:url . "https://github.com/blak3mill3r/vmd-mode") (:keywords "markdown" "preview" "live" "vmd"))]) (vline . [(20120108 445) nil "show vertical line (column highlighting) mode." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/vline.el") (:keywords "faces" "editing" "emulating"))]) (vlf . [(20170501 932) nil "View Large Files" tar ((:commit . "55e0c404c802c4cf056a8dde94a77df2970a42c7") (:url . "https://github.com/m00natic/vlfi") (:keywords "large files" "utilities"))]) (vkill . [(20091203 1022) nil "view and kill Unix processes from within Emacs" single ((:commit . "8ffe640ed03ddcc23db1c74c76d1acbf25250ad9"))]) (visual-regexp-steroids . [(20170221 1853) ((visual-regexp (1 1))) "Extends visual-regexp to support other regexp engines" tar ((:commit . "a6420b25ec0fbba43bf57875827092e1196d8a9e") (:url . "https://github.com/benma/visual-regexp-steroids.el/") (:keywords "external" "foreign" "regexp" "replace" "python" "visual" "feedback"))]) (visual-regexp . [(20170228 1716) ((cl-lib (0 2))) "A regexp/replace command for Emacs with interactive visual feedback" single ((:commit . "b3096c2d391ff4e28a2a4e8cd82efbf11071ea85") (:url . "https://github.com/benma/visual-regexp.el/") (:keywords "regexp" "replace" "visual" "feedback"))]) (visual-fill-column . [(20170502 1300) ((emacs (24 3))) "fill-column for visual-line-mode" single ((:commit . "57c2a72d46900117ea92e0a01b97e19481800503"))]) (visual-ascii-mode . [(20150129 246) nil "Visualize ascii code (small integer) on buffer." single ((:commit . "99285a099a17472ddd9f1b4f74e9d092dd8c5947") (:url . "https://github.com/Dewdrops/visual-ascii-mode") (:keywords "presentation"))]) (visible-mark . [(20150623 2150) nil "Make marks visible." single ((:commit . "a584db9bc88953b23a9648b3e14ade90767207f8") (:url . "https://gitlab.com/iankelling/visible-mark") (:keywords "marking" "color" "faces"))]) (virtualenvwrapper . [(20161002 1515) ((dash (1 5 0)) (s (1 6 1))) "a featureful virtualenv tool for Emacs" single ((:commit . "5649028ea0c049cb7dfa2105285dee9c00d189fb") (:url . "http://github.com/porterjamesj/virtualenvwrapper.el") (:keywords "python" "virtualenv" "virtualenvwrapper"))]) (virtualenv . [(20140220 1501) nil "Virtualenv for Python" single ((:commit . "276c0f4d6493b402dc4d22ecdf17b2b072e911b3") (:keywords "python" "virtualenv"))]) (vimrc-mode . [(20150607 913) nil "Major mode for vimrc files" single ((:commit . "fae7604e5ea6eef104d8c68598c3bbf9d798aa74") (:url . "https://github.com/mcandre/vimrc-mode") (:keywords "languages" "vim"))]) (vimish-fold . [(20170606 539) ((emacs (24 4)) (cl-lib (0 5)) (f (0 18 0))) "Fold text like in Vim" single ((:commit . "527a1d9b9e031713c29f12d1a82f1fdac50c5610") (:url . "https://github.com/mrkkrp/vimish-fold") (:keywords "convenience"))]) (vimgolf . [(20170323 600) nil "VimGolf interface for the One True Editor" single ((:commit . "741e414ec24072af05471058a5719271bfcfe766") (:keywords "games" "vimgolf" "vim"))]) (vim-region . [(20140329 924) ((expand-region (20140127))) "Select region as vim" single ((:commit . "7c4a99ce3678fee40c83ab88e8ad075d2a935fdf") (:url . "https://github.com/ongaeshi/emacs-vim-region"))]) (vim-empty-lines-mode . [(20150110 2026) ((emacs (23))) "Vim-like empty line indicator at end of files." single ((:commit . "d4a5034ca8ea0c962ad6e92c86c0fa2a74d2964b") (:url . "https://github.com/jmickelin/vim-empty-lines-mode") (:keywords "emulations"))]) (viking-mode . [(20160705 1327) nil "kill first, ask later" single ((:commit . "c76aa265d13ad91d6890d242e142d05e31f0340b") (:url . "https://github.com/tlinden/viking-mode") (:keywords "kill" "delete"))]) (viewer . [(20170106 1802) nil "View-mode extension" single ((:commit . "6c8db025bf4021428f7f2c3ef9d74fb13f5d267a") (:url . "http://github.com/rubikitch/viewer/") (:keywords "view" "extensions"))]) (vi-tilde-fringe . [(20141027 1942) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." single ((:commit . "f1597a8d54535bb1d84b442577b2024e6f910308") (:url . "https://github.com/syl20bnr/vi-tilde-fringe") (:keywords "emulation"))]) (vhdl-tools . [(20170701 1603) ((ggtags (0 8 12)) (emacs (25 2)) (outshine (2 0)) (helm (2 8 0))) "Utilities for navigating vhdl sources." single ((:commit . "c08343904835cbae12f48e0758b0a6a014d76a74") (:url . "https://csantosb.github.io/vhdl-tools/") (:keywords "vhdl"))]) (vhdl-capf . [(20160221 934) nil "Completion at point function (capf) for vhdl-mode." single ((:commit . "290abe217050f33532bc9ccb04f894123402f414") (:url . "https://github.com/sh-ow/vhdl-capf") (:keywords "convenience" "usability" "vhdl" "completion"))]) (vertigo . [(20160429 2105) ((dash (2 11 0))) "Jump across lines using the home row." single ((:commit . "70b56a57c3a37735cc9e92ffaa6dc27c64437738") (:url . "https://github.com/noctuid/vertigo.el") (:keywords "vim" "vertigo"))]) (vertica . [(20131217 711) ((sql (3 0))) "Vertica SQL mode extension" single ((:commit . "3c9647b425c5c13c30bf0cba483646af18196588") (:keywords "sql" "vertica"))]) (verify-url . [(20160426 528) ((cl-lib (0 5))) "find out invalid urls in the buffer or region" single ((:commit . "d6f3623cda8cd526a2d198619b137059cb1ba1ab") (:url . "https://github.com/lujun9972/verify-url") (:keywords "convenience" "usability" "url"))]) (vector-utils . [(20140508 1341) nil "Vector-manipulation utility functions" single ((:commit . "c38ca1c6a23b2b51a6ac36c2c64e50e21cbe9d21") (:url . "http://github.com/rolandwalker/vector-utils") (:keywords "extensions"))]) (vdirel . [(20170605 43) ((emacs (24 4)) (org-vcard (0 1 0)) (helm (1 7 0)) (seq (1 11))) "Manipulate vdir (i.e., vCard) repositories" single ((:commit . "a1e6ea3ed5faaf70667c62bc5591dc810331cb1a"))]) (vdiff-magit . [(20170519 1407) ((emacs (24 4)) (vdiff (0 3)) (magit (2 10 0))) "magit integration for vdiff" single ((:commit . "1ccf0a8be5aad18648fd59c775a8dd6070398b74") (:url . "https://github.com/justbur/emacs-vdiff-magit") (:keywords "diff"))]) (vdiff . [(20170525 1231) ((emacs (24 4)) (hydra (0 13 0))) "A diff tool similar to  vimdiff" single ((:commit . "66ae1ac324d9ec7ef87abee38f260734f036cf3d") (:url . "https://github.com/justbur/emacs-vdiff") (:keywords "diff"))]) (vcomp . [(20140906 1508) nil "compare version strings" single ((:commit . "092ef48a78e950c0576269d889be6caf9f6e61c5") (:url . "https://github.com/tarsius/vcomp") (:keywords "versions"))]) (vcl-mode . [(20170119 1251) nil "Syntax highlighting for Varnish Command Language" single ((:commit . "3d86c1352a7370d558d25f4c8f7be744e7d27332"))]) (vc-osc . [(20161119 1155) nil "non-resident support for osc version-control" single ((:commit . "8c09a0d5f69237285101554261b77d76b546a24b"))]) (vc-fossil . [(20161030 842) nil "VC backend for the fossil sofware configuraiton management system" tar ((:commit . "066a1c591c18102d199407e303ccdd0dd8c26be9"))]) (vc-darcs . [(20170409 623) ((emacs (24))) "a VC backend for darcs" single ((:commit . "9c5cbf6fd9b624a31e918dd1a516b24d8b7ffe9d") (:keywords "vc"))]) (vc-check-status . [(20170107 534) nil "Warn you when quitting emacs and leaving repo dirty." tar ((:commit . "37734beb16bfd8633ea328059bf9a47eed826d5c") (:url . "https://github.com/thisirs/vc-check-status") (:keywords "vc" "convenience"))]) (vc-auto-commit . [(20170107 533) nil "Auto-committing feature for your repository" tar ((:commit . "446f664f4ec835532f4f18ba18b5fb731f6030aa") (:url . "http://github.com/thisirs/vc-auto-commit.git") (:keywords "vc" "convenience"))]) (vbasense . [(20140221 1553) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a environment like Visual Basic Editor." tar ((:commit . "8c61a492d7c15218ae1a96e2aebfe6f78bfff6db") (:url . "https://github.com/aki2o/emacs-vbasense") (:keywords "vba" "completion"))]) (vala-snippets . [(20150428 2052) ((yasnippet (0 8 0))) "Yasnippets for Vala" tar ((:commit . "671439501060449bd100b9fffd524a86064fbfbb") (:url . "https://github.com/gopar/vala-snippets"))]) (vala-mode . [(20150324 1525) nil "Vala mode derived mode" single ((:commit . "fb2871a4492d75d03d72e60474919ab89adb267b") (:keywords "vala" "languages" "oop"))]) (vagrant-tramp . [(20160427 1632) ((dash (2 12 0))) "Vagrant method for TRAMP" tar ((:commit . "453ba605b28d2964bb4e10074f1e6891ebb4d2d6") (:url . "https://github.com/dougm/vagrant-tramp") (:keywords "vagrant"))]) (vagrant . [(20170301 1406) nil "Manage a vagrant box from emacs" single ((:commit . "636ce2f9af32ea199170335a9cf1201b64873440") (:url . "https://github.com/ottbot/vagrant.el") (:keywords "vagrant" "chef"))]) (v2ex-mode . [(20160719 2045) ((cl-lib (0 5)) (request (0 2)) (let-alist (1 0 3))) "Major mode for visit http://v2ex.com/ site." single ((:commit . "b7d19bb594b43ea3824a6f215dd1e5d1d4c0e8ad") (:url . "https://github.com/aborn/v2ex-mode") (:keywords "v2ex" "v2ex.com"))]) (uzumaki . [(20150119 1706) ((cl-lib (0 5))) "A simple buffer cycler" single ((:commit . "afae141588ef9407ff86ce1ae9a0f1860843c4a4") (:url . "http://github.com/geyslan/uzumaki") (:keywords "buffer" "convenience"))]) (uuidgen . [(20140918 1601) nil "Provides various UUID generating functions" single ((:commit . "7eb96415484c3854a3f383d1a3e10b87ae674e22") (:keywords "extensions" "lisp" "tools"))]) (uuid . [(20120910 151) nil "UUID's for EmacsLisp" single ((:commit . "1519bfeb0e31602b840bc8dd35d7c7e732c159fe") (:keywords "lisp"))]) (utop . [(20170508 2343) ((emacs (24))) "Universal toplevel for OCaml" single ((:commit . "ea49d8e947e1cd5deeec813e78eba92ff5c6ff3b") (:url . "https://github.com/diml/utop") (:keywords "ocaml" "languages"))]) (use-package-chords . [(20170208 1035) ((use-package (2 1)) (bind-key (1 0)) (bind-chord (0 2)) (key-chord (0 6))) "key-chord keyword for use-package" single ((:commit . "e8551ce8a514d865831d3a889acece79103fc627") (:url . "https://github.com/waymondo/use-package-chords") (:keywords "convenience" "tools" "extensions"))]) (use-package . [(20170702 1322) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" single ((:commit . "fd462e8aeaf858fec0bc63a41bd10ff8d445490c") (:url . "https://github.com/jwiegley/use-package") (:keywords "dotemacs" "startup" "speed" "config" "package"))]) (usage-memo . [(20110722 851) nil "integration of Emacs help system and memo" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/usage-memo.el") (:keywords "convenience" "languages" "lisp" "help" "tools" "docs"))]) (urlenc . [(20140116 656) nil "URL encoding/decoding utility for Emacs." single ((:commit . "835a6dcb783bbe84714bae87a3464aa0b128bfac") (:url . "https://github.com/buzztaiki/urlenc-el") (:keywords "url"))]) (url-shortener . [(20160404 1959) nil "shorten long url and expand tinyurl" single ((:commit . "48182912d4f3a704d0b53f1664b995cfbf2ccd28") (:url . "https://github.com/yuyang0/url-shortener"))]) (uptimes . [(20170425 331) ((cl-lib (0 5)) (emacs (24))) "Track and display emacs session uptimes." single ((:commit . "07bcd6517243c9c9f61172202d33718bd9b2a850") (:url . "https://github.com/davep/uptimes.el") (:keywords "uptime"))]) (untitled-new-buffer . [(20161212 708) ((emacs (24 4)) (magic-filetype (0 2 0))) "Open untitled new buffer like other text editors." single ((:commit . "4eabc6937b0e83062ffce9de0d42110224063a6c") (:url . "https://github.com/zonuexe/untitled-new-buffer.el") (:keywords "files" "convenience"))]) (unkillable-scratch . [(20160504 1903) nil "Disallow buffers from being killed by regexp -- default is *scratch* buffer" single ((:commit . "676a5a97658830caece18fa65a23e3d113933151") (:keywords "scratch"))]) (unison-mode . [(20160513 801) nil "Syntax highlighting for unison file synchronization program" single ((:commit . "0bd6a65c0d12f87fcf7bdff15fe54444959b93bf") (:url . "https://github.com/impaktor/unison-mode") (:keywords "symchronization" "unison"))]) (unison . [(20160704 40) ((emacs (24 1))) "sync with Unison" single ((:commit . "a78a04c0d1398d00f75a1bd4799622a65bcb0f28") (:url . "http://github.com/unhammer/unison.el") (:keywords "sync"))]) (unipoint . [(20140113 1424) nil "a simple way to insert unicode characters by TeX name" single ((:commit . "5da04aebac35a5c9e1d8704f2231808d42f4b36a") (:url . "https://github.com/apgwoz/unipoint"))]) (unify-opening . [(20170215 657) ((emacs (24 4))) "Make everything use the same mechanism to open files" single ((:commit . "2f0164328b9234c9083758349103be873cb65af8") (:url . "https://github.com/DamienCassou/unify-opening") (:keywords "dired" "org" "mu4e" "open" "runner" "extension" "file"))]) (unidecode . [(20140317 2118) ((cl-lib (0 4))) "Convert Unicode text into safe ASCII strings" tar ((:commit . "9e279e88a689584027d5a1b088fe5def25d0f75c"))]) (unicode-whitespace . [(20140508 1341) ((ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "teach whitespace-mode about fancy characters" single ((:commit . "a18c6b38d78b94f2eb1dcc4cb4fa91b6a17efabe") (:url . "http://github.com/rolandwalker/unicode-whitespace") (:keywords "faces" "wp" "interface"))]) (unicode-troll-stopper . [(20151023 1831) nil "Minor mode for Highlighting Unicode homoglyphs" single ((:commit . "15e4b57b78bf643bb56e5000078030cbb5c66e2a") (:url . "https://github.com/camsaul/emacs-unicode-troll-stopper") (:keywords "unicode"))]) (unicode-progress-reporter . [(20140508 1341) ((emacs (24 1 0)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Progress-reporter with fancy characters" single ((:commit . "5e66724fd7d15743213b082474d798117b194494") (:url . "http://github.com/rolandwalker/unicode-progress-reporter") (:keywords "interface"))]) (unicode-input . [(20141218 2320) nil "Support for unicode character input" single ((:keywords "unicode" "input"))]) (unicode-fonts . [(20150826 1532) ((font-utils (0 7 8)) (ucs-utils (0 8 2)) (list-utils (0 4 2)) (persistent-soft (0 8 10)) (pcache (0 3 1))) "Configure Unicode fonts" single ((:commit . "a36597d83e0248bd0e6b2c1d5fb95bff72add527") (:url . "http://github.com/rolandwalker/unicode-fonts") (:keywords "i18n" "faces" "frames" "wp" "interface"))]) (unicode-escape . [(20160614 534) ((emacs (24)) (names (20151201 0)) (dash (2 12 1))) "Escape/Unescape unicode notations" single ((:commit . "fc69ec780d9e54c364a9252bd0cf1d2507f3fab7") (:url . "https://github.com/kosh04/unicode-escape.el") (:keywords "i18n" "unicode"))]) (unicode-enbox . [(20140508 1341) ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Surround a string with box-drawing characters" single ((:commit . "77074fac1994a4236f111d6a1d0cf79ea3fca151") (:url . "http://github.com/rolandwalker/unicode-enbox") (:keywords "extensions" "interface"))]) (unicode-emoticons . [(20150204 308) nil "Shortcuts for common unicode emoticons" single ((:commit . "fb18631f342b0243cf77cf59ed2067c47aae5233") (:url . "https://github.com/hagleitn/unicode-emoticons") (:keywords "games" "entertainment" "comms"))]) (unfill . [(20160816 2300) nil "Unfill paragraphs or regions, and toggle between filled & unfilled" single ((:commit . "88186dce0de69e8f4aeaf2bfdc77d62210f19cd8") (:url . "https://github.com/purcell/unfill") (:keywords "utilities"))]) (undohist . [(20150315 542) ((cl-lib (1 0))) "Persistent undo history for GNU Emacs" single ((:commit . "d2239a5f736724ceb9e3b6bcaa86f4064805cda0") (:keywords "convenience"))]) (undo-tree . [(20161012 701) nil "Treat undo history as a tree" single ((:commit . "4cba00bb049cfaa2ee6821a9e347209a88a740b5") (:url . "http://www.dr-qubit.org/emacs.php") (:keywords "convenience" "files" "undo" "redo" "history" "tree"))]) (underwater-theme . [(20131117 1602) nil "A gentle, deep blue color theme" single ((:commit . "4eb9ef014f580adc135d91d1cd68d37a310640b6") (:keywords "faces"))]) (undercover . [(20170502 912) ((emacs (24)) (dash (2 0 0)) (shut-up (0 3 2))) "Test coverage library for Emacs Lisp" single ((:commit . "d947e6410a3b269c657645b499a413d90d4b69ca") (:url . "https://github.com/sviridov/undercover.el") (:keywords "lisp" "tests" "coverage" "tools"))]) (uncrustify-mode . [(20130707 659) nil "Minor mode to automatically uncrustify." single ((:commit . "73893d000361e95784911e5ec268ad0ab2a1473c") (:keywords "uncrustify"))]) (unbound . [(20160505 2355) nil "Find convenient unbound keystrokes" single ((:keywords "keyboard"))]) (ukrainian-holidays . [(20130720 649) nil "Ukrainian holidays for Emacs calendar." single ((:commit . "e52b0c92843e9f4d0415a7ba3b8559785497d23d") (:url . "https://github.com/abo-abo/ukrainian-holidays"))]) (ujelly-theme . [(20170607 206) nil "Ujelly theme for GNU Emacs 24 (deftheme)" single ((:commit . "e3a343991c0175092f27665fce9474e240f3f1f7") (:url . "http://github.com/marktran/color-theme-ujelly"))]) (uimage . [(20160901 521) nil "An iimage like mode with the ability to display url images" single ((:commit . "9893d09160ef7e8c0ecdcd74fca99ffeb5f9d70d") (:keywords "lisp" "url" "image"))]) (ucs-utils . [(20150826 714) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar ((:commit . "cbfd42f822bf5717934fa2d92060e6e24a813433") (:url . "http://github.com/rolandwalker/ucs-utils") (:keywords "i18n" "extensions"))]) (ucs-cmds . [(20170308 1512) nil "Commands to create commands that insert Unicode chars." single ((:url . "https://www.emacswiki.org/emacs/download/ucs-cmds.el") (:keywords "unicode" "characters" "encoding" "commands" "ucs-names"))]) (ubuntu-theme . [(20150805 806) nil "A theme inspired by the default terminal colors in Ubuntu" single ((:commit . "88b0eefc75d4cbcde103057e1c5968d4c3052f69") (:url . "http://github.com/rocher/ubuntu-theme"))]) (typoscript-mode . [(20170126 112) ((emacs (24 4)) (use-package (0))) "mode for TypoScript files" single ((:commit . "44e7567e921573c4f33c537b827f71fb1f565c32") (:url . "https://github.com/ksjogo/typoscript-mode") (:keywords "typo3" "typoscript"))]) (typo . [(20160121 330) nil "Minor mode for typographic editing" single ((:commit . "f7d07cedf90ce65f226a66c428c0788d2bd7b912") (:url . "https://github.com/jorgenschaefer/typoel") (:keywords "convenience" "wp"))]) (typit . [(20170519 51) ((emacs (24 4)) (f (0 18)) (mmt (0 1 1))) "Typing game similar to tests on 10 fast fingers" tar ((:commit . "a4e3147dedac5535bdc8b06aca00f34f14f26e35") (:url . "https://github.com/mrkkrp/typit") (:keywords "games"))]) (typing-game . [(20160426 520) nil "a simple typing game" single ((:commit . "616435a5270274f4c7b698697674dbb2039049a4") (:keywords "lisp" "game"))]) (typing . [(20121026 1418) nil "The Typing Of Emacs" single ((:url . "http://www.emacswiki.org/emacs/TypingOfEmacs") (:keywords "games"))]) (typescript-mode . [(20170530 953) nil "Major mode for editing typescript" single ((:commit . "9ad892fb2274decb637d12d81a8640d2c6cf11d3") (:url . "http://github.com/ananthakumaran/typescript.el") (:keywords "typescript" "languages"))]) (typed-clojure-mode . [(20151003 1122) ((clojure-mode (2 1 1)) (cider (0 10 0 -3))) "Typed Clojure minor mode for Emacs" tar ((:commit . "3abd53d8cc1ad77ffe76e02849d0ab7731fd8364") (:url . "https://github.com/typedclojure/typed-clojure-mode"))]) (twittering-mode . [(20170312 735) nil "Major mode for Twitter" single ((:commit . "63c96fb029033b1a300b90aa922e167c7c405bcb") (:url . "http://twmode.sf.net/") (:keywords "twitter" "web"))]) (twilight-theme . [(20120412 603) nil "Twilight theme for GNU Emacs 24 (deftheme)" single ((:commit . "77c4741cb3dcf16e53d06d6c2ffdc660c40afb5b"))]) (twilight-bright-theme . [(20130605 143) nil "A Emacs 24 faces port of the TextMate theme" single ((:commit . "322157cb2f3bf7920ecd209dafc31bc1c7959f49") (:url . "https://github.com/jimeh/twilight-bright-theme.el") (:keywords "themes"))]) (twilight-anti-bright-theme . [(20160622 148) nil "A soothing Emacs 24 light-on-dark theme" single ((:commit . "523b95fcdbf4a6a6483af314ad05354a3d80f23f") (:url . "https://github.com/jimeh/twilight-anti-bright-theme.el") (:keywords "themes"))]) (twig-mode . [(20130220 1050) nil "A major mode for twig" single ((:commit . "2849f273a4855d3314a9c0cc84134f5b28ad5ea6"))]) (turnip . [(20150308 2329) ((dash (2 6 0)) (s (1 9 0))) "Interacting with tmux from Emacs" single ((:commit . "2fd32562fc6fc1cda6d91aa939cfb29f9b16e9de") (:keywords "terminals" "tools"))]) (turkish . [(20160324 323) nil "Convert to Turkish characters on-the-fly" single ((:commit . "237b696e2f513149f1a77ef58b5ba7d44b6f4661") (:url . "http://www.denizyuret.com/2006/11/emacs-turkish-mode.html") (:keywords "turkish" "languages" "automatic" "conversion"))]) (turing-machine . [(20170512 1438) ((emacs (24 4)) (cl-lib (0 6 1))) "Single-tape Turing machine simulator" single ((:commit . "4b5901a13b38028b05ce19cecc78bcd2f708f97d") (:url . "http://github.com/therockmandolinist/turing-machine") (:keywords "turing" "machine" "simulation"))]) (tup-mode . [(20140410 914) nil "Major mode for editing files for Tup" single ((:commit . "bcc100c6485f1c81fdcd1215dfc6c41a81c215c8") (:url . "https://github.com/ejmr/tup-mode"))]) (tumblesocks . [(20140215 1247) ((htmlize (1 39)) (oauth (1 0 3)) (markdown-mode (1 8 1))) "An Emacs tumblr client." tar ((:commit . "85a6cdc2db3390593fd886c474959b675460b310"))]) (tumble . [(20160111 2329) ((http-post-simple (0)) (cl-lib (0 5))) "an Tumblr mode for Emacs" single ((:commit . "e8fd7643cccf2b6ea4170f0c5f1f87d007e7fa00") (:keywords "tumblr"))]) (tuareg . [(20170531 557) ((caml (3 12 0 1))) "OCaml mode for Emacs." tar ((:commit . "79bca7dc9254da190d821b504da4946df8c3d548") (:url . "https://github.com/ocaml/tuareg") (:keywords "ocaml" "languages"))]) (ttl-mode . [(20160505 132) nil "mode for Turtle (and Notation 3)" single nil]) (tt-mode . [(20130804 410) nil "Emacs major mode for editing Template Toolkit files." single ((:commit . "85ed3832e7eef391f7879d9990d59c7a3493c15e"))]) (tss . [(20150913 708) ((auto-complete (1 4 0)) (json-mode (1 1 0)) (log4e (0 2 0)) (yaxception (0 1))) "provide a interface for auto-complete.el/flymake.el on typescript-mode." tar ((:commit . "81ac6351a2ae258fd0ebf916dae9bd5a179fefd0") (:url . "https://github.com/aki2o/emacs-tss") (:keywords "typescript" "completion"))]) (ts-comint . [(20161006 1034) nil "Run a Typescript interpreter in an inferior process window." single ((:commit . "53e0326149d74ac13850f052dcdae4a070d63480") (:url . "https://github.com/josteink/ts-comint") (:keywords "typescript" "node" "inferior-mode" "convenience"))]) (try . [(20170226 805) ((emacs (24))) "Try out Emacs packages." single ((:commit . "271b0a362cadf44d0694628b9e213f54516ef913") (:url . "http://github.com/larstvei/try") (:keywords "packages"))]) (truthy . [(20140508 1341) ((list-utils (0 4 2))) "Test the content of a value" single ((:commit . "8ed8d07772aa8457554547eb17e264b5df2b4a69") (:url . "http://github.com/rolandwalker/truthy") (:keywords "extensions"))]) (trr . [(20170221 42) nil "a type-writing training program on GNU Emacs." tar ((:commit . "83660d8343ef3367837354dc684dfdde2f95826a") (:keywords "games" "faces"))]) (tronesque-theme . [(20150125 241) nil "Color Theme based on Tron universe." single ((:commit . "42093c08a50c860601c364c8a746c803458c10ba") (:url . "https://github.com/aurelienbottazini/tronesque"))]) (trident-mode . [(20130726 1207) ((emacs (24)) (slime (20130526)) (skewer-mode (1 5 0)) (dash (1 0 3))) "Live Parenscript interaction" single ((:commit . "ad3201f47e114de35df189c3d80f0fdea9507ea9") (:url . "https://github.com/johnmastro/trident-mode.el") (:keywords "languages" "lisp" "processes" "tools"))]) (treemacs-evil . [(20170625 1401) ((evil (1 2 12)) (treemacs (0))) "Evil mode integration for treemacs" single ((:commit . "53f0e0c562ba28b9738d05cd730728e983d2917f") (:url . "https://github.com/Alexander-Miller/treemacs"))]) (treemacs . [(20170625 1509) ((emacs (25 1)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 10 0)) (f (0 11 0)) (ace-window (0 9 0)) (pfuture (1 1))) "A tree style file explorer package" tar ((:commit . "53f0e0c562ba28b9738d05cd730728e983d2917f") (:url . "https://github.com/Alexander-Miller/treemacs"))]) (tree-mode . [(20151104 531) nil "A mode to manage tree widgets" single ((:commit . "b06078826d5875d74b0e7b7ac47b0d0917610534") (:keywords "help" "convenience" "widget"))]) (travis . [(20150825 438) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Travis" tar ((:commit . "754ef07c17fed17ab03664ad11e2b0b2ef5e78ed") (:url . "https://github.com/nlamirault/emacs-travis") (:keywords "travis"))]) (transpose-mark . [(20150405 16) nil "Transpose data using the Emacs mark" single ((:commit . "667327602004794de97214cf336ac61650ef75b7") (:keywords "transpose" "convenience"))]) (transpose-frame . [(20151126 626) nil "Transpose windows arrangement in a frame" single ((:commit . "011f420c3496b69fc22d789f64cb8091834feba7") (:keywords "window"))]) (transmission . [(20170330 2125) ((emacs (24 4)) (let-alist (1 0 5))) "Interface to a Transmission session" single ((:commit . "3d44f4e916257855e5f0c3d06ebe78c2637c9b0c") (:keywords "comm" "tools"))]) (transfer-sh . [(20160828 424) ((async (1 0))) "Simple interface for sending buffer contents to transfer.sh" single ((:commit . "70cd5c50b56ed2597221796014298417f503d10f") (:keywords "cloud" "upload" "share"))]) (tramp-term . [(20141104 1345) nil "Automatic setup of directory tracking in ssh sessions." single ((:commit . "983ed67ee65d26a51c641f306fa6b921ec83eeaf") (:url . "https://github.com/randymorris/tramp-term.el") (:keywords "tramp" "ssh"))]) (tramp-hdfs . [(20151028 2036) nil "Tramp extension to access hadoop/hdfs file system in Emacs" single ((:commit . "82683b45eabc09f327ea45a9e8faba0524eada29") (:keywords "tramp" "emacs" "hdfs" "hadoop" "webhdfs" "rest"))]) (tracwiki-mode . [(20150119 821) ((xml-rpc (1 6 8))) "Emacs Major mode for working with Trac" single ((:commit . "6a620444d59b438f42383b48cd4c19c03105dba6") (:keywords "trac" "wiki" "tickets"))]) (tracking . [(20151129 319) nil "Buffer modification tracking" tar ((:commit . "9d68903018f255838b51c734015be74bbdbf539c") (:url . "https://github.com/jorgenschaefer/circe/wiki/Tracking"))]) (traad . [(20170528 2302) ((deferred (0 3 2)) (popup (0 5 0)) (request (0 2 0)) (request-deferred (0 2 0)) (virtualenvwrapper (20151123))) "emacs interface to the traad refactoring server." single ((:commit . "4b84b8b4cf43e1167b3d7fcc51eb7a16b62c26f1") (:url . "https://github.com/abingham/traad"))]) (tql-mode . [(20170402 1846) ((emacs (24))) "TQL mode" single ((:commit . "2c4827652b4b9b640f3c55e27e1b1856ec9e2018") (:keywords "languages" "tql"))]) (toxi-theme . [(20160424 1426) ((emacs (24))) "A dark color theme by toxi" single ((:url . "http://bitbucket.org/postspectacular/toxi-theme/"))]) (tox . [(20160810 855) nil "Launch current python test with tox" single ((:commit . "7655eb254038d5e34433e8a9d66b3ffc9c72e40c") (:url . "https://github.com/chmouel/tox.el") (:keywords "convenience" "tox" "python" "tests"))]) (totd . [(20150519 740) ((s (1 9 0)) (cl-lib (0 5))) "Display a random daily emacs command." single ((:commit . "ca47b618ea8290776cdb5b0f1c2c335691f69660") (:keywords "help"))]) (tornado-template-mode . [(20141128 208) nil "A major mode for editing tornado templates" single ((:commit . "667c0663dbbd279b6c345446b9f2bc50eb52b747"))]) (top-mode . [(20130605 1039) nil "run \"top\" from emacs" single ((:keywords "extensions" "processes"))]) (tool-bar+ . [(20170307 1542) nil "Extensions to standard library tool-bar.el" single ((:url . "https://www.emacswiki.org/emacs/download/tool-bar%2b.el") (:keywords "tool-bar" "convenience" "mouse" "button" "frame"))]) (tommyh-theme . [(20131004 1630) nil "A bright, bold-colored theme for emacs" single ((:commit . "46d1c69ee0a1ca7c67b569b891a2f28fed89e7d5"))]) (toml-mode . [(20161107 1000) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing TOML files" single ((:commit . "f6c61817b00f9c4a3cab1bae9c309e0fc45cdd06") (:url . "https://github.com/dryman/toml-mode.el") (:keywords "data" "toml"))]) (toml . [(20130903 555) nil "TOML (Tom's Obvious, Minimal Language) parser" single ((:commit . "9633a6872928e737a2335aae1065768b23d8c3b3") (:url . "https://github.com/gongo/emacs-toml") (:keywords "toml" "parser"))]) (tomatinho . [(20161023 1853) nil "Simple and beautiful pomodoro timer" tar ((:commit . "7c301d343ecf7feac7348d1146075b2d9ba7d77a") (:keywords "time" "productivity" "pomodoro technique"))]) (toggle-window . [(20141207 748) nil "toggle current window size between half and full" single ((:commit . "e82c60e543933880402ede11e9423e48a17dde53") (:url . "https://github.com/deadghost/toggle-window") (:keywords "hide" "window"))]) (toggle-test . [(20140722 2237) nil "Toggle between source and test files in various programming languages" single ((:commit . "e969321f274903d705995a7d0345a257576ec5ff") (:url . "https://github.com/rags/toggle-test") (:keywords "tdd" "test" "toggle" "productivity"))]) (toggle-quotes . [(20140710 226) nil "Toggle between single and double quoted string" single ((:commit . "33abc221d6887f0518337851318065cd86c34b03") (:url . "https://github.com/toctan/toggle-quotes.el") (:keywords "convenience" "quotes"))]) (toggle . [(20160331 100) ((cl-lib (0 5))) "quickly open corresponding file (eg test vs impl)." single ((:commit . "164ae0f8302c1e1938a9e30597901b1164b43f96") (:keywords "files" "extensions" "convenience"))]) (togetherly . [(20170425 2316) ((cl-lib (0 3))) "allow multiple clients to edit a single buffer online" single ((:commit . "a6491bd5dd84f2aded0cd112ff06ae76ff78dfeb") (:url . "http://hins11.yu-yake.com/"))]) (todotxt-mode . [(20150424 704) nil "Major mode for editing todo.txt files" single ((:commit . "dc6ae151edee88f329ba7abc5d39b7440002232f") (:keywords "wp" "files"))]) (todotxt . [(20160919 2238) nil "A major mode for editing todo.txt files" single ((:commit . "c0d0e8320ba9284710d46941eaf6847f909b589e") (:url . "https://github.com/rpdillon/todotxt.el") (:keywords "todo.txt" "todotxt" "todotxt.el"))]) (toc-org . [(20170518 451) nil "add table of contents to org-mode files (formerly, org-toc)" single ((:commit . "5a8a3f9b3a1440eb207a031685b7f4d77ef05b76") (:url . "https://github.com/snosov1/toc-org") (:keywords "org-mode" "org-toc" "toc-org" "org" "toc" "table" "of" "contents"))]) (tmmofl . [(20121025 401) nil "Calls functions dependant on font lock highlighting at point" single ((:commit . "532aa6978e994e2b069ffe37aaf9a0011a07dadc") (:keywords "minor mode" "font lock" "toggling."))]) (tldr . [(20170621 2059) ((emacs (24 3))) "tldr client for Emacs" single ((:commit . "2d80571cbffc5c02aad771da4b00502d86242926") (:url . "https://github.com/kuanyui/tldr.el") (:keywords "tools" "docs"))]) (tj-mode . [(20150826 851) ((emacs (24)) (tern (0 0 1)) (js2-mode (20150514))) "Highlight JavaScript with Tern" single ((:commit . "361f5b0baa90f9d0b3fd92a3d9d557a1224b4308") (:url . "https://github.com/katspaugh/tj-mode") (:keywords "languages" "javascript"))]) (tinysegmenter . [(20141124 213) ((cl-lib (0 5))) "Super compact Japanese tokenizer in Javascript ported to emacs lisp" single ((:commit . "872134704bd25c13a4c59552433da4c6881b5230") (:url . "https://github.com/myuhe/tinysegmenter.el") (:keywords "convenience"))]) (tiny-menu . [(20161213 435) ((emacs (24 4))) "Display tiny menus." single ((:commit . "05563b94537b6eb22aeddedef2a6e59e3f88d073") (:url . "https://github.com/aaronbieber/tiny-menu.el") (:keywords "menu" "tools"))]) (tiny . [(20160811 246) nil "Quickly generate linear ranges in Emacs" single ((:commit . "1766056dc768df6c981c301a2e7b8de7305acb73") (:url . "https://github.com/abo-abo/tiny") (:keywords "convenience"))]) (tinkerer . [(20161102 531) ((s (1 2 0))) "Elisp wrapper for Tinkerer Blogging Engine." single ((:commit . "713769e5f5eb90a87d515b7ba2dca71f2f297218") (:url . "https://github.com/yyr/tinkerer.el") (:keywords "tinkerer" "blog" "wrapper"))]) (timp . [(20160618 103) ((emacs (24 4)) (cl-lib (0 5)) (fifo-class (1 0)) (signal (1 0))) "Multithreading library" tar ((:commit . "66b21934b1eb8ee428c06dd64b3562ad44776a35") (:url . "https://github.com/mola-T/timp") (:keywords "internal" "lisp" "processes" "tools"))]) (timonier . [(20170411 100) ((emacs (24 4)) (s (1 11 0)) (f (0 19 0)) (dash (2 12 0)) (pkg-info (0 5 0)) (hydra (0 13 6)) (request (0 2 0)) (all-the-icons (2 0 0))) "Manage Kubernetes Applications" tar ((:commit . "0a150ea87bf695b43cf1740dfd7e553e0ae7601c") (:url . "https://github.com/nlamirault/timonier") (:keywords "kubernetes" "docker"))]) (timesheet . [(20160530 1445) ((s (1)) (org (7)) (auctex (11))) "Timesheet management add-on for org-mode" tar ((:commit . "2ed6fea9b508eb7eaff659d9a34a09ba064d4df8") (:url . "https://github.com/tmarble/timesheet.el") (:keywords "org" "timesheet"))]) (timer-revert . [(20150122 1232) nil "minor mode to revert buffer for a given time interval." tar ((:commit . "615c91dec8b440d2b9b7c725dd733d7432564e45"))]) (timecop . [(20160520 352) ((cl-lib (0 5)) (datetime-format (0 0 1))) "Freeze Time for testing" single ((:commit . "e6427538b547cbe02e1bd6ed4b765c73620bdae8") (:url . "https://github.com/zonuexe/emacs-datetime") (:keywords "datetime" "testing"))]) (time-ext . [(20170126 415) nil "more function for time/date" single ((:commit . "d128becf660fe3f30178eb1b05cd266741f4784a") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/time-ext.el") (:keywords "lisp"))]) (tile . [(20161224 1957) ((emacs (25 1)) (s (1 9 0)) (dash (2 12 0)) (stream (2 2 3))) "Tile windows with layouts" single ((:commit . "22660f21f6e95de5aba55cd5d293d4841e9a4661") (:url . "https://github.com/IvanMalison/tile") (:keywords "tile" "tiling" "window" "manager" "dynamic" "frames"))]) (tidy . [(20111222 956) nil "Interface to the HTML Tidy program" single ((:url . "http://www.emacswiki.org/elisp/tidy.el") (:keywords "languages"))]) (tide . [(20170621 1159) ((dash (2 10 0)) (flycheck (27)) (typescript-mode (0 1)) (cl-lib (0 5))) "Typescript Interactive Development Environment" tar ((:commit . "ec4a2b7a68c2503a6bdb31f1b6977321ad588102") (:url . "http://github.com/ananthakumaran/tide") (:keywords "typescript"))]) (thumb-through . [(20120118 2134) nil "Plain text reader of HTML documents" single ((:commit . "08d8fb720f93c6172653e035191a8fa9c3305e63") (:keywords "html"))]) (thumb-frm . [(20170307 1540) ((frame-fns (0)) (frame-cmds (0))) "Commands for thumbnail frames." single ((:url . "https://www.emacswiki.org/emacs/download/thumb-frm.el") (:keywords "frame" "icon"))]) (thrift . [(20140312 1348) nil "Major mode for Apache Thrift files" single ((:commit . "5b4c6bfc627ddbd56d1e98d4b818bec8cd8a5efd") (:keywords "files"))]) (threes . [(20160820 542) ((emacs (24)) (seq (1 11))) "A clone of Threes (a tiny puzzle game)" single ((:commit . "6981acb30b856c77cba6aba63fefbf102cbdfbb2") (:url . "https://github.com/xuchunyang/threes.el") (:keywords "games"))]) (thread-dump . [(20130323 1025) nil "Java thread dump viewer" single ((:commit . "1cee07775ac8c13bb52217be6c383562c617542b") (:url . "http://github.com/nd/thread-dump.el"))]) (thinks . [(20170607 144) ((cl-lib (0 5))) "Insert text in a think bubble." single ((:commit . "7bdc418ff946d0cc9ea4cc73d38b3c71ffaa838d") (:url . "https://github.com/davep/thinks.el") (:keywords "convenience" "quoting"))]) (thingopt . [(20160520 1618) nil "Thing at Point optional utilities" single ((:commit . "5679815852652479f3b3c9f3a98affc927384b2c") (:keywords "convenience"))]) (thingatpt+ . [(20170307 1539) nil "Extensions to `thingatpt.el'." single ((:url . "https://www.emacswiki.org/emacs/download/thingatpt%2b.el") (:keywords "extensions" "matching" "mouse"))]) (thing-cmds . [(20170331 1338) ((hide-comnt (0))) "Commands that use things, as defined by `thingatpt.el'." single ((:url . "https://www.emacswiki.org/emacs/download/thing-cmds.el") (:keywords "thingatpt" "thing" "region" "selection"))]) (thesaurus . [(20121125 1137) nil "replace a word with a synonym looked up in a web service." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/thesaurus.el") (:keywords "thesaurus" "synonym"))]) (therapy . [(20151113 1153) ((emacs (24))) "Hooks for managing multiple Python major versions" single ((:commit . "775a92bb7b6b0fcc5b38c0b5198a9d0a1bef788a") (:url . "https://github.com/abingham/therapy"))]) (theme-looper . [(20170425 606) ((cl-lib (0 5))) "Loop thru the available color-themes" single ((:commit . "0feeed3c93fc54305499bda5953112487f25a3a0") (:url . "http://ismail.teamfluxion.com") (:keywords "convenience" "color-themes"))]) (theme-changer . [(20161130 1440) nil "Sunrise/Sunset Theme Changer for Emacs" single ((:commit . "60e3dd7cbd237225fef34179168006501a27b06b") (:url . "https://github.com/hadronzoo/theme-changer") (:keywords "color-theme" "deftheme" "solar" "sunrise" "sunset"))]) (tfs . [(20120508 1120) nil "MS Team Foundation Server commands for Emacs." single ((:url . "http://cheeso.members.winisp.net/srcview.aspx?dir=emacs&file=tfs.el"))]) (tf2-conf-mode . [(20161209 820) nil "TF2 Configuration files syntax highlighting" single ((:commit . "536950f64c071ffd8495fb2c7ac7c63a11e25f93") (:url . "https://github.com/wynro/emacs-tf2-conf-mode") (:keywords "languages"))]) (textx-mode . [(20170516 211) ((emacs (24 3))) "Major mode for editing TextX files" single ((:commit . "72f9f0c5855b382024f0da8f56833c22a70a5cb3") (:url . "https://github.com/novakboskov/textx-mode") (:keywords "textx"))]) (textmate-to-yas . [(20160409 1008) nil "Import Textmate macros into yasnippet syntax" tar ((:commit . "be3a768b7ac4c2e24b9d4aa6e9ac1d916cdc5a73") (:url . "https://github.com/mlf176f2/textmate-to-yas.el/") (:keywords "yasnippet" "textmate"))]) (textmate . [(20110816 1446) nil "TextMate minor mode for Emacs" single ((:commit . "350918b070148f0ace6d9d3cd4ebcaf15c1a8781") (:keywords "textmate" "osx" "mac"))]) (textile-mode . [(20170304 916) nil "Textile markup editing major mode" single ((:commit . "c37aaab809503df008209390e31e19abf4e23630"))]) (tex-smart-umlauts . [(20160427 58) nil "Smart umlaut conversion for TeX." single ((:url . "http://hub.darcs.net/lyro/tex-smart-umlauts") (:keywords "tex" "wp"))]) (test-simple . [(20170527 832) ((cl-lib (0))) "Simple Unit Test Framework for Emacs Lisp" single ((:commit . "b3b69f52207d3a8111421ad7ab9ed82abbe85316") (:url . "http://github.com/rocky/emacs-test-simple") (:keywords "unit-test"))]) (test-kitchen . [(20161115 1418) nil "Run test-kitchen inside of emacs" single ((:commit . "9213e55e0334c2a3bb31f8cebf9b40022ca12db8") (:url . "http://github.com/jjasghar/test-kitchen-el") (:keywords "chef" "ruby" "test-kitchen"))]) (test-case-mode . [(20130525 734) ((fringe-helper (0 1 1))) "unit test front-end" single ((:commit . "6074df10ebc97ddfcc228c71c73db179e672dac3") (:url . "http://nschum.de/src/emacs/test-case-mode/") (:keywords "tools"))]) (test-c . [(20170316 1432) ((emacs (24 3))) "quickly test c code" single ((:commit . "5a8c22a0e5ae6e2b0157bf1c41f0fe798c562a21") (:url . "http://github.com/aaptel/test-c"))]) (terraform-mode . [(20170111 2117) ((emacs (24 3)) (hcl-mode (0 3))) "Major mode for terraform configuration file" single ((:commit . "6973d1acaba2835dfdf174f5a5e27de6366002e1") (:url . "https://github.com/syohex/emacs-terraform-mode"))]) (tern-django . [(20160221 1123) ((emacs (24)) (tern (0 0 1)) (f (0 17 1))) "Create tern projects for django applications." tar ((:commit . "46f2cd5e96bc804069f18455a828b8e4c5ec358a") (:url . "https://github.com/proofit404/tern-django"))]) (tern-context-coloring . [(20161217 2347) ((emacs (24 3)) (context-coloring (8 1 0)) (tern (0 0 1))) "Use Tern for context coloring" single ((:commit . "3a8e979d6cc83aabcb3dda3f5f31a6422532efba") (:url . "https://github.com/jacksonrayhamilton/tern-context-coloring") (:keywords "convenience" "faces" "tools"))]) (tern-auto-complete . [(20170521 1235) ((tern (0 0 1)) (auto-complete (1 4)) (cl-lib (0 5)) (emacs (24))) "Tern Completion by auto-complete.el" single ((:commit . "21fd14f052252095a4a6238fb4d8916cb34d73ed"))]) (tern . [(20161222 850) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single ((:commit . "3f8a2bc7c2e9a4ac55e8c6f6c60c0634cbe71326") (:url . "http://ternjs.net/"))]) (terminal-here . [(20170426 48) ((emacs (24)) (cl-lib (0 5))) "Run an external terminal in current directory" single ((:commit . "26e7c8d180dcc62d8802762ba738eb2ee02fd16c") (:url . "https://github.com/davidshepherd7/terminal-here") (:keywords "tools" "frames"))]) (termbright-theme . [(20151030 1935) ((emacs (24 1))) "a more usable theme for white-on-black terminals" single ((:commit . "bec6ab14336c0611e85f45486276004f16d20607") (:url . "https://github.com/bmastenbrook/termbright-theme-el") (:keywords "themes"))]) (term-run . [(20151228 105) nil "Run arbitrary command in terminal buffer" single ((:commit . "54650dbbabb13cb2a6c0670ff6b24b29717a6a8b") (:url . "https://github.com/10sr/term-run-el") (:keywords "utility" "shell" "command" "term-mode"))]) (term-projectile . [(20170421 105) ((emacs (24)) (term-manager (0 1 0)) (projectile (0 13 0))) "projectile terminal management" single ((:commit . "7180f09078f89aadb83061420ca8fd58d929b629") (:url . "https://www.github.com/IvanMalison/term-manager") (:keywords "projectile" "tools" "terminals" "vc"))]) (term-manager . [(20170421 105) ((dash (2 12 0)) (emacs (24 4))) "Contextual terminal management" tar ((:commit . "7180f09078f89aadb83061420ca8fd58d929b629") (:url . "https://www.github.com/IvanMalison/term-manager") (:keywords "terminals" "tools"))]) (term-cmd . [(20160517 345) ((emacs (24 0)) (dash (2 12 0)) (f (0 18 2))) "Send commands from programs running in term.el." tar ((:commit . "6c9cbc659b70241d2ed1601eea34aeeca0646dac"))]) (term-alert . [(20161119 145) ((emacs (24 0)) (term-cmd (1 1)) (alert (1 1)) (f (0 18 2))) "Notifications when commands complete in term.el." tar ((:commit . "47af9e6fe483ef0d393098c145f499362a33292a"))]) (term+mux . [(20140210 2349) ((term+ (0 1)) (tab-group (0 1))) "term+ terminal multiplexer and session management" single ((:commit . "81b60e80cf008472bfd7fad9233af2ef722c208a") (:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation"))]) (term+key-intercept . [(20140210 2350) ((term+ (0 1)) (key-intercept (0 1))) "term+ intercept key mapping" single ((:commit . "fd0771fd66b8c7a909aaac972194485c79ba48c4") (:url . "http://github.com/tarao/term+-el") (:keywords "terminal" "emulation"))]) (term+ . [(20170508 1717) ((emacs (24)) (cl-lib (0 5))) "term-mode enhancement" tar ((:commit . "c3c9239b339c127231860de43abfa08c44c0201a") (:url . "https://github.com/tarao/term-plus-el") (:keywords "terminal" "emulation"))]) (ten-hundred-mode . [(20161028 1536) ((cl-lib (0 5))) "use only the ten hundred most usual words" tar ((:commit . "bdcfda49b1819e82d61fe90947e50bb948cf7933"))]) (temporary-persistent . [(20161210 333) ((emacs (24 3)) (names (20151201 0)) (dash (2 12 1)) (s (1 10 0))) "Keep temp notes buffers persistent -*- lexical-binding: t" single ((:commit . "ac66f3054fc701d53f11ada9d2d9ab18ea481dc0") (:url . "https://github.com/kostafey/temporary-persistent") (:keywords "temp" "buffers" "notes"))]) (telephone-line . [(20170611 1115) ((emacs (24 4)) (cl-lib (0 5)) (cl-generic (0 2)) (seq (1 8))) "Rewrite of Powerline" tar ((:commit . "743614f372598597282efd29a18e624d5ef80bc1") (:url . "https://github.com/dbordak/telephone-line") (:keywords "mode-line"))]) (telepathy . [(20131209 458) nil "Access Telepathy from Emacs" single ((:commit . "211d785b02a29ddc254422fdcc3db45262582f8c") (:keywords "telepathy" "tools"))]) (tea-time . [(20120331 120) nil "Simple timer package, useful to make perfect tea." single ((:commit . "1f6cf0bdd27c5eb3508989c5095427781f858eca") (:keywords "timer" "tea-time"))]) (tdd-status-mode-line . [(20131123 916) nil "TDD status on the mode-line" single ((:commit . "4c082e62f4915b573338a97efcc6854d132323dc") (:url . "https://github.com/algernon/tdd-status-mode-line") (:keywords "faces" "tdd"))]) (tco . [(20160810 1712) ((dash (1 2 0)) (emacs (24))) "tail-call optimisation for Emacs lisp" single ((:commit . "97529ed7a0939c51ce0084c0aa8b12b313654735"))]) (tc . [(20150113 1926) nil "a Japanese input method with T-Code on Emacs" tar ((:commit . "6aa9d27c475be8d009adf9cd417f2cdf348a91e8"))]) (tbx2org . [(20140224 759) ((dash (2 5 0)) (s (1 8 0)) (cl-lib (0 4))) "Tinderbox to org-mode conversion" single ((:commit . "08e9816ba6066f56936050b58d07ceb2187ae6f7") (:url . "https://github.com/istib/tbx2org") (:keywords "org-mode"))]) (tblui . [(20161007 1212) ((dash (2 12 1)) (magit-popup (2 6 0)) (tablist (0 70)) (cl-lib (0 5))) "Define tabulated list UI easily" single ((:commit . "bb29323bb3e27093d50cb42db3a9329a096b6e4d") (:url . "https://github.com/Yuki-Inoue/tblui.el"))]) (tawny-mode . [(20170422 1502) ((cider (0 12)) (emacs (25))) "Ontology Editing with Tawny-OWL" single ((:commit . "c823729104873d0d1eeff4256eb15ee4c1dbfa36"))]) (tao-theme . [(20170624 1300) nil "This package provides two parametrized uncoloured color themes for Emacs: tao-yin and tao-yang." tar ((:commit . "bf6d718955d56b7cf824f7a60803c94a676ccb95"))]) (tangotango-theme . [(20150702 104) nil "Tango Palette color theme for Emacs 24." single ((:commit . "08c3b9270547970dbce2cb1e35e66f6ae380c8b2") (:url . "https://github.com/juba/color-theme-tangotango") (:keywords "tango" "palette" "color" "theme" "emacs"))]) (tango-plus-theme . [(20170214 908) nil "A color theme based on the tango palette" single ((:commit . "8ba8901397e3e9f1d53110487bfa0effc65015e7") (:url . "https://github.com/tmalsburg/tango-plus-theme"))]) (tango-2-theme . [(20120312 1325) nil "Tango 2 color theme for GNU Emacs 24" single ((:commit . "64e44c98e41ebbe3b827d54280e3b9615787daaa"))]) (take-off . [(20140531 217) ((emacs (24 3)) (web-server (0 1 0))) "Emacs remote web access" tar ((:commit . "aa9ea45566fc74febbb6ee9c409ecc4b59246215") (:url . "https://github.com/tburette/take-off"))]) (tagedit . [(20161121 55) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" single ((:commit . "b3a70101a0dcf85498c92b7fcfa7fdbac869746c") (:keywords "convenience"))]) (tabula-rasa . [(20141215 2147) ((emacs (24 4))) "Distraction free writing mode" single ((:commit . "e85fff9de18dc31bc6a7aca726e34a95cc5459f5") (:url . "https://github.com/idomagal/Tabula-Rasa/blob/master/tabula-rasa.el") (:keywords "distraction free" "writing"))]) (tablist . [(20170219 1935) ((emacs (24 3))) "Extended tabulated-list-mode" tar ((:commit . "c834a84efb6efa32497efe1e73160fade741b836") (:keywords "extensions" "lisp"))]) (tabbar-ruler . [(20160801 2007) ((tabbar (2 0 1)) (powerline (2 3)) (mode-icons (0 4 0)) (cl-lib (0 5))) "Pretty tabbar, autohide, use both tabbar/ruler" tar ((:commit . "535568189aa12a3eff7f977d2783e57b6a65ab6a") (:url . "http://github.com/mlf176f2/tabbar-ruler.el") (:keywords "tabbar" "ruler mode" "menu" "tool bar."))]) (tabbar . [(20160524 1401) nil "Display a tab bar in the header line" tar ((:commit . "b6c285a7d59dcdb1f17716f0b60787922fa4be82") (:keywords "convenience"))]) (tab-jump-out . [(20151005 1830) ((dash (2 10)) (emacs (24 4))) "Use tab to jump out of delimiter pairs." single ((:commit . "1c3fec1826d2891177ea78e4e7cce1dc67e83e51") (:keywords "tab" "editing"))]) (tab-group . [(20140306 650) nil "Grouped tabs and their tabbar" single ((:commit . "5a290ec2608e4100fb188fd60ecb77affcc3465b") (:url . "http://github.com/tarao/tab-group-el") (:keywords "convenience" "tabs"))]) (ta . [(20160619 945) ((emacs (24 3)) (cl-lib (0 5))) "A tool to deal with Chinese homophonic characters" single ((:commit . "668ad41e71f374f8c32c8d0532f3d8485b355d35") (:url . "http://github.com/kuanyui/ta.el") (:keywords "tools"))]) (systemtap-mode . [(20151122 1140) nil "A mode for SystemTap" single ((:commit . "1a968c2b1f3a054bebf91ac49739d3a81ce050a9") (:url . "https://github.com/ruediger/systemtap-mode") (:keywords "tools" "languages"))]) (systemd . [(20170202 1844) ((emacs (24 4))) "Major mode for editing systemd units" tar ((:commit . "4c1b2befd0c853dcc7bca52d9b084933c3a08254") (:keywords "tools" "unix"))]) (system-specific-settings . [(20140818 757) nil "Apply settings only on certain systems" single ((:commit . "0050d85b2175095aa5ecf580a2fe43c069b0eef3") (:url . "https://github.com/DarwinAwardWinner/emacs-system-specific-settings") (:keywords "configuration"))]) (system-packages . [(20170627 1127) ((cl-lib (0 5))) "functions to manage system packages" single ((:commit . "5124f571663214a2e3aae06355f6648a439c2eb4") (:url . "https://github.com/jabranham/system-packages"))]) (syslog-mode . [(20170107 1517) ((hide-lines (20130623))) "Major-mode for viewing log files" single ((:commit . "e2ade4f27672a644fcb69ceaa8a08f04eaa2ccf2") (:url . "https://github.com/vapniks/syslog-mode") (:keywords "unix"))]) (syntax-subword . [(20160519 1205) nil "make operations on words more fine-grained" single nil]) (syntactic-sugar . [(20140508 1341) nil "Effect-free forms such as if/then/else" single ((:commit . "7ddc4502c831abe1c4ad4c7d1ca628a2c9e13968") (:url . "http://github.com/rolandwalker/syntactic-sugar") (:keywords "extensions"))]) (syntactic-close . [(20170510 2348) nil "Insert closing delimiter" single ((:commit . "83f6a212637175c8cfb1132eb40cdd4c3343040a") (:keywords "languages" "convenience"))]) (synquid . [(20160930 850) ((flycheck (27)) (emacs (24 3))) "Major mode for editing Synquid files" single ((:commit . "28701ce1a15437202f53ab93a14bcba1de83fd2c") (:url . "https://github.com/cpitclaudel/synquid-mode") (:keywords "languages"))]) (synosaurus . [(20170621 957) ((cl-lib (0 5))) "An extensible thesaurus supporting lookup and substitution." tar ((:commit . "acc4c634eb7c7f6dd9bce8610efa7fc900e9c47b") (:url . "https://github.com/hpdeifel/synosaurus"))]) (synonyms . [(20170307 1537) nil "Look up synonyms for a word or phrase in a thesaurus." single ((:url . "https://www.emacswiki.org/emacs/download/synonyms.el") (:keywords "text" "dictionary" "thesaurus" "spelling" "apropos" "help"))]) (synonymous . [(20160721 2255) ((emacs (24)) (cl-lib (0 5)) (request (0 2 0))) "A thesaurus at your fingertips" single ((:commit . "1cbdc016c70ed3834c514621f9a33adc93707024") (:url . "http://github.com/toroidal-code/synonymous.el") (:keywords "utility"))]) (syndicate . [(20160603 823) ((evil (1 0))) "evil keybindings for org-mode" single ((:commit . "90cee202a06f5bab48268ebf9f62c43334b69f50") (:url . "https://github.com/KNX32542/syndicate.git") (:keywords "evil" "org" "bindings"))]) (sync-recentf . [(20160326 1301) nil "Synchronize the recent files list between Emacs instances" single ((:commit . "0052561d5c5b5c2684faedc3eead776aec06c3ed") (:url . "https://github.com/ffevotte/sync-recentf") (:keywords "recentf"))]) (symon-lingr . [(20150719 642) ((symon (1 1 2)) (cl-lib (0 5))) "A notification-based Lingr client powered by symon.el" single ((:commit . "056d1a473e36992ff5881e5ce6fdc331cead975f") (:url . "http://hins11.yu-yake.com/"))]) (symon . [(20170224 33) nil "tiny graphical system monitor" single ((:commit . "8dd8b6df49b03cd7d31b85aedbe9dd08fb922335") (:url . "http://hins11.yu-yake.com/"))]) (symbol-overlay . [(20170615 1919) ((emacs (24 3))) "Highlight symbols with keymap-enabled overlays" single ((:commit . "1c40cd921d573bbbd2cd9770c0bafc484b23a2ad") (:url . "https://github.com/wolray/symbol-overlay/") (:keywords "faces" "matching"))]) (sx . [(20170521 1832) ((emacs (24 1)) (cl-lib (0 5)) (json (1 3)) (markdown-mode (2 0)) (let-alist (1 0 3))) "StackExchange client. Ask and answer questions on Stack Overflow, Super User, and the likes" tar ((:commit . "8f1e3346286cfa5a5299ef192cc5aca3f37a7745") (:url . "https://github.com/vermiculus/sx.el/") (:keywords "help" "hypermedia" "tools"))]) (sws-mode . [(20150317 1245) nil "(S)ignificant (W)hite(S)pace mode" single ((:commit . "4dbde92542fc7ad61df38776980905a4721d642e") (:url . "https://github.com/brianc/jade-mode"))]) (swoop . [(20160120 915) ((ht (2 0)) (pcre2el (1 5)) (async (1 1)) (emacs (24))) "Peculiar buffer navigation for Emacs" tar ((:commit . "a5e475db7a9f5db02ba3d08cd3c1c3594e2e01d7") (:url . "https://github.com/ShingoFukuyama/emacs-swoop") (:keywords "swoop" "inner" "buffer" "search" "navigation"))]) (switch-window . [(20170701 246) ((cl-lib (0 5))) "A *visual* way to choose a window to switch to" tar ((:commit . "f4e3fde4d4717b75716f287577e84b7ee4f33d8d") (:url . "https://github.com/dimitri/switch-window") (:keywords "window" "navigation"))]) (switch-buffer-functions . [(20160702 2157) nil "Hook run when current buffer changed" single ((:commit . "4778a2bc9ecfb71bb2b6a65c7108260ec8f30a37") (:url . "https://github.com/10sr/switch-buffer-functions-el") (:keywords "hook" "utility"))]) (swiper-helm . [(20151116 330) ((emacs (24 1)) (swiper (0 1 0)) (helm (1 5 3))) "Helm version of Swiper." single ((:commit . "57012ab626486fcb3dfba0ee6720b0625e489b8c") (:url . "https://github.com/abo-abo/swiper-helm") (:keywords "matching"))]) (swiper . [(20170609 938) ((emacs (24 1)) (ivy (0 9 0))) "Isearch with an overview. Oh, man!" single ((:commit . "203bfb1f95b43f0448ee6225e58930ccb333547f") (:url . "https://github.com/abo-abo/swiper") (:keywords "matching"))]) (swift3-mode . [(20160918 550) ((emacs (24 4))) "Major-mode for Apple's Swift programming language." tar ((:commit . "4e51265c6905e17d8910e35b0b37cf51e20ecdfe") (:url . "https://github.com/taku0/swift3-mode") (:keywords "languages" "swift"))]) (swift-mode . [(20170224 1825) ((emacs (24 4))) "Major-mode for Apple's Swift programming language." tar ((:commit . "e91e924c225b7bfb7aa6e4a84b5d379c6268014a") (:url . "https://github.com/swift-emacs/swift-mode") (:keywords "languages" "swift"))]) (sweetgreen . [(20151207 916) ((dash (2 12 1)) (helm (1 5 6)) (request (0 2 0)) (cl-lib (0 5))) "Order Salads from sweetgreen.com" single ((:commit . "a456dd7948a25da8ff007a142cf1325b4855d908") (:url . "https://www.github.com/CestDiego/sweetgreen.el") (:keywords "salad" "food" "sweetgreen" "request"))]) (swbuff-x . [(20130607 314) ((swbuff (19991231 1800))) "Modifications to David Ponce's swbuff" single ((:url . "http://www.emacswiki.org/elisp/swbuff-x.el") (:keywords "files" "convenience"))]) (swbuff . [(20160824 707) nil "Quick switch between Emacs buffers." single ((:commit . "8d5b2bec12503509554f9dd83b97c198b259db2b") (:keywords "extensions" "convenience"))]) (swap-regions . [(20160413 1023) ((emacs (24 3))) "Swap two regions of text" single ((:commit . "2789091b6f34c0d4b82546eb39c4e73dc96e8679") (:url . "https://github.com/xuchunyang/swap-regions.el") (:keywords "convenience"))]) (swap-buffers . [(20150506 1439) nil "The quickest way to swap buffers between windows. Based on switch-window package." single ((:commit . "46ab31359b70d935add6c6e9533443116dc51103") (:url . "https://github.com/ekazakov/swap-buffers") (:keywords "window" "swap" "buffer" "exchange"))]) (swagger-to-org . [(20160610 1756) ((emacs (24)) (cl-lib (0 5)) (json (1 4))) "Convert a swagger.json file into an org-mode file" single ((:commit . "181357c71ea24bede263f5706d8781ad65e16877") (:url . "https://github.com/ahungry/swagger-to-org") (:keywords "ahungry" "emacs" "swagger" "openapi" "orgmode" "org" "export"))]) (svg-mode-line-themes . [(20150425 1306) ((xmlgen (0 4))) "SVG-based themes for mode-line" tar ((:commit . "80a0e01839cafbd66899202e7764c33231974259") (:url . "https://github.com/sabof/svg-mode-line-themes"))]) (suscolors-theme . [(20161109 1215) nil "Colorful theme, inspired by Gruvbox." single ((:commit . "8f5cdf8de5e58db838ef0e803b60b7d74fc2a889") (:url . "https://github.com/TheSuspiciousWombat/SusColors-emacs"))]) (supergenpass . [(20130328 2248) nil "SuperGenPass for Emacs" single ((:commit . "549072ef7b5b82913cadd4758e8a0a9926f0a04a") (:keywords "supergenpass"))]) (super-save . [(20160426 729) ((emacs (24 4))) "Auto-save buffers, based on your activity." single ((:commit . "701c98eef4b9b21cd6cfd31f190f9988d32353aa") (:url . "https://github.com/bbatsov/super-save") (:keywords "convenience"))]) (suomalainen-kalenteri . [(20170528 801) nil "Finnish national and Christian holidays for calendar" tar ((:commit . "d380321ce7b7a5650847a7866bd98226af51d4b4"))]) (sunshine . [(20160410 1317) ((cl-lib (0 5))) "Provide weather and forecast information." single ((:commit . "11e49846a116bdec6e2e463bed2db4c2df9c8ad2") (:url . "https://github.com/aaronbieber/sunshine.el") (:keywords "tools" "weather"))]) (sunny-day-theme . [(20140413 1425) nil "Emacs24 theme with a light background." single ((:commit . "420e0a6eb33fcc9b75c2c9e88ab60a975d782a00") (:url . "http://github.com/mswift42/sunny-day-theme"))]) (summarye . [(20130328 327) nil "list up matched strings from a buffer, and display them in summary buffer" single nil]) (suggestion-box . [(20160927 1530) ((emacs (25 1)) (popup (0 5 3))) "show tooltip on the cursor" single ((:commit . "90452d71e4afe9f42ee975f2f7897835cf3dee87") (:keywords "convenience"))]) (suggest . [(20170701 1318) ((emacs (24 4)) (loop (1 3)) (dash (2 13 0)) (s (1 11 0)) (f (0 18 2))) "suggest elisp functions that give the output requested" single ((:commit . "6e98eff2fbd279be5111da8c2e88bea05266a839") (:url . "https://github.com/Wilfred/suggest.el") (:keywords "convenience"))]) (sudoku . [(20161110 2306) ((emacs (24 4))) "Simple sudoku game, can download puzzles" single ((:commit . "77c11b5041b58fc943cf1668b44b40bae039cb5b") (:keywords "games"))]) (sudo-ext . [(20170126 414) nil "sudo support" single ((:commit . "9d4580f304121ce7b8104bd4bd3b64e4dfa3c9b3") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sudo-ext.el") (:keywords "unix"))]) (sudo-edit . [(20170605 1710) ((emacs (24)) (cl-lib (0 5))) "Open files as another user" single ((:commit . "57d49eafd53868d3c86b20fa51e1889e621872c0") (:url . "https://github.com/nflath/sudo-edit") (:keywords "convenience"))]) (sudden-death . [(20140829 538) nil "Totsuzen-no-Shi" single ((:commit . "beba6b4fb42b1e27575d3f722d23a0eb19666736") (:url . "https://github.com/yewton/sudden-death.el"))]) (subshell-proc . [(20130122 1322) nil "Functions for working with comints" single ((:commit . "d18b20e03fc89ee08e8c6a968aba31a16b53287f") (:url . "https://github.com/andrewmains12/subshell-proc"))]) (subr+ . [(20170501 916) nil "Extensions to standard library `subr.el'." single ((:url . "https://www.emacswiki.org/emacs/download/subr%2b.el") (:keywords "strings" "text"))]) (sublimity . [(20161214 2032) nil "smooth-scrolling, minimap and distraction-free mode" tar ((:commit . "033c7c04e47e7666afd125a72467c3eb657732d9") (:url . "http://hins11.yu-yake.com/"))]) (sublime-themes . [(20170606 1144) nil "A collection of themes based on Sublime Text" tar ((:commit . "60ee40af82eb55b79d5ed4026f1911326311603f") (:keywords "faces"))]) (subemacs . [(20170401 234) nil "Evaluating expressions in a fresh Emacs subprocess" single ((:commit . "18d53939fec8968c08dfc5aff7240ca07efb1aac") (:url . "https://github.com/kbauer/subemacs") (:keywords "extensions" "lisp" "multiprocessing"))]) (subatomic256-theme . [(20130620 1910) nil "Fork of subatomic-theme for terminals." single ((:commit . "326177d6f99cd2b1d30df695e67ee3bc441cd96f") (:url . "https://github.com/cryon/subatomic256"))]) (subatomic-theme . [(20160126 738) nil "Low contrast bluish color theme" single ((:commit . "6a4086af748b1ecb27f6ba2aa2614988db16d594") (:url . "https://github.com/cryon/subatomic") (:keywords "color-theme" "blue" "low contrast"))]) (stylus-mode . [(20150313 812) ((sws-mode (0))) "Major mode for editing .jade files" single ((:commit . "4dbde92542fc7ad61df38776980905a4721d642e") (:url . "https://github.com/brianc/jade-mode"))]) (stylefmt . [(20161025 124) nil "Stylefmt interface" single ((:commit . "7a38f26bf8ff947215f34f0a064c7ca80575ccbc") (:url . "https://github.com/KeenS/stylefmt.el") (:keywords "style" "code" "formatter"))]) (stupid-indent-mode . [(20170525 417) nil "Plain stupid indentation minor mode" single ((:commit . "3295e7de5e2cfddc3bf0e462e852bf58972f5d70"))]) (stumpwm-mode . [(20140130 1816) nil "special lisp mode for evaluating code into running stumpwm" single ((:commit . "61a7cf27e49e0779a53c018b2342f5f1c5cc70b4") (:keywords "comm" "lisp" "tools"))]) (stripe-buffer . [(20141208 708) ((cl-lib (1 0))) "Use a different background for even and odd lines" single ((:commit . "c252080f55cb78c951b19ebab9687f6d00237baf") (:url . "https://github.com/sabof/stripe-buffer"))]) (strings . [(20170307 1533) nil "Miscellaneous string functions." single ((:url . "https://www.emacswiki.org/emacs/download/strings.el") (:keywords "internal" "strings" "text"))]) (string-utils . [(20140508 1341) ((list-utils (0 4 2))) "String-manipulation utilities" single ((:commit . "c2232d691617973ecf12a970c6008a161c21da14") (:url . "http://github.com/rolandwalker/string-utils") (:keywords "extensions"))]) (string-inflection . [(20170419 1638) nil "underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" single ((:commit . "297aaf68e666381521b02d433fcd28d8b51c48de") (:keywords "elisp"))]) (string-edit . [(20160410 2356) ((dash (1 2 0))) "Avoid escape nightmares by editing string in separate buffer" single ((:commit . "c44b65b4c5e9f52be9c14d88ca2f402a18d9e1dd"))]) (strie . [(20160211 1422) ((cl-lib (0 5))) "A simple trie data structure implementation" single ((:commit . "eb7efb0cccc127c414f6a64db11454869d9c10a8"))]) (strace-mode . [(20160710 2134) nil "strace output syntax highlighting" single ((:commit . "6a69b4b06db6797af56f33eda5cb28af94e59f11") (:keywords "languages"))]) (stock-ticker . [(20150204 252) ((s (1 9 0)) (request (0 2 0))) "Show stock prices in mode line" single ((:commit . "f2e564142c9de84232839a5b01979cf95b04d6a9") (:url . "https://github.com/hagleitn/stock-ticker") (:keywords "comms"))]) (stickyfunc-enhance . [(20150429 1114) ((emacs (24 3))) "An enhancement to stock `semantic-stickyfunc-mode'" single ((:commit . "13bdba51fcd83ccbc3267959d23afc94d458dcb0") (:url . "https://github.com/tuhdo/semantic-stickyfunc-enhance") (:keywords "c" "languages" "tools"))]) (sticky . [(20101129 1852) nil "Sticky key for capital letters" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sticky.el") (:keywords "convenience"))]) (stgit . [(20140213 348) nil "major mode for StGit interaction" single ((:commit . "90d50ad4a78c06f99fbf185aeb3322d1502a016e") (:url . "http://www.procode.org/stgit"))]) (stem-english . [(20170113 24) ((emacs (24 3))) "- routines for stemming English word" single ((:commit . "c8d9ccf1ea38ea403ba360b79b1042b0fd449a70") (:url . "http://github.com/kawabata/stem-english") (:keywords "text"))]) (stem . [(20131102 409) nil "Routines for stemming" single ((:commit . "d74e6611d6ba5025e0276a2cc7c8a90f46bfa9ac") (:url . "https://github.com/yuutayamada/stem") (:keywords "stemming"))]) (steam . [(20160427 231) ((cl-lib (0 5))) "Organize and launch Steam games" single ((:commit . "a0547487ccf40aa582af3dd0d433a1b153d25246") (:url . "http://github.com/Kungsgeten/steam.el") (:keywords "games"))]) (status . [(20151230 608) nil "This package adds support for status icons to Emacs." tar ((:commit . "b62c74bf272566f82a68622f29fb9edafea0f241"))]) (state . [(20170107 535) ((emacs (24))) "Quick navigation between workspaces" single ((:commit . "ea6e2cf6f592cbcfc5800b68f0fc2462555cacce") (:url . "https://github.com/thisirs/state.git") (:keywords "convenience" "workspaces"))]) (stash . [(20151117 627) nil "lightweight persistent caching" single ((:commit . "c2e494d20c752b80ebbdffbf66687b3cdfc425ad") (:url . "https://www.github.com/vermiculus/stash.el/") (:keywords "extensions" "data" "internal" "lisp"))]) (start-menu . [(20160426 525) ((cl-lib (0 5)) (config-parser (0 1))) "start-menu for executing external program like in windows" single ((:commit . "f7d33fed7ad2dc61156f1c1cff9e1805366fbd69") (:url . "https://github.com/lujun9972/el-start-menu") (:keywords "convenience" "menu"))]) (standoff-mode . [(20170609 134) nil "Create stand-off markup, also called external markup." tar ((:commit . "b194fde6bf31ddc77409275e134aacba27e88043"))]) (stan-snippets . [(20161023 1958) ((stan-mode (9 2 0)) (yasnippet (0 8 0))) "Yasnippets for Stan" tar ((:commit . "45b8242611fe0437fcff48f5f4f7d8f0552531ac") (:url . "http://github.com/stan-dev/stan-mode") (:keywords "snippets"))]) (stan-mode . [(20161023 1958) nil "Major mode for editing Stan files" tar ((:commit . "45b8242611fe0437fcff48f5f4f7d8f0552531ac") (:url . "http://github.com/stan-dev/stan-mode") (:keywords "languanges"))]) (stack-mode . [(20150923 823) ((haskell-mode (13 14)) (cl-lib (0 5)) (flycheck (0 23))) "A minor mode enabling various features based on stack-ide." tar ((:commit . "f3481e239dde9817152ec00e32bfc3ebf5aaf2cb") (:url . "https://github.com/commercialhaskell/stack-ide") (:keywords "haskell" "stack"))]) (ssh-tunnels . [(20141219 318) ((cl-lib (0 5)) (emacs (24))) "Manage SSH tunnels" single ((:commit . "b08ba7a560ba5b16aa95c3cc17ed6fea59529cc4") (:url . "http://github.com/death/ssh-tunnels") (:keywords "tools" "convenience"))]) (ssh-deploy . [(20170628 52) nil "Deployment via SSH or FTP, global or per directory." single ((:commit . "c8b322a248ea8089eb26f2c5cee58ed47e5f43d3") (:url . "https://github.com/cjohansson/emacs-ssh-deploy") (:keywords "tools" "convenience"))]) (ssh-config-mode . [(20170603 251) nil "Mode for fontification of ~/.ssh/config" tar ((:commit . "ba47dd11c5be684595ffa62dbdfdc616ce3eb9d6") (:url . "http://www.mahalito.net/~harley/elisp/ssh-config-mode.el") (:keywords "ssh" "config" "emacs"))]) (ssh-agency . [(20170205 1306) ((emacs (24 4)) (dash (2 10 0))) "manage ssh-agent from Emacs" single ((:commit . "94abffa716aff963175196066526c7ee8b4efae7") (:url . "https://github.com/magit/ssh-agency"))]) (ssh . [(20120904 1342) nil "Support for remote logins using ssh." single ((:commit . "c17cf5b43df8ac4662a0580f85898e1f078df0d1") (:keywords "unix" "comm"))]) (ssass-mode . [(20170310 2024) ((emacs (24 3))) "Edit Sass without a Turing Machine" single ((:commit . "c26852123436849367d826c370f24dd9f20cb501") (:url . "http://github.com/AdamNiederer/ssass-mode") (:keywords "languages" "sass"))]) (srefactor . [(20170223 540) ((emacs (24 4))) "A refactoring tool based on Semantic parser framework" tar ((:commit . "531753fdc24570a1341c169f36b9fa0d4c09ff42") (:url . "https://github.com/tuhdo/semantic-refactor") (:keywords "c" "languages" "tools"))]) (sr-speedbar . [(20161025 131) nil "Same frame speedbar" single ((:commit . "77a83fb50f763a465c021eca7343243f465b4a47") (:url . "http://www.emacswiki.org/emacs/download/sr-speedbar.el") (:keywords "speedbar" "sr-speedbar.el"))]) (sqlup-mode . [(20170610 837) nil "Upcase SQL words for you" single ((:commit . "04970977b4abb4d44301651618bbf1cdb0b263dd") (:url . "https://github.com/trevoke/sqlup-mode.el") (:keywords "sql" "tools" "redis" "upcase"))]) (sqlplus . [(20161110 758) nil "User friendly interface to SQL*Plus and support for PL/SQL compilation" single ((:keywords "sql" "sqlplus" "oracle" "plsql"))]) (sqlite . [(20150416 2215) nil "use sqlite via elisp" single ((:commit . "9a7fb5836a19bc0ea8b4c5a50177112524380986"))]) (sql-mssql . [(20160512 137) ((emacs (24 4))) "Connect Microsoft SQL Server with sql.el in Linux/Unix environment" single ((:commit . "f8a7f16720fbc7480a7ae83e21958860f66c1ccf") (:url . "https://github.com/tumashu/sql-mssql"))]) (sql-indent . [(20170112 1507) nil "indentation of SQL statements" single ((:commit . "761a5724d181b75f30e64040408b8836d41f9db9") (:url . "https://github.com/bsvingen/sql-indent") (:keywords "languages"))]) (sql-impala . [(20160427 1658) nil "comint support for Cloudera Impala" single ((:commit . "e7a2d79d60b0a6339d730fc39ca024c3d6c56de7") (:url . "https://github.com/jterk/sql-impala") (:keywords "sql" "impala"))]) (spu . [(20161213 1924) ((emacs (24 4)) (signal (1 0)) (timp (1 2 0))) "Silently upgrade package in the background" tar ((:commit . "41eec86b595816e3852e8ad1a8e07e51a27fd065") (:url . "https://github.com/mola-T/spu") (:keywords "convenience" "package"))]) (sprunge . [(20160229 1843) ((request (0 2 0)) (cl-lib (0 5))) "Upload pastes to sprunge.us" single ((:commit . "0fd386b8b29c4175022a04ad70ea5643185b6726") (:keywords "tools"))]) (sproto-mode . [(20151115 1005) nil "Major mode for editing sproto." single ((:commit . "0583a88273204dccd884b7edaa3590cefd31e7f7") (:keywords "sproto"))]) (sprintly-mode . [(20121005 2234) ((furl (0 0 2))) "Major mode for dealing with sprint.ly" single ((:commit . "6695892bae5860b5268bf3ae62be990ee9b63c11") (:url . "https://github.com/sprintly/sprintly-mode"))]) (springboard . [(20170105 2355) ((helm (1 6 9))) "Temporarily change default-directory for one command" single ((:commit . "263a8cd4582c81bfc29d7db37d5267e2488b148c") (:url . "https://github.com/jwiegley/springboard") (:keywords "helm"))]) (spray . [(20160304 1420) nil "a speed reading mode" single ((:commit . "df326991acb2bd64af373bcf09816df9c6424d0d") (:url . "https://github.com/ian-kelling/spray") (:keywords "convenience"))]) (spotlight . [(20150929 55) ((emacs (24 1)) (swiper (0 6 0)) (counsel (0 6 0))) "search files with Mac OS X spotlight" single ((:commit . "ab902900f22e7d1ea2dd8169441d2da7155aaa68") (:url . "http://www.pragmaticemacs.com") (:keywords "search" "external"))]) (spotify . [(20170302 2229) ((cl-lib (0 5))) "Control the spotify application from emacs" single ((:commit . "2825b5cac8406969405096660aeab6e5fef765eb") (:url . "https://github.com/remvee/spotify-el") (:keywords "convenience"))]) (splitter . [(20130705 50) nil "Manage window splits" single ((:commit . "164be41b588b615864258c502583100d3ccfe13e") (:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience"))]) (splitjoin . [(20150505 732) ((cl-lib (0 5))) "Transition between multiline and single-line code" single ((:commit . "e2945ee269e6e90f0243d6f2a33e067bb0a2873c") (:url . "https://github.com/syohex/emacs-splitjoin"))]) (spike-theme . [(20160530 733) nil "A light color theme with muted, autumnal colors." single ((:commit . "7a7766be0b6197103840644bb074f864d0d91cd8") (:url . "https://github.com/m31271n/spike-theme") (:keywords "color" "theme" "green"))]) (spice-mode . [(20160919 330) ((emacs (24 3))) "Major mode for SPICE" single ((:commit . "1dcaa4b4cd1527cf15bfc6dfc278c574359a5062") (:url . "http://spice-mode.4t.com/") (:keywords "spice" "spice2g6" "spice3" "eldo" "hspice" "layla" "mondriaan" "fasthenry" "cdl" "spectre compatibility" "netlist editing"))]) (sphinx-mode . [(20170607 1436) nil "Minor mode providing sphinx support." tar ((:commit . "0a9fcd60639f1f4235b4747e8449b9f48651705f"))]) (sphinx-frontend . [(20161025 58) nil "Launch build process for rst documents via sphinx." single ((:commit . "0cbb03361c245382d3e679dded30c4fc1713c252") (:url . "https://github.com/kostafey/sphinx-frontend") (:keywords "compile" "sphinx" "restructuredtext"))]) (sphinx-doc . [(20160116 317) ((s (1 9 0)) (cl-lib (0 5)) (dash (2 10 0))) "Sphinx friendly docstrings for Python functions" single ((:commit . "f39da2e6cae55d5d7c7ce887e69755b7529bcd67") (:url . "https://github.com/naiquevin/sphinx-doc.el") (:keywords "sphinx" "python"))]) (speed-type . [(20161230 815) ((cl-lib (0 3))) "Practice touch and speed typing" single ((:commit . "5d691f57743304db63b6afdc5bd79dabd282d390") (:url . "https://github.com/parkouss/speed-type") (:keywords "games"))]) (speechd-el . [(20160710 359) nil "Client to speech synthesizers and Braille displays." tar ((:commit . "ec344edd498f95e3c945958475b31bae6505c34c"))]) (speech-tagger . [(20160224 2) ((cl-lib (0 5))) "tag parts of speech using coreNLP" tar ((:commit . "60ce97b0fc34eb32f507957646679fff77b5f0fd") (:url . "https://github.com/cosmicexplorer/speech-tagger") (:keywords "speech" "tag" "nlp" "language" "corenlp" "parsing" "natural"))]) (speck . [(20160717 951) nil "minor mode for spell checking" single ((:keywords "spell" "checking"))]) (sparql-mode . [(20170619 255) ((cl-lib (0 5)) (emacs (25 1))) "Edit and interactively evaluate SPARQL queries." tar ((:commit . "c06eac2abae29ae55794e61ebd06890909edda7c") (:url . "https://github.com/ljos/sparql-mode"))]) (sparkline . [(20150101 519) ((cl-lib (0 3))) "Make sparkline images from a list of numbers" single ((:commit . "a2b5d817d272d6363b67ed8f8cc75499a19fa8d2") (:keywords "extensions"))]) (spark . [(20160414 1901) ((emacs (24 3))) "sparkline generation" single ((:commit . "0bf148c3ede3b31d56fd75f347cdd0b0eae60025") (:url . "https://github.com/alvinfrancis/spark") (:keywords "lisp" "data"))]) (spaces . [(20130610 49) nil "Create and switch between named window configurations." single ((:commit . "164be41b588b615864258c502583100d3ccfe13e") (:url . "https://github.com/chumpage/chumpy-windows") (:keywords "frames" "convenience"))]) (spacemacs-theme . [(20170621 718) nil "Color theme with a dark and light versions" tar ((:commit . "be01cae704dc73e6a4b53766e655fb0dfba1bbc1") (:keywords "color" "theme") (:url . "https://github.com/nashamri/spacemacs-theme"))]) (spaceline-all-the-icons . [(20170605 838) ((emacs (24 4)) (all-the-icons (2 6 0)) (spaceline (2 0 0)) (memoize (1 0 1))) "A Spaceline theme using All The Icons" tar ((:commit . "bc611779a7a3c10b7367bc8c985923d26ee91443") (:url . "https://github.com/domtronn/spaceline-all-the-icons.el") (:keywords "convenience" "lisp" "tools"))]) (spaceline . [(20170630 2327) ((emacs (24 4)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar ((:commit . "e6ccec6c80ee2bbddbad5a88cb9d2cd2db8a1a33") (:url . "https://github.com/TheBB/spaceline") (:keywords "mode-line" "powerline" "spacemacs"))]) (spacegray-theme . [(20150719 1231) ((emacs (24 1))) "A Hyperminimal UI Theme" single ((:commit . "7f70ee36297e5ccf9bc90b1f81472024f5a7a749") (:url . "http://github.com/bruce/emacs-spacegray-theme") (:keywords "themes"))]) (sourcetrail . [(20170410 1437) ((emacs (24 4))) "Communication with Sourcetrail" single ((:commit . "b8d5557aa565ae979622312576db20515f65f977") (:keywords "external" "tool"))]) (sourcetalk . [(20140823 739) ((request (0 2 0))) "SourceTalk (http://sourcetalk.net) plugin for Emacs" single ((:commit . "aced89fa8776e6d5e42dad4a863e159959f08de6") (:url . "https://github.com/malroc/sourcetalk_emacs") (:keywords "sourcetalk" "code" "discussion"))]) (sourcerer-theme . [(20161014 925) nil "A version of sourcerer by xero" single ((:commit . "c7f8e665d53bb48fb72f95f706710d53d24bd407") (:url . "http://github.com/gilbertw1/sourcerer-emacs") (:keywords "themes"))]) (sourcemap . [(20161215 2140) ((emacs (24 3))) "Sourcemap parser" single ((:commit . "64c89d296186f48d9135fb8aad501de19f64bceb") (:url . "https://github.com/syohex/emacs-sourcemap"))]) (sourcekit . [(20170126 353) ((emacs (24 3)) (dash (2 12 1)) (dash-functional (1 2 0)) (request (0 2 0))) "Library to interact with sourcekittendaemon" single ((:commit . "8ba62ac25bf533b7f148f333bcb5c1db799f749b") (:url . "https://github.com/nathankot/company-sourcekit") (:keywords "tools" "processes"))]) (soundklaus . [(20160314 531) ((dash (2 12 1)) (emacs (24)) (emms (4 0)) (s (1 11 0)) (pkg-info (0 4)) (cl-lib (0 5)) (request (0 2 0))) "Play music on SoundCloud with Emacs via EMMS" tar ((:commit . "09ec030843482594beae2664b8fe1e0ad1e66472") (:url . "https://github.com/r0man/soundklaus.el") (:keywords "soundcloud" "music" "emms"))]) (soundcloud . [(20150501 2026) ((emms (20131016)) (json (1 2)) (deferred (0 3 1)) (string-utils (0 3 2)) (request (20140316 417)) (request-deferred (20130526 1015))) "a SoundCloud client for Emacs" single ((:commit . "f998d4276ea90258909c698f6a5a51fccb667c08") (:keywords "soundcloud" "music" "audio"))]) (sound-wav . [(20160725 724) ((deferred (0 3 1)) (cl-lib (0 5))) "Play wav file" single ((:commit . "406868043761524118c27b1207be0f8bbda8798e") (:url . "https://github.com/syohex/emacs-sound-wav"))]) (sotlisp . [(20170429 1945) ((emacs (24 1))) "Write lisp at the speed of thought." single ((:commit . "89dfed2b5d2e9a3b16bfc47f169412b583626059") (:url . "https://github.com/Malabarba/speed-of-thought-lisp") (:keywords "convenience" "lisp"))]) (sotclojure . [(20170512 612) ((emacs (24 1)) (clojure-mode (4 0 0)) (cider (0 8)) (sotlisp (1 3))) "Write clojure at the speed of thought." tar ((:commit . "84e2be5939c33d44f9518aea60cfccff4d6c9707") (:url . "https://github.com/Malabarba/speed-of-thought-clojure") (:keywords "convenience" "clojure"))]) (sos . [(20141214 2003) ((org (7))) "StackOverflow Search" single ((:commit . "01b5e25814b2e76db3814a967e25edf85d33bcac") (:url . "https://github.com/omouse/emacs-sos") (:keywords "tools" "search" "questions"))]) (sort-words . [(20160929 635) nil "Sort words in a selected region" single ((:commit . "7b6e108f80237363faf7ec28b2c58dec270b8601") (:url . "http://github.org/dotemacs/sort-words.el") (:keywords "tools"))]) (soothe-theme . [(20141027 741) ((emacs (24 1))) "a dark colorful theme for Emacs24." single ((:commit . "0786fe70c6c1b4ddcfb932fdc6862b9611cfc09b") (:url . "https://github.com/jasonm23/emacs-soothe-theme"))]) (sonic-pi . [(20170313 810) ((cl-lib (0 5)) (osc (0 1)) (dash (2 2 0)) (emacs (24)) (highlight (0))) "A Emacs client for SonicPi" tar ((:commit . "494981aa8f7828392a930ef8533698944738090e") (:url . "http://www.github.com/repl-electric/sonic-pi.el") (:keywords "sonicpi" "ruby"))]) (solidity-mode . [(20161017 1506) nil "Major mode for ethereum's solidity language" single ((:commit . "db392f96f8e892b7788ebe25819a8ec195bb376d") (:keywords "languages"))]) (solarized-theme . [(20170430 800) ((emacs (24 1)) (cl-lib (0 5)) (dash (2 6 0))) "The Solarized color theme, ported to Emacs." tar ((:commit . "8aa2ce76327dc7081b1c9a310e858fe2b854d899"))]) (solaire-mode . [(20170610 442) ((emacs (24 4)) (cl-lib (0 5))) "make certain buffers grossly incandescent" single ((:commit . "70e3b9cc171d4d9171c652c6d255bf03dcd0ad9a") (:url . "https://github.com/hlissner/emacs-solaire-mode") (:keywords "dim" "bright" "window" "buffer" "faces"))]) (soft-stone-theme . [(20140614 135) ((emacs (24))) "Emacs 24 theme with a light background." single ((:commit . "fb475514cfb02cf30ce358a61c48e46614344d48") (:url . "http://github.com/mswift42/soft-stone-theme"))]) (soft-morning-theme . [(20150918 1341) nil "Emacs24 theme with a light background." single ((:commit . "c0f9c70c97ef2be2a093cf839c4bfe27740a111c") (:url . "http://github.com/mswift42/soft-morning-theme"))]) (soft-charcoal-theme . [(20140420 943) nil "Dark charcoal theme with soft colors" single ((:commit . "5607ab977fae6638e78b1495e02da8955c9ba19f") (:url . "http://github.com/mswift42/soft-charcoal-theme"))]) (socyl . [(20170211 2242) ((s (1 11 0)) (dash (2 12 0)) (pkg-info (0 5 0)) (cl-lib (0 5))) "Frontend for several search tools" tar ((:commit . "1ef2da42f66f3ab31a34131e51648f352416f0ba") (:url . "https://github.com/nlamirault/socyl") (:keywords "ripgrep" "sift" "ack" "pt" "ag" "grep" "search"))]) (snippet . [(20130210 1515) nil "Insert snippets of text into a buffer" single ((:commit . "11d00dd803874b93836f2010b08bd2c97b0f3c63"))]) (snapshot-timemachine-rsnapshot . [(20170324 513) ((snapshot-timemachine (20160222 132)) (seq (2 19))) "rsnapshot backend for snapshot-timemachine" single ((:commit . "72b0b700d80f1a0442e62bbbb6a0c8c59182f97f"))]) (snapshot-timemachine . [(20161221 129) ((emacs (24 4))) "Step through (Btrfs, ZFS, ...) snapshots of files" single ((:commit . "99efcebab309b11ed512a8dc62555d3834df5efb") (:url . "https://github.com/mrBliss/snapshot-timemachine"))]) (snakemake-mode . [(20170430 1436) ((emacs (24)) (cl-lib (0 5)) (magit-popup (2 4 0))) "Major mode for editing Snakemake files" tar ((:commit . "22b3efd741e26f59e18c9fd28691d8b84c9130ab") (:url . "https://github.com/kyleam/snakemake-mode") (:keywords "tools"))]) (smyx-theme . [(20141127 28) nil "smyx Color Theme" single ((:commit . "6263f6b401bbabaed388c8efcfc0be2e58c51401") (:keywords "color" "theme" "smyx"))]) (smtpmail-multi . [(20160218 1549) nil "Use different smtp servers for sending mail" single ((:commit . "81eabfe56f620ee044ff9dd52fa8b6148d0a9f30") (:url . "https://github.com/vapniks/smtpmail-multi") (:keywords "comm"))]) (smotitah . [(20150218 230) nil "Modular emacs configuration framework" tar ((:commit . "f9ab562128a5460549d016913533778e8c94bcf3"))]) (smooth-scrolling . [(20161002 1249) nil "Make emacs scroll smoothly" single ((:commit . "2462c13640aa4c75ab3ddad443fedc29acf68f84") (:url . "http://github.com/aspiers/smooth-scrolling/") (:keywords "convenience"))]) (smooth-scroll . [(20130321 2114) nil "Minor mode for smooth scrolling and in-place scrolling." single ((:commit . "02320f28abb5cae28b3a18f6b9ce93129bdbfc45") (:url . "http://www.emacswiki.org/emacs/download/smooth-scroll.el") (:keywords "convenience" "emulations" "frames"))]) (smmry . [(20161024 201) nil "SMMRY client" single ((:commit . "986a1b0aec8ab1ef17dbfb7886f47e5558cf738a") (:url . "https://github.com/microamp/smmry.el") (:keywords "api" "smmry"))]) (sml-modeline . [(20120110 1240) nil "Show position in a scrollbar like way in mode-line" single ((:url . "http://bazaar.launchpad.net/~nxhtml/nxhtml/main/annotate/head%3A/util/sml-modeline.el"))]) (smiles-mode . [(20160717 420) nil "Major mode for SMILES." single ((:commit . "fbb381758adcb000a0c304be1b797f985f00e2de") (:keywords "smiles"))]) (smex . [(20151212 1409) ((emacs (24))) "M-x interface with Ido-style fuzzy matching." single ((:commit . "55aaebe3d793c2c990b39a302eb26c184281c42c") (:url . "http://github.com/nonsequitur/smex/") (:keywords "convenience" "usability"))]) (smeargle . [(20161212 1558) ((emacs (24 3))) "Highlighting region by last updated time" single ((:commit . "0665b1ff5109731898bc4a0ca6d939933b804777") (:url . "https://github.com/syohex/emacs-smeargle"))]) (smblog . [(20170419 321) ((emacs (24 3))) "samba log viewer" single ((:commit . "5245e7aeac20915121946f59bba30899305d950b") (:url . "http://github.com/aaptel/smblog-mode"))]) (smbc . [(20160706 1522) nil "View SMBC from Emacs" single ((:commit . "c377b806118d82140197d9cb1095548477e00497") (:url . "https://github.com/sakshamsharma/emacs-smbc") (:keywords "smbc" "webcomic"))]) (smarty-mode . [(20100703 458) nil "major mode for editing smarty templates" single ((:commit . "3dfdfe1571f5e9ef55a29c51e5a80046d4cb7568") (:url . "none yet") (:keywords "smarty" "php" "languages" "templates"))]) (smartwin . [(20160513 56) ((emacs (24 4))) "A minor mode shows shell like buffers." single ((:commit . "61528c1cf6c8d913a44e60c40fa8773b7e400eac") (:url . "https://github.com/jerryxgh/smartwin") (:keywords "convenience"))]) (smartscan . [(20170211 1233) nil "Jumps between other symbols found at point" single ((:commit . "234e077145710a174c20742de792b97ed2f965f6") (:keywords "extensions"))]) (smartrep . [(20150508 1930) nil "Support sequential operation which omitted prefix keys." single ((:commit . "f0ff5a6d7b8603603598ae3045c98b011e58d86e") (:url . "https://github.com/myuhe/smartrep.el") (:keywords "convenience"))]) (smartparens . [(20170702 343) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar ((:commit . "3ab9bd98a3d9270ced8078d7d79e41bc3a150965"))]) (smart-window . [(20160716 1830) ((cl-lib (0 5))) "vim-like window controlling plugin" single ((:commit . "5996461b7cbc5ab4509ac48537916eb29a8e4c16") (:url . "https://github.com/dryman/smart-window.el") (:keywords "window"))]) (smart-tabs-mode . [(20160629 752) nil "Intelligently indent with tabs, align with spaces!" single ((:commit . "9cc2594b82b03e7d68645a4878f9359f8b8c34c5") (:url . "http://www.emacswiki.org/emacs/SmartTabs") (:keywords "languages"))]) (smart-tab . [(20150703 917) nil "Intelligent tab completion and indentation." single ((:commit . "28918a72045811294ecb33f666ba23fe66c169af") (:url . "http://github.com/genehack/smart-tab/tree/master") (:keywords "extensions"))]) (smart-shift . [(20150202 2325) nil "Smart shift text left/right." single ((:commit . "a26ab2b240137e62ec4bce1698ed9c5f7b6d13ae") (:url . "https://github.com/hbin/smart-shift") (:keywords "convenience" "tools"))]) (smart-region . [(20150903 703) ((emacs (24 4)) (expand-region (0 10 0)) (multiple-cursors (1 3 0)) (cl-lib (0 5))) "Smartly select region, rectangle, multi cursors" single ((:commit . "5a8017fd8e8dc3483865951c4942cab3f96f69f6") (:url . "https://github.com/uk-ar/smart-region") (:keywords "marking" "region"))]) (smart-newline . [(20131207 1940) nil "Provide smart newline for one keybind." single ((:commit . "0553a9e4be7188352de1a28f2eddfd28e7436f94"))]) (smart-mode-line-powerline-theme . [(20160705 1738) ((emacs (24 3)) (powerline (2 2)) (smart-mode-line (2 5))) "smart-mode-line theme that mimics the powerline appearance." tar ((:commit . "3656417ec06ba448f940d65e96bddb57fdc79244") (:url . "http://github.com/Bruce-Connor/smart-mode-line") (:keywords "mode-line" "faces" "themes"))]) (smart-mode-line . [(20160818 508) ((emacs (24 3)) (rich-minority (0 1 1))) "A color coded smart mode-line." tar ((:commit . "3656417ec06ba448f940d65e96bddb57fdc79244") (:url . "http://github.com/Malabarba/smart-mode-line") (:keywords "mode-line" "faces" "themes"))]) (smart-mark . [(20150911 1910) nil "Restore point after C-g when mark" single ((:commit . "04b522a23e3aae8381c6a976fc978532fcb2e7d0") (:keywords "mark" "restore"))]) (smart-indent-rigidly . [(20141205 1615) nil "Smart rigid indenting" single ((:commit . "323d1fe4d0b81e598249aad01bc44adb180ece0e") (:url . "https://github.com/re5et/smart-indent-rigidly") (:keywords "indenting" "coffee-mode" "haml-mode" "sass-mode"))]) (smart-hungry-delete . [(20170412 643) ((emacs (24 3))) "smart hungry deletion of whitespace" single ((:commit . "7c1d56a92481594e14d40b5fdf6c48657a0108a0") (:url . "https://github.com/hrehfeld/emacs-smart-hungry-delete") (:keywords "convenience"))]) (smart-forward . [(20140430 13) ((expand-region (0 8 0))) "Semantic navigation" single ((:commit . "7b6dbfdbd4b646376a567c70e1a161545431b72b") (:keywords "navigation"))]) (smart-dash . [(20110130 1916) nil "Smart-Dash minor mode" single nil]) (smart-cursor-color . [(20141124 919) nil "Change cursor color dynamically" single ((:commit . "1d190f49ca77734b55ac58f1b6276e42ada967b0") (:url . "https://github.com/7696122/smart-cursor-color/") (:keywords "cursor" "color" "face"))]) (smart-compile . [(20161118 403) nil "an interface to `compile'" single ((:keywords "tools" "unix"))]) (smart-comment . [(20160322 1139) nil "smarter commenting" single ((:commit . "17ddbd83205818763e6d68aa7a1aa9aaf414cbd4") (:keywords "lisp"))]) (smali-mode . [(20160406 1556) nil "Major mode for editing Smali/Baksmali files" single ((:commit . "10437ab0b29994cf4bf67ec28ccf82a74b8c026b") (:keywords "languages" "smali"))]) (sly-repl-ansi-color . [(20160214 18) ((sly (0)) (cl-lib (0 5))) "Add ANSI colors support to the sly mrepl." single ((:commit . "505d162d52219654b57a455e26c9e02c7254a8f2") (:url . "https://github.com/PuercoPop/sly-repl-ansi-color") (:keywords "sly"))]) (sly-quicklisp . [(20170112 135) ((sly (1 0 0 -2 2))) "Quicklisp support for SLY" tar ((:commit . "8a9e3c0c07c6861ec33b338cc46ac12e7ce6a477") (:url . "https://github.com/capitaomorte/sly-quicklisp") (:keywords "languages" "lisp" "sly"))]) (sly-named-readtables . [(20150817 816) ((sly (1 0 0 -2 2))) "Support named readtables in Common Lisp files" tar ((:commit . "df4ed79064cf85275804e201899b677bef4ab3f5") (:url . "https://github.com/capitaomorte/sly-named-readtables") (:keywords "languages" "lisp" "sly"))]) (sly-macrostep . [(20160119 434) ((sly (1 0 0 -2 2)) (macrostep (0 9))) "fancy macro-expansion via macrostep.el" tar ((:commit . "eb16778d104413a3e2a8d5537437c4ad76c2954b") (:url . "https://github.com/capitaomorte/sly-macrostep") (:keywords "languages" "lisp" "sly"))]) (sly-hello-world . [(20160119 636) ((sly (1 0 0 -2 2))) "A template SLY contrib" tar ((:commit . "1bfcca692b6ec0670ed309ffe29eb9384397c183") (:url . "https://github.com/capitaomorte/sly-hello-world") (:keywords "languages" "lisp" "sly"))]) (sly-company . [(20160308 557) ((sly (1 0 0 -3)) (company (0 7)) (emacs (24 3))) "sly completion backend for company mode" single ((:commit . "08aef69394fbef31dfeb3d3bb72a4557df9d7624") (:keywords "convenience" "lisp" "abbrev"))]) (sly . [(20170413 557) ((emacs (24 3))) "Sylvester the Cat's Common Lisp IDE" tar ((:commit . "35ccf713384477b9e314ffef69f762ce2a6a94e9") (:url . "https://github.com/joaotavora/sly") (:keywords "languages" "lisp" "sly"))]) (slstats . [(20170629 235) ((cl-lib (0 5)) (emacs (24))) "Acquire and display stats about Second Life" single ((:commit . "3c22a8e5cf022d4eca840fefe7960d7ae6dcf167") (:url . "https://github.com/davep/slstats.el") (:keywords "games"))]) (slovak-holidays . [(20150418 155) nil "Adds a list of slovak holidays to Emacs calendar" single ((:commit . "effb16dfcd14797bf7448f5113085479db339c02") (:keywords "calendar"))]) (slirm . [(20160201 625) ((emacs (24 4))) "Systematic Literature Review Mode for Emacs." single ((:commit . "9adfbe1fc67580e7d0d90f7e927a25d63a797464") (:url . "http://github.com/fbie/slirm"))]) (slime-volleyball . [(20140717 2141) nil "An SVG Slime Volleyball Game" tar ((:commit . "159b5c0f40b109e3854e94b89ec5383854c46ae3") (:keywords "games"))]) (slime-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Slime (tmTheme)" single ((:commit . "441288a5791d24e79ada2698888653ef3cf2ac6f") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (slime-ritz . [(20130218 1537) nil "slime extensions for ritz" single ((:commit . "4003fdaa5657d4ed1eeb0e244c46658cbb981667") (:url . "https://github.com/pallet/ritz") (:keywords "languages" "lisp" "slime"))]) (slime-docker . [(20160817 2344) ((emacs (24)) (slime (2 16)) (docker-tramp (0 1)) (cl-lib (0 5))) "Integration of SLIME with Docker containers." tar ((:commit . "f90fc274c2f764a5962a3cbcf0ea00622ee5bfe6") (:url . "https://github.com/daewok/slime-docker") (:keywords "docker" "lisp" "slime"))]) (slime-company . [(20161229 743) ((slime (2 13)) (company (0 9 0))) "slime completion backend for company mode" single ((:commit . "6c244690c80387a32b0cb984843e00c8b75ad6bb") (:keywords "convenience" "lisp" "abbrev"))]) (slime-annot . [(20131230 1908) ((slime (0))) "cl-annot support for SLIME" single ((:commit . "c99e69c15d935eabc671b483349a406e0da9518d") (:url . "https://github.com/arielnetworks/cl-annot"))]) (slime . [(20170622 1604) ((cl-lib (0 5)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar ((:commit . "74c1a83711a0c2b96e9387f3fa03f387a6713193") (:url . "https://github.com/slime/slime") (:keywords "languages" "lisp" "slime"))]) (slim-mode . [(20140611 950) nil "Major mode for editing Slim files" single ((:commit . "869c84821cf3e556b380c5c35d8ad62287c4df58") (:url . "http://github.com/slim-template/emacs-slim") (:keywords "markup" "language"))]) (slideview . [(20150324 1540) ((cl-lib (0 3))) "File slideshow" single ((:commit . "b6d170bda139aedf81b47dc55cbd1a3af512fb4c") (:url . "https://github.com/mhayashi1120/Emacs-slideview") (:keywords "files"))]) (slack . [(20170701 436) ((websocket (1 5)) (request (0 2 0)) (oauth2 (0 10)) (circe (2 2)) (alert (1 2)) (emojify (0 2))) "Slack client for Emacs" tar ((:commit . "35b0ae538b2023c91b035b3f9c133b28f0afbaf8") (:url . "https://github.com/yuya373/emacs-slack"))]) (sl . [(20161217 604) ((cl-lib (0 5))) "An Emacs clone of sl(1)" tar ((:commit . "0882117728be91276b815e18c2a66106bf9d69d3") (:url . "https://github.com/xuchunyang/sl.el"))]) (skype . [(20160711 124) nil "skype UI for emacs users.." tar ((:commit . "8e3b33e620ed355522aa36434ff41e3ced080629") (:keywords "skype" "chat"))]) (skewer-reload-stylesheets . [(20160725 520) ((skewer-mode (1 5 3))) "live-edit CSS, SCSS, Less, and friends." tar ((:commit . "27c5a64785cd61419c1fe5bf53da46cc278f251d"))]) (skewer-mode . [(20170122 938) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar ((:commit . "18a90f401451f8ca0486bdaf45647ac3ccebc0ac"))]) (skewer-less . [(20160828 1321) ((skewer-mode (1 5 3))) "Skewer support for live LESS stylesheet updates" single ((:commit . "4d4394418b70bd454efef1cb68129da05ab67891") (:keywords "languages" "tools"))]) (skeletor . [(20170616 1746) ((s (1 7 0)) (f (0 14 0)) (dash (2 2 0)) (cl-lib (0 3)) (let-alist (1 0 3)) (emacs (24 1))) "Provides project skeletons for Emacs" tar ((:commit . "01c330ec115fc29bba5d9bdf6c15beb4a44e2281"))]) (simplezen . [(20130421 300) ((s (1 4 0)) (dash (1 1 0))) "A simple subset of zencoding-mode for Emacs." single ((:commit . "119fdf2c6890a0c56045ae72cf4fce0071a81481"))]) (simplenote2 . [(20170618 644) ((request-deferred (0 2 0))) "Interact with simple-note.appspot.com" tar ((:commit . "78ab3d818633c0d6575cd1895c119bd690003bf6") (:keywords "simplenote"))]) (simplenote . [(20141118 640) nil "Interact with simple-note.appspot.com" single ((:commit . "e836fcdb5a6497a9ffd6bceddd19b4bc52189078") (:keywords "simplenote"))]) (simpleclip . [(20170603 1542) nil "Simplified access to the system clipboard" single ((:commit . "7deff873b79910496b4baf647cdb8dd5de63465a") (:url . "http://github.com/rolandwalker/simpleclip") (:keywords "convenience"))]) (simple-screen . [(20141023 758) nil "Simple screen configuration manager" single ((:commit . "4fcbdb4575310c0a2b4dd17fc8aeb4d7e6e9ffae") (:url . "https://github.com/wachikun/simple-screen") (:keywords "tools"))]) (simple-rtm . [(20160222 734) ((rtm (0 1)) (dash (2 0 0))) "Interactive Emacs mode for Remember The Milk" single ((:commit . "8c7cd96cf66ef112be5c363e3378e304f8f83999") (:keywords "remember" "the" "milk" "productivity" "todo"))]) (simple-mpc . [(20161103 1219) ((s (1 10 0))) "provides a simple interface to mpc" tar ((:commit . "61b39d02313fa51a1dd7326fe24871666c64a077") (:url . "https://github.com/jorenvo/simple-mpc") (:keywords "multimedia" "mpd" "mpc"))]) (simple-httpd . [(20170125 1910) ((cl-lib (0 3))) "pure elisp HTTP server" single ((:commit . "348483efea6ec2752bc5aa4028a16087d19b2809") (:url . "https://github.com/skeeto/emacs-http-server"))]) (simple-call-tree . [(20161007 1913) ((emacs (24 3)) (anaphora (1 0 0))) "analyze source code based on font-lock text-properties" single ((:commit . "431206e9c2b88cbab9cfe9ebf3f6cb73f5e6740f") (:url . "http://www.emacswiki.org/emacs/download/simple-call-tree.el") (:keywords "programming"))]) (simple-bookmarks . [(20160804 701) ((cl-lib (0 5))) "Bookmark / functioncall manager" tar ((:commit . "6c58337f2b7dbe9e58b5e097b1567f046a01d071") (:url . "https://github.com/jtkDvlp/simple-bookmarks") (:keywords "bookmark" "functioncall"))]) (simple+ . [(20170307 1529) ((strings (0))) "Extensions to standard library `simple.el'." single ((:url . "https://www.emacswiki.org/emacs/download/simple%2b.el") (:keywords "internal" "lisp" "extensions" "abbrev"))]) (simp . [(20161206 2151) nil "Simple project definition, chiefly for file finding, and grepping" tar ((:commit . "13959cabdc7a10d8878592ef4333b3e6df2f1483") (:url . "https://github.com/re5et/simp") (:keywords "project" "grep" "find"))]) (silkworm-theme . [(20160217 509) ((emacs (24))) "Light theme with pleasant, low contrast colors." single ((:commit . "7951b53e5caf9daf6a5a15a57ae3a668cb78bd7b"))]) (signature . [(20140730 1249) nil "Signature Survey" tar ((:commit . "c47df2e1189a84505f9224aa78e87b6c65d13d37"))]) (signal . [(20160816 738) ((emacs (24)) (cl-lib (0 5))) "Advanced hook" single ((:commit . "aa58327e2297df921d72a0370468b48663efd438") (:url . "https://github.com/mola-T/signal") (:keywords "internal" "lisp" "processes" "tools"))]) (sift . [(20160107 215) nil "Front-end for sift, a fast and powerful grep alternative" single ((:commit . "ef509ac4c579340e8d924c26d9e5858a9f4fb9de") (:url . "https://github.com/nlamirault/sift.el") (:keywords "sift" "ack" "pt" "ag" "grep" "search"))]) (sicp . [(20170124 1650) nil "Structure and Interpretation of Computer Programs in info format" tar ((:commit . "935da01b7aa782a1a7f9fd17b5512132b197da8c") (:url . "https://mitpress.mit.edu/sicp"))]) (sibilant-mode . [(20151119 1345) nil "Support for the Sibilant programming language" single ((:commit . "bc1b5d8cd597918bafc9b2880ee49024740e54ab") (:url . "http://sibilantjs.info") (:keywords "languages"))]) (shx . [(20170624 1454) ((emacs (24 4))) "\"Extras\" for the (comint-mode) shell" single ((:commit . "23d6d213a90e031dec8dbbaaeac5ddbe2cf050de") (:url . "https://github.com/riscy/shx-for-emacs") (:keywords "processes" "tools"))]) (shut-up . [(20150423 522) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single ((:commit . "a4fd18f37e20ae991c0dbba821b2c8e6f1679c39") (:url . "http://github.com/rejeep/shut-up.el"))]) (shrink-whitespace . [(20150916 1215) nil "Whitespace removal DWIM key" single ((:commit . "8d4263d974fbe66417c0bb9edc155ecc2f48e4b7") (:url . "https://github.com/jcpetkovich/shrink-whitespace.el") (:keywords "editing"))]) (shr-tag-pre-highlight . [(20170525 902) ((emacs (24)) (language-detection (0 1 0))) "Syntax highlighting code block in HTML" single ((:commit . "bc1bff471cf4adcd86d87b8c045623aff3b20889") (:url . "https://github.com/xuchunyang/shr-tag-pre-highlight.el") (:keywords "html"))]) (shpec-mode . [(20150530 222) nil "Minor mode for shpec specification" single ((:commit . "146adc8281d0f115df39a3a3f982ac59ab61b754") (:url . "http://github.com/shpec/shpec-mode") (:keywords "languages" "tools"))]) (showtip . [(20090830 340) nil "Show tip at cursor" single ((:commit . "930da302809a4257e8d69425455b29e1cc91949b") (:keywords "help"))]) (showkey . [(20170307 1528) nil "Show keys as you use them." single ((:url . "https://www.emacswiki.org/emacs/download/showkey.el") (:keywords "help" "keys" "mouse"))]) (show-marks . [(20130805 749) ((fm (1 0))) "Navigate and visualize the mark-ring" single ((:commit . "97609566582e65eed0d0a854efa5c312f209115d") (:url . "https://github.com/vapniks/mark") (:keywords "convenience"))]) (show-css . [(20160210 608) ((doom (1 3)) (s (1 10 0))) "Show the css of the html attribute the cursor is on" tar ((:commit . "771daeddd4df7a7c10f66419a837145649bab63b") (:url . "https://github.com/smmcg/showcss-mode") (:keywords "hypermedia"))]) (shoulda . [(20140616 1133) ((cl-lib (0 5))) "Shoulda test support for ruby" single ((:commit . "fbe8eb8efc6cfcca1713283a290882cfcdc8725e") (:keywords "ruby" "tests" "shoulda"))]) (shm . [(20170523 238) nil "Structured Haskell Mode" tar ((:commit . "bd08a0b2297667e2ac7896e3b480033ae5721d4d") (:keywords "development" "haskell" "structured"))]) (shimbun . [(20170630 1220) nil "interfacing with web newspapers" tar ((:keywords "news"))]) (shift-text . [(20130831 955) ((cl-lib (1 0)) (es-lib (0 3))) "Move the region in 4 directions, in a way similar to Eclipse's" single ((:commit . "1be9cbf994000022172ceb746fe1d597f57ea8ba") (:url . "https://github.com/sabof/shift-text"))]) (shift-number . [(20170301 659) nil "Increase/decrease the number at point" single ((:commit . "cd099a5582fc996b800ac7607f6c38a004ce9740") (:url . "https://github.com/alezost/shift-number.el") (:keywords "convenience"))]) (shen-elisp . [(20170427 1502) ((emacs (24 4))) "Shen implementation in Elisp" tar ((:commit . "ffe17dee05f75539cf5e4c59395e4c7400ececaa") (:keywords "shen" "elisp") (:url . "http://github.com/deech/shen-elisp"))]) (shelltest-mode . [(20141227 248) nil "Major mode for shelltestrunner" single ((:commit . "b4bdd547bcdac427561aa1452f2aeb65e3a3c9f5") (:url . "https://github.com/rtrn/shelltest-mode") (:keywords "languages"))]) (shelldoc . [(20151114 1925) ((cl-lib (0 3)) (s (1 9 0))) "shell command editing support with man page." single ((:commit . "5df2264eb60e45066f3633df4f34834751667346") (:url . "http://github.com/mhayashi1120/Emacs-shelldoc") (:keywords "applications"))]) (shell-toggle . [(20150226 611) nil "Toggle to and from the shell buffer" single ((:commit . "0d01bd9a780fdb7fe6609c552523f4498649a3b9") (:url . "https://github.com/knu/shell-toggle.el") (:keywords "processes"))]) (shell-switcher . [(20161028 2252) ((emacs (24))) "Provide fast switching between shell buffers." tar ((:commit . "28a7f753dd7addd2933510526f52620cb5a22048"))]) (shell-split-string . [(20151224 208) nil "Split strings using shell-like syntax" single ((:commit . "19f6f999c33cc66a4c91bacdcc3697c25d97bf5a") (:url . "https://github.com/10sr/shell-split-string-el") (:keywords "utility" "library" "shell" "string"))]) (shell-pop . [(20170304 616) ((emacs (24)) (cl-lib (0 5))) "helps you to use shell easily on Emacs. Only one key action to work." single ((:commit . "4a3a9d093ad1add792bba764c601aa28de302b34") (:url . "http://github.com/kyagi/shell-pop-el") (:keywords "shell" "terminal" "tools"))]) (shell-history . [(20100505 139) nil "integration with shell history" single ((:commit . "ee371a81f2d2bf5a308344078329ca1e9b5ed38c") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/shell-history.el") (:keywords "processes" "convenience"))]) (shell-here . [(20150728 1004) nil "Open a shell relative to the working directory" single ((:commit . "251309141e18978d2b8014345acc6f5afcd4d509") (:keywords "unix" "tools" "processes"))]) (shell-current-directory . [(20140101 1554) nil "create new shell based on buffer directory" single ((:commit . "bf843771bf9a4aa05e054ade799eb8862f3be89a") (:keywords "shell" "comint"))]) (shell-command . [(20090830 340) nil "enables tab-completion for `shell-command'" single ((:commit . "7e22125f746ce9ffbe9b0282d62f4b4bbbe672bd") (:keywords "shell"))]) (shampoo . [(20131230 219) nil "A remote Smalltalk development mode" tar ((:commit . "bc193c39636c30182159c5c91c37a9a4cb50fedf"))]) (shakespeare-mode . [(20160908 1511) nil "A major mode for editing Shakespearean templates." single ((:commit . "0406a5ac4c98fcd171f0539c5cd88050aa351ea8") (:url . "http://github.com/CodyReichert/shakespeare-mode") (:keywords "shakespeare" "hamlet" "lucius" "julius" "mode"))]) (shader-mode . [(20170130 623) ((emacs (24))) "Major mode for shader" single ((:commit . "76539359418d3d3cd4d2714a189b1bb777c2c15c") (:url . "https://github.com/midnightSuyama/shader-mode"))]) (shadchen . [(20141102 1039) nil "pattern matching for elisp" single ((:commit . "35f2b9c304eec990c16efbd557198289dc7cbb1f"))]) (shackle . [(20170213 1534) ((cl-lib (0 5))) "Enforce rules for popups" single ((:commit . "979b021077655ca38749a60c9752c0817e8fd93e") (:url . "https://github.com/wasamasa/shackle") (:keywords "convenience"))]) (sexy-monochrome-theme . [(20170611 859) nil "A sexy dark Emacs >= 24 theme for your sexy code" single ((:commit . "8def559784c9f3ebaad179caaff58a9c6afc83a5") (:url . "https://github.com/voloyev/sexy-monochrome-theme") (:keywords "themes"))]) (sexp-move . [(20150915 1030) nil "Improved S-Expression Movement" single ((:commit . "117f7a91ab7c25e438413753e916570122011ce7") (:url . "https://gitlab.com/elzair/sexp-move") (:keywords "sexp"))]) (seti-theme . [(20161208 836) nil "A dark colored theme, inspired by Seti Atom Theme" single ((:commit . "cbfef2fc15d19ce4c8326e65fafdd61737077132") (:url . "https://github.com/caisah/seti-theme") (:keywords "themes"))]) (session . [(20120510 1700) nil "use variables, registers and buffer places across sessions" single ((:commit . "19ea0806873daac3539a4b956e15655e99e3dd6c") (:url . "http://emacs-session.sourceforge.net/") (:keywords "session" "session management" "desktop" "data" "tools"))]) (services . [(20170327 835) ((cl-lib (0 5))) "Services database access functions." single ((:commit . "87d65bf9fd8b02101f751846c650fc518355d1ea") (:url . "https://github.com/davep/services.el") (:keywords "convenience" "net" "services"))]) (serverspec . [(20150623 455) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (helm (1 6 1))) "Serverspec minor mode" tar ((:commit . "b6dfe82af9869438de5e5d860ced196641f372c0") (:url . "http://101000lab.org"))]) (servant . [(20140216 419) ((s (1 8 0)) (dash (2 2 0)) (f (0 11 0)) (ansi (0 3 0)) (commander (0 5 0)) (epl (0 2)) (shut-up (0 2 1)) (web-server (0 0 1))) "ELPA server written in Emacs Lisp" tar ((:commit . "4d2aa8250b54b28e6e7ee4cd5ebd98a33db2c134") (:url . "http://github.com/rejeep/servant.el") (:keywords "elpa" "server"))]) (sequential-command . [(20151207 1403) nil "Many commands into one command" tar ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/sequential-command.el") (:keywords "convenience" "lisp"))]) (sequences . [(20130908 1122) ((emacs (24))) "Ports of some Clojure sequence functions." single ((:commit . "2bcc54a6738202fffb23e9579b9695337ba6ef26") (:keywords "convenience"))]) (seoul256-theme . [(20170320 1311) ((emacs (24 3))) "Low-contrast color scheme based on Seoul Colors." single ((:commit . "8afaf6aa2c63a003e2899e3e5ba8be85f6fdd350") (:url . "http://github.com/anandpiyer/seoul256-emacs") (:keywords "theme"))]) (sentence-navigation . [(20160830 1840) ((ample-regexps (0 1)) (cl-lib (0 5)) (emacs (24 4))) "Commands to navigate one-spaced sentences." single ((:commit . "f9aedbfc2b8d7957f427dac87558948c80582429") (:url . "https://github.com/noctuid/emacs-sentence-navigation") (:keywords "sentence" "evil"))]) (sentence-highlight . [(20170405 2352) nil "highlight the current sentence" single ((:commit . "f47839853455d0f4ffe50b3b0f9d3e7a15ace1fa") (:keywords "plain text" "writing" "highlight" "editing" "focus"))]) (sensitive . [(20131015 635) ((emacs (24)) (sequences (0 1 0))) "A dead simple way to load sensitive information" single ((:commit . "7f2c77811e983234e1a93055d78cc4480ae807c3") (:keywords "convenience"))]) (sendto . [(20160425 550) ((emacs (24 4))) "send the region content to a function" single ((:commit . "076b81d7a53f75b0a59b0ef3448f35570567054c") (:url . "https://github.com/lujun9972/sendto.el") (:keywords "convenience" "region"))]) (semi . [(20160816 239) ((flim (1 14 9))) "A library to provide MIME features." tar ((:commit . "6b9c62a76f22caf1476c837ee1976eaf0eaf38e7"))]) (selectric-mode . [(20170216 311) nil "IBM Selectric mode for Emacs" tar ((:commit . "a35cb3815caceaf273ad7d16ac3b2dd3c7a3003e") (:url . "https://github.com/rbanffy/selectric-mode") (:keywords "multimedia" "convenience" "typewriter" "selectric"))]) (selected . [(20170222 34) nil "Keymap for when region is active" single ((:commit . "03edaeac90bc6000d263f03be3d889b4685e1bf7") (:url . "http://github.com/Kungsgeten/selected.el") (:keywords "convenience"))]) (select-themes . [(20160220 1706) nil "Color theme selection with completing-read" single ((:commit . "236f54287519a3ea6dd7b3992d053e4f4ff5d0fe") (:url . "https://github.com/jasonm23/emacs-select-themes"))]) (sekka . [(20170618 500) ((cl-lib (0 3)) (concurrent (0 3 1)) (popup (0 5 2))) "A client for Sekka IME server" single ((:commit . "282bb04ed524ceff2a7a13cee118ec6df55b2323") (:url . "https://github.com/kiyoka/sekka") (:keywords "ime" "skk" "japanese"))]) (seethru . [(20150218 1029) ((shadchen (1 4))) "Easily change Emacs' transparency" single ((:commit . "d87e231f99313bea75b1e69e48c0f32968c82060") (:url . "http://github.com/benaiah/seethru") (:keywords "lisp" "tools" "alpha" "transparency"))]) (seeing-is-believing . [(20170214 520) nil "minor mode for running the seeing-is-believing ruby gem" single ((:commit . "fbbe246c0fda87bb26227bb826eebadb418a220f"))]) (secretaria . [(20170430 1724) ((emacs (24 4)) (org (9 0)) (alert (1 2)) (s (1 11 0)) (f (0 19 0))) "A personal assistant based on org-mode" tar ((:commit . "7551dfa21a4a796e0306041145c32c2ec8738028") (:url . "https://bitbucket.org/shackra/secretaria.el") (:keywords "org" "convenience"))]) (second-sel . [(20170702 729) nil "Secondary selection commands" single ((:url . "https://www.emacswiki.org/emacs/download/second-sel.el") (:keywords "region" "selection" "yank" "paste" "edit"))]) (seclusion-mode . [(20121118 1553) nil "Edit in seclusion. A Dark Room mode." single ((:commit . "9634e76c52bfb7200ff0f9f01404f743429e9ef0") (:url . "http://github.com/dleslie/seclusion-mode"))]) (searchq . [(20150829 511) ((emacs (24 3))) "Framework of queued search tasks using GREP, ACK, AG and more." tar ((:commit . "dd510d55ad66a82c6ef022cfe7c4a73ad5365f82"))]) (search-web . [(20150312 403) nil "Post web search queries using `browse-url'." single ((:commit . "c4ae86ac1acfc572b81f3d78764bd9a54034c331"))]) (sdlang-mode . [(20161130 2311) ((emacs (24 3))) "Major mode for Simple Declarative Language files." single ((:commit . "d42a6eedefeb44919fbacf58d302b6df18f05bbc") (:url . "https://github.com/CyberShadow/sdlang-mode") (:keywords "languages"))]) (sdcv . [(20170501 2155) ((emacs (24 3)) (popup (0 5 3)) (showtip (0 1)) (pos-tip (0 4 6)) (cl-lib (0 3))) "Interface for sdcv (StartDict console version)." single ((:commit . "cf7aa835360a1cb93b2b5fedaf5b816ff7410f0f") (:url . "http://www.emacswiki.org/emacs/download/sdcv.el") (:keywords "startdict" "sdcv"))]) (scss-mode . [(20150107 1400) nil "Major mode for editing SCSS files" single ((:commit . "b010d134f499c4b4ad33fe8a669a81e9a531b0b2") (:url . "https://github.com/antonj/scss-mode") (:keywords "scss" "css" "mode"))]) (scrooge . [(20160718 1735) ((emacs (24)) (thrift (0 9 3))) "Major mode for Twitter Scrooge files" single ((:commit . "5e8a301919ec88a7aa48a9c66cafb1bddd9f6100") (:keywords "scrooge" "thrift"))]) (scribble-mode . [(20160124 1528) ((emacs (24))) "Major mode for editing Scribble documents" single ((:commit . "34e9e5edb921813b6483e0fefa848efb6ee4b314") (:url . "https://github.com/emacs-pe/scribble-mode") (:keywords "convenience"))]) (screenshot . [(20120509 405) nil "Take a screenshot in Emacs" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/screenshot.el") (:keywords "images" "hypermedia"))]) (scratches . [(20151005 2116) ((dash (2 11 0)) (f (0 17 0))) "Multiple scratches in any language" single ((:commit . "9441afe6396ca38f08029123fab5d87429cbf315") (:keywords "scratch"))]) (scratch-pop . [(20170510 758) ((popwin (0 7 0 -3))) "Generate, popup (& optionally backup) scratch buffer(s)." single ((:commit . "7f4172c792b10bd38898dd8963cf0ade91921869") (:url . "http://hins11.yu-yake.com/"))]) (scratch-palette . [(20150225 42) ((popwin (0 7 0 -3))) "make scratch buffer for each files" single ((:commit . "f6803b448079f4a81cc699cec7442ef543cd5818") (:url . "http://hins11.yu-yake.com/"))]) (scratch-message . [(20170107 536) nil "Changing message in your scratch buffer" single ((:commit . "3ecc7f5e3b8a597ebd1492fd426d3720a7f34302") (:url . "https://github.com/thisirs/scratch-message.git") (:keywords "util" "scratch"))]) (scratch-log . [(20141114 2343) nil "Utility for *scratch* buffer." single ((:commit . "1168f7f16d36ca0f4ddf2bb98881f8db62cc5dc0"))]) (scratch-ext . [(20140103 2116) nil "Extensions for *scratch*" single ((:commit . "388c53cddd0466b451264894667ed64a6947ad67") (:url . "https://github.com/kyanagi/scratch-ext-el"))]) (scratch . [(20170614 1401) nil "Mode-specific scratch buffers" single ((:commit . "2cdf2b841ce7a0987093f65b0cc431947549f897") (:keywords "convenience" "tools" "files"))]) (scpaste . [(20160613 1943) ((htmlize (1 39))) "Paste to the web via scp." single ((:commit . "eb415f7ca56d64c89cf99d5c6f8a442c4ec3912e") (:url . "https://github.com/technomancy/scpaste") (:keywords "convenience" "hypermedia"))]) (sclang-snippets . [(20130513 51) ((yasnippet (0 8 0))) "Snippets for the SuperCollider Emacs mode" tar ((:commit . "c840a416b96f83bdd70491e3d1fbe2f1ae8b3f58") (:keywords "snippets"))]) (sclang-extensions . [(20160508 2038) ((auto-complete (1 4 0)) (s (1 3 1)) (dash (1 2 0)) (emacs (24 1))) "Extensions for the SuperCollider Emacs mode." tar ((:commit . "e9cc79732f16fdb582129303110c163dcc0d6da0") (:keywords "sclang" "supercollider" "languages" "tools"))]) (scion . [(20130315 555) nil "Haskell Minor Mode for Interacting with the Scion Library" single ((:commit . "99b4589175665687181a932cd836850205625f71") (:url . "https://code.google.com/p/scion-lib/"))]) (schrute . [(20170521 1140) ((emacs (24 3))) "Help you remember there is a better way to do something." single ((:commit . "59faa6c4232ae183cea93237301acad8c0763997") (:url . "https://bitbucket.org/shackra/dwight-k.-schrute") (:keywords "convenience"))]) (scheme-here . [(20141028 18) nil "cmuscheme extension for multiple inferior processes" single ((:commit . "430ba017cc530865218de23a8f7985095a58343f") (:url . "https://github.com/kaihaosw/scheme-here") (:keywords "scheme"))]) (scheme-complete . [(20170410 617) nil "Smart auto completion for Scheme in Emacs" single ((:commit . "6bf844202cb9e8490ce37a414374be3f04eefca4"))]) (scf-mode . [(20151121 1848) nil "shorten file-names in compilation type buffers" single ((:commit . "dbfcdcd89034f208d65e181af58e0d73ad09f8b2") (:url . "https://github.com/lewang/scf-mode") (:keywords "compilation"))]) (scala-mode . [(20170611 806) nil "Major mode for editing Scala" tar ((:commit . "6f49104c182ec1cc8b30314dc92d02f4752106cf") (:url . "https://github.com/ensime/emacs-scala-mode") (:keywords "languages"))]) (scad-preview . [(20160206 536) ((scad-mode (91 0))) "Preview SCAD models in real-time within Emacs" single ((:commit . "fee011589671cc8f1296cb6aa81553e5bb699819") (:url . "http://hins11.yu-yake.com/"))]) (scad-mode . [(20170219 2003) nil "A major mode for editing OpenSCAD code" single ((:commit . "0b7aaa108710b2f197cbcb32fdb3ae12ff121747") (:url . "https://raw.github.com/openscad/openscad/master/contrib/scad-mode.el") (:keywords "languages"))]) (sbt-mode . [(20170629 2356) ((emacs (24 4))) "Interactive support for sbt projects" tar ((:commit . "03834eb7fa0922efaa31d2157d9effa2b7e04810") (:url . "https://github.com/ensime/emacs-sbt-mode") (:keywords "languages"))]) (sayid . [(20170509 1215) ((cider (0 14 0))) "sayid nREPL middleware client" single ((:commit . "20a92323c3edc060c521aa93edab9dad47646b4f") (:url . "https://github.com/bpiel/sayid"))]) (say-what-im-doing . [(20160706 1231) nil "dictate what you're doing with text to speech" single ((:commit . "5b2ce6783b02805bcac1107a149bfba3852cd9d5") (:url . "http://github.com/benaiah/say-what-im-doing") (:keywords "text to speech" "dumb" "funny"))]) (savekill . [(20140417 1929) nil "Save kill ring to disk" single ((:commit . "67fc94e3d8fe8ce3ca16f90518f6a46479b63e34") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/savekill.el") (:keywords "tools"))]) (save-visited-files . [(20170228 2250) nil "save opened files across sessions" single ((:commit . "33e8d223f622001f5792c52d8b36661e46b5834c") (:url . "http://github.com/nflath/save-visited-files"))]) (save-load-path . [(20140206 414) nil "save load-path and reuse it to test" single ((:commit . "6cb763a37e2b8af505bff2bcd11fd49c9ea04d66") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/save-load-path.el") (:keywords "lisp"))]) (sauron . [(20160501 1045) nil "Track (erc/org/dbus/...) events and react to them." tar ((:commit . "3847b4be16ec3ba9675a230dab5adf029174b3cf"))]) (sass-mode . [(20161006 2326) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" single ((:commit . "37105f46f6ea3592039f2ea7d0463ae7f042616e") (:url . "http://github.com/nex3/haml/tree/master") (:keywords "markup" "language" "css"))]) (sane-term . [(20160620 647) ((emacs (24 1))) "Multi Term is crazy. This is not." single ((:commit . "ef6fd08078f49f2bb3be60855d2d002bb6a5e0d2") (:url . "http://github.com/adamrt/sane-term"))]) (salt-mode . [(20170702 246) ((emacs (24 4)) (yaml-mode (0 0 12)) (mmm-mode (0 5 4)) (mmm-jinja2 (0 1))) "Major mode for Salt States" single ((:commit . "ea4980b9c9e8e7570086a2558fe7f66c62a528ad") (:url . "https://github.com/glynnforrest/salt-mode") (:keywords "languages"))]) (salesforce-utils . [(20160813 1854) ((cl-lib (0 5))) "simple utilities for Salesforce" single ((:commit . "73328baf0fb94ac0d0de645a8f6d42e5ae27f773") (:url . "https://github.com/grimnebulin/emacs-salesforce"))]) (sage-shell-mode . [(20170218 1829) ((cl-lib (0 5)) (emacs (24 1)) (let-alist (1 0 4)) (deferred (0 4 0))) "A front-end for Sage Math" tar ((:commit . "db99da9189002f3a95e9dc24038f73fc3a3f0499") (:url . "https://github.com/sagemath/sage-shell-mode") (:keywords "sage" "math"))]) (sackspace . [(20130719 256) nil "A better backspace" single ((:commit . "fd0480eaaf6d3d11fd30ac5feb2da2f4f7572708") (:url . "http://github.com/cofi/sackspace.el") (:keywords "delete" "convenience"))]) (s-buffer . [(20130605 1424) ((s (1 6 0)) (noflet (0 0 3))) "s operations for buffers" single ((:commit . "f95d234282377f00a2c3a9846681080cb95bb1df") (:url . "http://github.com/nicferrier/emacs-s-buffer") (:keywords "lisp"))]) (s . [(20170428 1026) nil "The long lost Emacs string manipulation library." single ((:commit . "e61dee51474e61b777575b474459c582f3084f64") (:keywords "strings"))]) (ryo-modal . [(20170217 1021) ((emacs (24 4))) "Roll your own modal mode" single ((:commit . "f6073b56c43a8bc4fc01eb27faba3335d556606a") (:url . "http://github.com/Kungsgeten/ryo-modal") (:keywords "convenience" "modal" "keys"))]) (rvm . [(20150402 742) nil "Emacs integration for rvm" single ((:commit . "8e45a9bad8e317ff195f384dab14d3402497dc79") (:url . "http://www.emacswiki.org/emacs/RvmEl") (:keywords "ruby" "rvm"))]) (rust-playground . [(20170211 5) ((emacs (24 3)) (rust-mode (0 3 0))) "Local Rust playground for short code snippets." single ((:commit . "ff4149489c30a65817750428847217368bd995ba") (:url . "https://github.com/grafov/rust-playground") (:keywords "tools" "rust"))]) (rust-mode . [(20170606 457) ((emacs (24 0))) "A major emacs mode for editing Rust source code" single ((:commit . "ac6a45e6091c0d542b696b6e13551be7e333264a") (:url . "https://github.com/rust-lang/rust-mode") (:keywords "languages"))]) (russian-holidays . [(20170109 1340) nil "Russian holidays for the calendar" single ((:commit . "b285a30f29d85c48e3ea4eb93972d34a090c167b") (:url . "https://github.com/grafov/russian-holidays"))]) (runtests . [(20150807 131) nil "Run unit tests from Emacs" single ((:commit . "ed90249f24cc48290018df48b9b9b7172440be3e") (:url . "https://github.com/sunesimonsen/emacs-runtests") (:keywords "test"))]) (runner . [(20160524 43) nil "Improved \"open with\" suggestions for dired" single ((:commit . "a211d57ddc600410d07a8b534920ba905b093d87") (:url . "https://github.com/thamer/runner") (:keywords "shell command" "dired" "file extension" "open with"))]) (ruby-tools . [(20151209 815) nil "Collection of handy functions for ruby-mode." tar ((:commit . "6b97066b58a4f82eb2ecea6434a0a7e981aa4c18"))]) (ruby-test-mode . [(20170515 1008) ((ruby-mode (1 0)) (pcre2el (1 8))) "Minor mode for Behaviour and Test Driven" single ((:commit . "740ff1a7c81eb8380fd0f0cdb7c32238acf13dd1") (:keywords "ruby" "unit" "test" "rspec"))]) (ruby-refactor . [(20160214 850) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." single ((:commit . "e6b7125878a08518bffec6942df0c606f748e9ee") (:url . "https://github.com/ajvargo/ruby-refactor") (:keywords "refactor" "ruby"))]) (ruby-interpolation . [(20131112 852) nil "Ruby string interpolation helpers" single ((:commit . "1978e337601222cedf00e117bf4b5cac15d1f203") (:url . "http://github.com/leoc/ruby-interpolation.el"))]) (ruby-hash-syntax . [(20141010 839) nil "Toggle ruby hash syntax between classic and 1.9 styles" single ((:commit . "13288a29478a9e45ab4fd2188aea8d4894e08848") (:url . "https://github.com/purcell/ruby-hash-syntax") (:keywords "languages"))]) (ruby-guard . [(20160131 1752) nil "Launching guard directly inside emacs." single ((:commit . "bc864cadb241be855ada148f07e5048cce0991a0") (:url . "https://github.com/cheunghy/ruby-guard") (:keywords "ruby" "guard" "rails"))]) (ruby-factory . [(20160101 2321) ((inflections (1 1))) "Minor mode for Ruby test object generation libraries" tar ((:commit . "2bb7ccc2fccb5257376a989aa395bc7b9eb1d55d") (:url . "http://github.com/sshaw/ruby-factory-mode") (:keywords "ruby" "rails" "convenience"))]) (ruby-end . [(20141215 423) nil "Automatic insertion of end blocks for Ruby" single ((:commit . "ea453f5ac6259f09667fa26b865b6afacd06aa97") (:url . "http://github.com/rejeep/ruby-end") (:keywords "speed" "convenience" "ruby"))]) (ruby-electric . [(20150424 752) nil "Minor mode for electrically editing ruby code" single ((:url . "https://github.com/knu/ruby-electric.el") (:keywords "languages" "ruby"))]) (ruby-dev . [(20130811 151) nil "Interactive developement environment for Ruby." tar ((:commit . "3a6f6e489697916dd554852492bd325879be2e44"))]) (ruby-compilation . [(20150708 2340) ((inf-ruby (2 2 1))) "run a ruby process in a compilation buffer" single ((:commit . "134438af8fbdfa9c8077267c768d273a9792b484") (:url . "https://github.com/eschulte/rinari") (:keywords "test" "convenience"))]) (ruby-block . [(20131210 1931) nil "highlight matching block" single ((:keywords "languages" "faces" "ruby"))]) (ruby-additional . [(20161115 2259) ((emacs (24 3)) (ruby-mode (1 2))) "ruby-mode extensions yet to be merged into Emacs" tar ((:url . "https://svn.ruby-lang.org/cgi-bin/viewvc.cgi/trunk/misc/") (:keywords "ruby" "languages"))]) (rubocop . [(20170311 2211) ((emacs (24))) "An Emacs interface for RuboCop" single ((:commit . "980bedb455e3551d35a212fae515c054888907c1") (:url . "https://github.com/bbatsov/rubocop-emacs") (:keywords "project" "convenience"))]) (rtm . [(20160116 927) ((cl-lib (1 0))) "An elisp implementation of the Remember The Milk API" single ((:commit . "08dc10458b56e72f1512896192b2114ef57e58c5") (:url . "https://github.com/pmiddend/emacs-rtm") (:keywords "remember" "the" "milk" "productivity" "todo"))]) (rtags . [(20170628 1552) nil "A front-end for rtags" single ((:commit . "005e5569366b519850f0ae5b78f618f4d67d8785") (:url . "http://rtags.net"))]) (rspec-mode . [(20170312 56) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar ((:commit . "fe336636a57955b927b5994c8c738e21cacdc800") (:url . "http://github.com/pezra/rspec-mode") (:keywords "rspec" "ruby"))]) (rsense . [(20100510 2105) nil "RSense client for Emacs" single ((:commit . "8b5ee58318747ca1dde84ee41d48c4f50175cf35") (:keywords "convenience"))]) (rpn-calc . [(20170522 1842) ((popup (0 4))) "quick RPN calculator for hackers" single ((:commit . "66fcb64dbfddfc23823356b6213215bd7ab5efc6") (:url . "https://github.com/zk-phi/rpn-calc"))]) (rpm-spec-mode . [(20160710 436) nil "RPM spec file editing commands for Emacs/XEmacs" single ((:commit . "c1c38050c48ea330c7cea632b8785d66daeefb2b") (:keywords "unix" "languages"))]) (roy-mode . [(20121208 358) nil "Roy major mode" single ((:commit . "0416f561edbc6b4a29fced8be84d2527a9613d65") (:url . "https://github.com/folone/roy-mode") (:keywords "extensions"))]) (rotate . [(20160909 136) nil "Rotate the layout of emacs" single ((:commit . "091b5ac4fc310773253efb317e3dbe8e46959ba6") (:url . "https://github.com/daichirata/emacs-rotate") (:keywords "window" "layout"))]) (rope-read-mode . [(20170620 237) nil "Rearrange lines to read text smoothly" single ((:commit . "bbb67d54a31ce238e4a8b1aae677ef055aea27ba") (:url . "https://github.com/marcowahl/rope-read-mode") (:keywords "reading" "convenience" "chill"))]) (roguel-ike . [(20160119 1902) ((popup (0 5 0))) "A coffee-break roguelike" tar ((:commit . "706dcb0687e8016d7d776f9d9e5ace9fdbbca43c"))]) (robots-txt-mode . [(20160820 202) nil "Major mode for editing robots.txt" single ((:commit . "edf1f8082c88cb2ff5a784ba00f92c535aaa1c7d") (:keywords "web"))]) (robe . [(20170611 1755) ((inf-ruby (2 5 1)) (emacs (24 4))) "Code navigation, documentation lookup and completion for Ruby" tar ((:commit . "9305fa042c40a32a2fcf60f935c0796dc67b5c55") (:url . "https://github.com/dgutov/robe") (:keywords "ruby" "convenience" "rails"))]) (rjsx-mode . [(20170422 832) ((emacs (24 4)) (js2-mode (20160623))) "Real support for JSX" single ((:commit . "b41de6c1b2f6668b674f8e5bf880f697c9ffb749") (:url . "https://github.com/felipeochoa/rjsx-mode/") (:keywords "languages"))]) (riscv-mode . [(20161001 1838) ((emacs (24 4))) "Major-mode for RISC V assembly" single ((:commit . "e8425b71443a2decbe70cc5892e72ce2ceb17570") (:url . "https://github.com/AdamNiederer/riscv-mode") (:keywords "riscv" "assembly"))]) (ripgrep . [(20170602 152) nil "Front-end for ripgrep, a command line search tool" single ((:commit . "5af6a0b2ee8a639cf857724ce4328f1f0955c99e") (:url . "https://github.com/nlamirault/ripgrep.el") (:keywords "ripgrep" "ack" "pt" "ag" "sift" "grep" "search"))]) (rings . [(20160531 1327) nil "Buffer rings. Like tabs, but better." single ((:commit . "3590b222eb80652cbd27866f066bd3571d86edfc") (:url . "http://github.com/konr/rings") (:keywords "utilities" "productivity"))]) (rinari . [(20150708 2340) ((ruby-mode (1 0)) (inf-ruby (2 2 5)) (ruby-compilation (0 16)) (jump (2 0))) "Rinari Is Not A Rails IDE" single ((:commit . "134438af8fbdfa9c8077267c768d273a9792b484") (:url . "https://github.com/eschulte/rinari") (:keywords "ruby" "rails" "project" "convenience" "web"))]) (rigid-tabs . [(20150807 856) ((emacs (24 3))) "Rigidify and adjust the visual alignment of TABs" single ((:commit . "c7c6b726806df7e8cb25a41b213a207850c91cb7") (:url . "https://github.com/wavexx/rigid-tabs.el") (:keywords "diff" "whitespace" "version control" "magit"))]) (rich-minority . [(20160725 1255) ((cl-lib (0 5))) "Clean-up and Beautify the list of minor-modes." single ((:commit . "478f0fbc0dbba6619a96a471b9b295f2f436475f") (:url . "https://github.com/Malabarba/rich-minority") (:keywords "mode-line" "faces"))]) (rhtml-mode . [(20130422 611) nil "major mode for editing RHTML files" tar ((:commit . "a6d71b38a3db867ccf82999c99805db1a3a33c33"))]) (rg . [(20170622 1135) ((cl-lib (0 5)) (emacs (24)) (s (1 10 0)) (seq (2 19))) "A ripgrep frontend, similar to built in grep.el." single ((:commit . "09a5919d8982cfdb8496f0db7deccfb510a7f000") (:url . "https://github.com/dajva/rg.el") (:keywords "matching" "tools"))]) (rfringe . [(20110405 820) nil "display the relative location of the region, in the fringe." single ((:url . "http://www.emacswiki.org/emacs/rfringe.el") (:keywords "fringe" "bitmap"))]) (reykjavik-theme . [(20160109 0) ((emacs (24))) "Theme with a dark background." single ((:commit . "d9bb783d6cf3c3b52cf377d9207484fba54657fd"))]) (revive . [(20150417 1555) nil "Resume Emacs" single ((:commit . "16e1ac7cfa2fdccddf60d4a0e15731fc7448d818"))]) (review-mode . [(20170105 2156) nil "major mode for ReVIEW" single ((:commit . "fc7a2f152be63874da4211ec0b49ff1fadb6465e") (:url . "https://github.com/kmuto/review-el"))]) (reverse-theme . [(20141204 1745) nil "Reverse theme for Emacs" single ((:commit . "8319d0d5342890a3530ffa4daafdb7c35feda1ca") (:url . "https://github.com/syohex/emacs-reverse-theme"))]) (reverse-im . [(20170623 640) ((emacs (24 4))) "Reverse mapping for keyboard layouts other than english." single ((:commit . "da6a4d2fdc1019e7fcd050db6c5344fdad1e2286") (:url . "https://github.com/a13/reverse-im.el") (:keywords "input" "method"))]) (reveal-next . [(20170101 1120) nil "Progressively reveal text after the cursor." single ((:url . "http://www.emacswiki.org/reveal-next.el") (:keywords "hide" "show" "invisible" "learning"))]) (reveal-in-osx-finder . [(20150802 957) nil "Reveal file associated with buffer in OS X Finder" single ((:commit . "5710e5936e47139a610ec9a06899f72e77ddc7bc") (:url . "https://github.com/kaz-yos/reveal-in-osx-finder") (:keywords "os x" "finder"))]) (restclient-test . [(20160618 315) ((emacs (24 4)) (restclient (0))) "Run tests with restclient.el" single ((:commit . "a21e41b905b423e762eeb4da3a236c8b1aea8c49") (:url . "https://github.com/simenheg/restclient-test.el"))]) (restclient-helm . [(20170314 854) ((restclient (0)) (helm (1 9 4))) "helm interface for restclient.el" single ((:commit . "423357caafe15bfd6881dad71129b58f872d8290") (:keywords "http" "helm"))]) (restclient . [(20170702 118) nil "An interactive HTTP client for Emacs" single ((:commit . "423357caafe15bfd6881dad71129b58f872d8290") (:keywords "http"))]) (restart-emacs . [(20170609 905) nil "Restart emacs from within emacs" single ((:commit . "e6ac81464cce37b7ae3aea38dcf2720cc2750d31") (:url . "https://github.com/iqbalansari/restart-emacs") (:keywords "convenience"))]) (resize-window . [(20170624 1658) ((emacs (24)) (cl-lib (0 5))) "easily resize windows" single ((:commit . "274a96e9754b606d85c9dd62cfed628ff4f736df") (:url . "https://github.com/dpsutton/resize-mode") (:keywords "window" "resize"))]) (requirejs-mode . [(20130215 1304) nil "Improved AMD module management" single ((:commit . "bbb0c09f8eb2d6a33c17319be8137f68bb16bc92") (:keywords "javascript" "amd" "requirejs"))]) (requirejs . [(20151203 2319) ((js2-mode (20150713)) (popup (0 5 3)) (s (1 9 0)) (cl-lib (0 5)) (yasnippet (20151011 1823))) "Requirejs import manipulation and source traversal." tar ((:commit . "4ea2a5fcbc76e4cbb6a7461e6f05f019b75865b1") (:url . "https://github.com/joeheyming/requirejs-emacs") (:keywords "javascript" "requirejs"))]) (request-deferred . [(20160419 1605) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" single ((:commit . "a3d080e57eb8be606fbf39d1baff94e1b16e1fb8"))]) (request . [(20170131 1747) ((emacs (24 4))) "Compatible layer for URL request in Emacs" single ((:commit . "a3d080e57eb8be606fbf39d1baff94e1b16e1fb8"))]) (req-package . [(20170314 2342) ((use-package (1 0)) (dash (2 7 0)) (log4e (0 2 0)) (ht (0))) "A use-package wrapper for package runtime dependencies management" tar ((:commit . "e7108177d05fc6f674b1766f1154d0652654b1af") (:url . "https://github.com/edvorg/req-package") (:keywords "dotemacs" "startup" "speed" "config" "package"))]) (repo . [(20170213 139) ((emacs (24 3))) "Running repo from Emacs" single ((:commit . "d7b87cd515bad8a67d3a892a46a23f5fe81e08de") (:url . "https://github.com/canatella/repo-el") (:keywords "convenience"))]) (replace-symbol . [(20160517 1712) nil "Rename symbols in expressions or buffers" single ((:commit . "baf949e528aee1881f455f9c84e67718bedcb3f6") (:url . "https://github.com/bmastenbrook/replace-symbol-el"))]) (replace-pairs . [(20160207 451) ((emacs (24 4))) "Query-replace pairs of things" single ((:commit . "1e49071e2ef46a458a28f77681e313a63db5663c") (:url . "https://github.com/davidshepherd7/replace-pairs"))]) (replace-from-region . [(20170227 1516) nil "Replace commands whose query is from region" single ((:commit . "dc9318b9b2822da7b00ecc34d1dc965c8f96c9bb") (:url . "http://www.emacswiki.org/emacs/download/replace-from-region.el") (:keywords "replace" "search" "region"))]) (replace+ . [(20170307 942) nil "Extensions to `replace.el'." single ((:url . "https://www.emacswiki.org/emacs/download/replace%2b.el") (:keywords "matching" "help" "internal" "tools" "local"))]) (repl-toggle . [(20161203 414) ((fullframe (0 0 5))) "Switch to/from repl buffer for current major-mode" single ((:commit . "50044030969d68e9f78a6db4e0a9229f5f3eaec3") (:keywords "repl" "buffers" "toggle"))]) (repeatable-motion . [(20170620 1148) ((emacs (24))) "Make repeatable versions of motions" tar ((:commit . "77aa35b27c8a76dc8deef87c9f71ef7e6fd289ee") (:url . "https://github.com/willghatch/emacs-repeatable-motion") (:keywords "motion" "repeatable"))]) (remember-last-theme . [(20170619 1433) ((emacs (24 4))) "Remember the last used theme between sessions." single ((:commit . "57e8e2a475ea89316dbb5c4d2ea047f56a2cbcdf") (:url . "https://github.com/anler/remember-last-theme") (:keywords "convenience" "faces"))]) (remark-mode . [(20151004 955) ((markdown-mode (2 0))) "Major mode for the remark slideshow tool" tar ((:commit . "a7e22eaf17673bd5cbf2f80bdfb219c89c1ea74b") (:keywords "remark" "slideshow" "markdown"))]) (relax . [(20131029 1434) ((json (1 2))) "For browsing and interacting with CouchDB" single ((:commit . "6e33892623ab87833082262321dc8e1977209626") (:url . "http://github.com/technomancy/relax.el") (:keywords "database" "http"))]) (relative-buffers . [(20160221 1123) ((cl-lib (0 5)) (dash (2 6 0)) (s (1 9 0)) (f (0 16 2))) "Emacs buffers naming convention" single ((:commit . "2547475084244d266b507e563c9b4034705cfeca") (:url . "https://github.com/proofit404/relative-buffers"))]) (related . [(20161002 2310) ((cl-lib (0 5))) "Switch back and forth between similarly named buffers." single ((:commit . "0065a2e16eeaa9bface49f7f0815b9cf9719f441") (:url . "https://bitbucket.org/lyude/related/raw/master/related.el") (:keywords "file" "buffer" "switch" "selection" "matching" "convenience"))]) (register-channel . [(20150513 2059) nil "Jump around fast using registers" single ((:commit . "f62f9a62ebd2537d4a8c8f2e358562c67d2aefc1") (:keywords "convenience"))]) (region-state . [(20151128 238) nil "Show the number of chars/lines or rows/columns in the region" single ((:commit . "07ffb7d9ada2fcd204f3447f078c265d25f36f60") (:url . "https://github.com/xuchunyang/region-state.el") (:keywords "convenience"))]) (region-convert . [(20161118 1859) nil "Convert string in region by Lisp function" single ((:commit . "10578576f6cb2945aed00fdcd585fc65cd2c5c31") (:url . "https://github.com/zonuexe/right-click-context") (:keywords "region" "convenience"))]) (region-bindings-mode . [(20140407 1514) nil "Enable custom bindings when mark is active." single ((:commit . "3fa5dbdbd7c000bebff6d9d14a4be326ec24b6fc") (:url . "https://github.com/fgallina/region-bindings-mode") (:keywords "convenience"))]) (regex-tool . [(20170104 1118) nil "A regular expression evaluation tool for programmers" single ((:commit . "0b4a0111143c88ef94bec56624cb2e00c1a054e6") (:url . "http://www.newartisans.com/") (:keywords "regex" "languages" "programming" "development"))]) (regex-dsl . [(20100124 228) nil "lisp syntax for regexps" single ((:commit . "ac89ab8b7691a165ef3007cb84417125cfc0632e"))]) (refine . [(20170322 1527) ((emacs (24 3)) (s (1 11 0)) (dash (2 12 0)) (list-utils (0 4 4)) (loop (1 2))) "interactive value editing" single ((:commit . "55984dbd570c361e7d56d85f2d4ecfbcc567bda1") (:keywords "convenience"))]) (refheap . [(20140902 1402) ((json (1 2))) "A library for pasting to https://refheap.com" single ((:commit . "d41f8efb8e913b29035f545914859e3f18287492") (:url . "https://github.com/Raynes/refheap.el"))]) (redtick . [(20170129 1428) ((emacs (24 4))) "Smallest pomodoro timer (1 char)" tar ((:commit . "e6d2e9b69ec666f460f9158dd31cdf035eeb1080") (:url . "http://github.com/ferfebles/redtick") (:keywords "calendar"))]) (redshank . [(20120510 1230) nil "No description available." tar ((:commit . "f98e68f532e622bcd464292ca4a9cf5fbea14ebb"))]) (redprl . [(20160912 1847) ((emacs (24 3))) "Major mode for editing RedPRL proofs and interacting with RedPRL" single ((:commit . "b650c25486229a6342521a5815a79eead4d7c832") (:keywords "languages"))]) (redpen-paragraph . [(20160625 350) ((emacs (24)) (cl-lib (0 5)) (json (1 4))) "RedPen interface." single ((:commit . "770ffb34b04bfa0ea8484fa1506e96c530168e13") (:url . "https://github.com/karronoli/redpen-paragraph.el") (:keywords "document" "proofreading" "help"))]) (redo+ . [(20131117 351) nil "Redo/undo system for Emacs" single ((:keywords "lisp" "extensions"))]) (redis . [(20150531 1248) ((emacs (24)) (cl-lib (0 5))) "Redis integration" single ((:commit . "2c33f3397bc14e7a8192867b55920492d4eead8c") (:url . "https://github.com/emacs-pe/redis.el") (:keywords "convenience"))]) (recursive-narrow . [(20140902 1027) nil "narrow-to-region that operates recursively" single ((:commit . "bc0cab88234ca92640d4b8da0d83e132c1897922") (:url . "http://github.com/nflath/recursive-narrow"))]) (rectangle-utils . [(20160914 2108) ((emacs (24)) (cl-lib (0 5))) "Some useful rectangle functions." single ((:commit . "6fe38fdd48ef5305a908b94a043a966ac3f2053a") (:url . "https://github.com/thierryvolpiatto/rectangle-utils"))]) (rect+ . [(20150620 1744) nil "Extensions to rect.el" single ((:commit . "299b742faa0bc4448e0d5fe9cb98ab1eb93b8dcc") (:url . "https://github.com/mhayashi1120/Emacs-rectplus") (:keywords "extensions" "data" "tools"))]) (recover-buffers . [(20150812 5) nil "revisit all buffers from an auto-save file" tar ((:commit . "a1db7f084977697081da3497628e3514e032b966"))]) (recompile-on-save . [(20151126 646) ((dash (1 1 0)) (cl-lib (0 5))) "Trigger recompilation on file save." single ((:commit . "92e11446869d878803d4f3dec5d2101380c12bb2") (:url . "https://github.com/maio/recompile-on-save.el") (:keywords "convenience" "files" "processes" "tools"))]) (recentf-ext . [(20161210 840) nil "Recentf extensions" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/recentf-ext.el") (:keywords "convenience" "files"))]) (rebox2 . [(20121113 500) nil "Handling of comment boxes in various styles." single ((:commit . "00634eca420cc48657b81e40e599ff8548083985") (:url . "https://github.com/lewang/rebox2"))]) (rebecca-theme . [(20170406 2136) ((emacs (24))) "Rebecca Purple Theme" single ((:commit . "cf8c45993ed4e0a49dcbda71827dbe5835bda077") (:url . "https://github.com/vic/rebecca-theme") (:keywords "theme" "dark"))]) (realgud-rdb2 . [(20160303 43) ((realgud (1 3))) "realgud front-end for interacting with Ruby debugger2" tar ((:commit . "b394bee61e75b7c6a5fa565594aa79b74887f5df") (:url . "http://github.com/rocky/realgud-ruby-debugger2"))]) (realgud-pry . [(20160805 745) ((realgud (1 4 3)) (cl-lib (0 5)) (emacs (24))) "realgud front-end to the Ruby pry debugger" tar ((:commit . "9b3834048fcbc16827c55af38f8cfef0cf6533da") (:url . "http://github.com/rocky/realgud-pry"))]) (realgud-old-debuggers . [(20170316 31) ((realgud (1 4 3)) (cl-lib (0 5)) (emacs (24))) "realgud front-end to older lesser-used debuggers" tar ((:commit . "1e1d573a6ba731afbe68c1309a316457ca3fbb94") (:url . "http://github.com/rocky/realgud-old-debuggers"))]) (realgud-byebug . [(20160805 732) ((realgud (1 4 3)) (cl-lib (0 5)) (emacs (24))) "realgud front-end to the Ruby byebug debugger" tar ((:commit . "cb75d6bd9abbe04afa4c74a7ce9c66852814e0c3") (:url . "http://github.com/rocky/realgud-byebug"))]) (realgud . [(20170630 1507) ((load-relative (1 2)) (loc-changes (1 2)) (test-simple (1 2 0)) (cl-lib (0 5)) (emacs (24))) "A modular front-end for interacting with external debuggers" tar ((:commit . "b3719faa0207688db5db543e5420648c11928d4f") (:url . "http://github.com/realgud/realgud/") (:keywords "gdb" "python" "perl" "go" "bash" "nodejs" "zsh" "bashdb" "zshdb" "remake" "make" "trepan" "perldb"))]) (real-auto-save . [(20150701 815) nil "Automatically save your all your buffers/files at regular intervals." single ((:commit . "81bf61742ea553ccdee0e22d3abb43fcf07f82cf"))]) (readline-complete . [(20150708 737) nil "offers completions in shell mode" single ((:commit . "30c020c37b2741160cc37e656e13c85d826a0ebf"))]) (readability . [(20140715 1727) ((oauth (1 4)) (ov (1 0)) (emacs (24 3))) "Read articles from Readability in Emacs" single ((:commit . "6c220ab8e0ca63946574ed892add5c8fd14002ce") (:url . "https://github.com/ShingoFukuyama/emacs-readability") (:keywords "readability" "oauth"))]) (read-aloud . [(20160922 2200) ((emacs (24 4))) "A simple interface to TTS engines" single ((:commit . "d5f80ab72054a957aed25224639c1779cae5f4d1") (:url . "https://github.com/gromnitsky/read-aloud.el") (:keywords "multimedia"))]) (react-snippets . [(20160712 1521) ((yasnippet (0 7 0))) "Yasnippets for React" tar ((:commit . "3216134ee98b0ac39454d11d19b1508d3e7ca709"))]) (rdp . [(20120928 1854) nil "Recursive Descent Parser library" single ((:commit . "b620192afada04aec33b38cc130fef0765f41ca9") (:url . "https://github.com/skeeto/rdp"))]) (rdf-prefix . [(20170514 859) nil "Prefix lookup for RDF" single ((:commit . "35129521d5b6035e5dd75d5b3481ce4971f46034") (:url . "https://github.com/simenheg/rdf-prefix") (:keywords "convenience" "abbrev"))]) (rcirc-styles . [(20160206 1850) ((cl-lib (0 5))) "support mIRC-style color and attribute codes" single ((:commit . "f313bf6a7470bed314b27c7a40558cb787d7bc67"))]) (rcirc-notify . [(20150219 1404) nil "libnotify popups" single ((:commit . "841a7b5a6cdb0c11a812df924d2c6a7d364fd455") (:keywords "lisp" "rcirc" "irc" "notify" "growl"))]) (rcirc-groups . [(20160115 431) nil "an emacs buffer in rcirc-groups major mode" single ((:commit . "e858084e5956ba32a84046616326c0903de6d59f") (:url . "http://tapoueh.org/emacs/rcirc-groups.html") (:keywords "comm" "convenience"))]) (rcirc-color . [(20151130 758) nil "color nicks" single ((:commit . "a94c7811e6ab578a138eb582f7ce31d3568b5c4d") (:keywords "comm"))]) (rcirc-alertify . [(20140406 1819) ((alert (20140406 1353))) "Cross platform notifications for rcirc" single ((:commit . "ea5cafc55893f375eccbe013d12dbaa94bf6e259") (:keywords "comm" "convenience"))]) (rcirc-alert . [(20141127 247) nil "Configurable alert messages on top of RCIRC" tar ((:commit . "0adf8ff9c47023fec578f678424be62b0f49057f") (:keywords "lisp" "rcirc" "irc" "alert" "awesome"))]) (rc-mode . [(20160913 1218) nil "Major mode for the Plan9 rc shell" single ((:commit . "fe2e0570bf9c19a292e16b18fd4b0a256df5d93f") (:url . "https://github.com/mrhmouse/rc-mode.el") (:keywords "rc" "plan9" "shell"))]) (rbt . [(20170202 1502) ((popup (0 5 3)) (magit (20160128 1201))) "Integrate reviewboard with emacs." single ((:commit . "32bfba9062a014e375451cf4203c29535b5efc1e") (:keywords "reviewboard" "rbt"))]) (rbenv . [(20141119 2349) nil "Emacs integration for rbenv" single ((:commit . "2ea1a5bdc1266caef1dd77700f2c8f42429b03f1") (:url . "https://github.com/senny/rbenv.el") (:keywords "ruby" "rbenv"))]) (rats . [(20170505 245) ((s (1 10 0)) (go-mode (1 3 1)) (cl-lib (0 5))) "Rapid testing suite for Go" single ((:commit . "40aee473d369cd27593cb7709f4792d1006ca8f7") (:keywords "go"))]) (rase . [(20120928 1345) nil "Run At Sun Event daemon" single ((:commit . "59b5f7e8102570b65040e8d55781c7ea28de7338") (:url . "https://github.com/m00natic/rase/") (:keywords "solar" "sunrise" "sunset" "midday" "midnight"))]) (ranger . [(20170522 2331) ((emacs (24 4))) "Make dired more like ranger" single ((:commit . "e371cdc2d6065099fe7c68583597b1d0abea792b") (:url . "https://github.com/ralesi/ranger") (:keywords "files" "convenience" "dired"))]) (random-splash-image . [(20151002 1830) nil "Randomly sets splash image to *GNU Emacs* buffer on startup." single ((:commit . "53a39ebfd8ac6be066a652a508a717870f94218a") (:url . "https://github.com/kakakaya/random-splash-image") (:keywords "games"))]) (rand-theme . [(20151219 1535) ((cl-lib (0 5))) "Random Emacs theme at start-up!" single ((:commit . "65a00e5c5150f857aa96803b68f50bc8da0215b7") (:url . "https://github.com/gopar/rand-theme"))]) (rally-mode . [(20161113 1954) ((popwin (1 0 0))) "a mode to interact with the Rally Software web site." single ((:commit . "0f5e09a6abe2de7613f174b4f54863df93343134") (:url . "https://pragcraft.wordpress.com/") (:keywords "rally" "ca" "agile"))]) (rake . [(20161114 605) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" single ((:commit . "e680f1a8f2591af7c80cad188340601b101b5ddc") (:url . "https://github.com/asok/rake.el") (:keywords "rake" "ruby"))]) (rainbow-identifiers . [(20141102 726) ((emacs (24))) "Highlight identifiers according to their names" single ((:commit . "19fbfded1baa98d12335f26f6d7b20e5ae44ce2e") (:url . "https://github.com/Fanael/rainbow-identifiers"))]) (rainbow-delimiters . [(20160430 2358) nil "Highlight brackets according to their depth" single ((:commit . "93cd2dc873e7fedca7abc599cd97d46db4376ac7") (:url . "https://github.com/Fanael/rainbow-delimiters") (:keywords "faces" "convenience" "lisp" "tools"))]) (rainbow-blocks . [(20140306 1033) nil "Block syntax highlighting for lisp code" single ((:commit . "8335993563aadd4290c5fa09dd7a6a81691b0690") (:url . "https://github.com/istib/rainbow-blocks"))]) (railscasts-theme . [(20150219 725) nil "Railscasts color theme for GNU Emacs." single ((:commit . "1340c3f6c2717761cab95617cf8dcbd962b1095b") (:url . "https://github.com/mikenichols/railscasts-theme") (:keywords "railscasts" "color" "theme"))]) (railscasts-reloaded-theme . [(20170314 146) nil "Railscasts Reloaded color theme" single ((:commit . "bd6e385752c89760fdee7bdf331e24d1d80ee7e9") (:url . "https://github.com/thegeorgeous/railscasts-reloaded-theme"))]) (rails-new . [(20141221 49) nil "Handy emacs command for generating rails application." single ((:commit . "b68055a99cde15f9d02ab36b8ad0ea7ab35b2283") (:url . "https://github.com/cheunghy/rails-new") (:keywords "rails" "ruby"))]) (rails-log-mode . [(20140407 2125) nil "Major mode for viewing Rails log files" single ((:commit . "ff440003ad7d47cb0ac3300f2a632f4cfd36a446") (:keywords "rails" "log"))]) (railgun . [(20121016 2257) nil "No description available." single ((:commit . "66aaa1b091baef53a69d0d7425f48d184b865fb8"))]) (racket-mode . [(20170617 1942) ((emacs (24 3)) (faceup (0 0 2)) (s (1 9 0))) "Major mode for Racket language." tar ((:commit . "9c5bcb7b7db979b34c6e99ade84b443651d62ab7") (:url . "https://github.com/greghendershott/racket-mode"))]) (racer . [(20170218 516) ((emacs (24 3)) (rust-mode (0 2 0)) (dash (2 13 0)) (s (1 10 0)) (f (0 18 2))) "code completion, goto-definition and docs browsing for Rust via racer" single ((:commit . "6e0d1b3ebd54497c0cc995a92f09328ff101cd33") (:url . "https://github.com/racer-rust/emacs-racer") (:keywords "abbrev" "convenience" "matching" "rust" "tools"))]) (r-autoyas . [(20140101 710) ((ess (0)) (yasnippet (0 8 0))) "Provides automatically created yasnippets for R function argument lists." tar ((:commit . "b4020ee7f5f895e0065b8b26da8a49c51432d530") (:url . "https://github.com/mlf176f2/r-autoyas.el") (:keywords "r" "yasnippet"))]) (quiet . [(20160508 556) nil "disconnect from the online world for a while" single ((:commit . "6f20309f99e26fcae2601d1544b342f044e54baf") (:url . "https://github.com/zzkt/quiet") (:keywords "quiet" "distraction" "network" "detachment" "offline"))]) (quickrun . [(20170222 1715) ((emacs (24 3))) "Run commands quickly" single ((:commit . "55bbe5d54b80206ea5a60bf2f58eb6368b2c8201") (:url . "https://github.com/syohex/emacs-quickrun"))]) (quickref . [(20160326 936) ((dash (1 0 3)) (s (1 0 0))) "Display relevant notes-to-self in the echo area" single ((:commit . "9cad569c6eaeacf0b393a2c520ba444f6521ff38") (:url . "https://github.com/pd/quickref.el"))]) (quick-preview . [(20150828 2139) nil "quick preview using GNOME sushi, gloobus or quick look" single ((:commit . "29c884c6ab385ef67d9aa656ebb7c94cabeb5c35") (:url . "https://github.com/myuhe/quick-preview.el") (:keywords "files" "hypermedia"))]) (quick-peek . [(20170327 27) ((emacs (24 3))) "Inline quick-peek windows" single ((:commit . "6a006fbf1a41b04c0e7522d50c942ec89c3637fc") (:keywords "tools" "help" "doc" "convenience"))]) (quick-buffer-switch . [(20151007 1508) nil "Quick switch to file or dir buffers." single ((:commit . "d5fdd67b4c9f04b7a7122da2215e4ae076a03b1b") (:keywords "emacs" "configuration"))]) (quelpa-use-package . [(20161212 1038) ((emacs (24 3)) (quelpa (0)) (use-package (2))) "quelpa handler for use-package" single ((:commit . "f276555d6bead02a0d869149f03a545d4d4265ad") (:url . "https://github.com/quelpa/quelpa-use-package") (:keywords "package" "management" "elpa" "use-package"))]) (quelpa . [(20170620 2318) ((package-build (0)) (emacs (24 3))) "Emacs Lisp packages built directly from source" tar ((:commit . "dbb57da3eba3b5a04ab9b5184634ec139d68ddcd") (:url . "https://github.com/quelpa/quelpa") (:keywords "package" "management" "build" "source" "elpa"))]) (quasi-monochrome-theme . [(20170124 136) nil "Quasi Monochrome theme" tar ((:commit . "7d3afe41c2696ee25e3e4bcce987af1f589208d6") (:keywords "color" "theme" "monochrome"))]) (quack . [(20160410 207) nil "enhanced support for editing and running Scheme code" single ((:commit . "c1c8e448d295cc1b5752104a63a5759a9c5fdf6d"))]) (qt-pro-mode . [(20170604 1141) ((emacs (24))) "Qt Pro/Pri major mode" single ((:commit . "1e0052fcfb89c15cb47714c1546d4e8ec6e01ae6") (:keywords "extensions"))]) (qml-mode . [(20161015 1731) nil "Major mode for editing QT Declarative (QML) code." single ((:commit . "6c5f33ba88ae010bf201a80ee8095e20a724558c") (:url . "https://github.com/coldnew/qml-mode") (:keywords "qml" "qt" "qt declarative"))]) (qiita . [(20140118 44) ((helm (1 5 9)) (markdown-mode (2 0))) "Qiita API Library for emacs" single ((:commit . "93c697b97d540fd1601a13a3d9889fb939b19878") (:url . "https://github.com/gongo/qiita-el") (:keywords "qiita"))]) (pyvenv . [(20170224 538) nil "Python virtual environment interface" single ((:commit . "91c47b8d2608ccbcac2eba91f0e36b422101ce55") (:url . "http://github.com/jorgenschaefer/pyvenv") (:keywords "python" "virtualenv" "tools"))]) (pythonic . [(20160221 1123) ((emacs (24)) (cl-lib (0 5)) (dash (2 11)) (s (1 9)) (f (0 17 2))) "Utility functions for writing pythonic emacs package." single ((:commit . "87475def246b84339f464e80c76c7e7fcc2e780a") (:url . "https://github.com/proofit404/pythonic"))]) (python-x . [(20161029 531) ((python (0 24)) (folding (0)) (cl-lib (0 5))) "python.el extras for interactive evaluation" tar ((:commit . "ef749fe2d3e58d5f6d7f32453d06964786c085d5") (:keywords "python" "eval" "folding") (:url . "https://github.com/wavexx/python-x.el") (:author . "Yuri D'Elia <wavexx@thregr.org>"))]) (python-test . [(20170427 1549) ((emacs (25 1))) "Python testing integration" single ((:commit . "7052b5ff1b599ce04800779b283bf4d293a7f223") (:url . "https://github.com/emacs-pe/python-test.el") (:keywords "convenience" "tools" "processes"))]) (python-switch-quotes . [(20161228 9) ((emacs (24 3))) "cycle between ' and \" quotes in python strings" single ((:commit . "93f1e9b40e061a6cea480139e8b1362b6404abd0") (:url . "https://github.com/werehuman/python-switch-quotes") (:keywords "python" "tools" "convenience"))]) (python-mode . [(20170626 1017) nil "Python major mode" tar ((:commit . "11c6a487b2a3a22d1fbb7ae16bf3b7a5dabdeadb"))]) (python-info . [(20151228 1052) nil "Python info manual for Emacs" tar ((:commit . "306f15441b54b25757cdfd3b327b84024ea21ed7"))]) (python-environment . [(20150310 153) ((deferred (0 3 1))) "virtualenv API for Emacs Lisp" tar ((:commit . "401006584e32864a10c69d29f14414828909362e") (:keywords "applications" "tools"))]) (python-docstring . [(20170508 156) nil "Smart Python docstring formatting" tar ((:commit . "d35d2e0fbe468743c19a870fec7b28a7e725790d"))]) (python-django . [(20150821 2104) nil "A Jazzy package for managing Django projects" single ((:commit . "fc54ad74f0309670359b939f64d0f1fff68aeac4") (:url . "https://github.com/fgallina/python-django.el") (:keywords "languages"))]) (python-cell . [(20131029 1616) nil "Support for MATLAB-like cells in python mode" single ((:commit . "ccacd91a19be784860d687eb1e8ce88fddaacaf6") (:keywords "python" "matlab" "cell"))]) (pytest . [(20170614 745) ((s (1 9 0))) "Easy Python test running in Emacs" single ((:commit . "013fccd684fc8f2092d6e1ec4203ec574e12051d") (:url . "https://github.com/ionrock/pytest-el") (:keywords "pytest" "python" "testing"))]) (pylint . [(20170402 555) nil "minor mode for running `pylint'" single ((:commit . "d4b0bdaec9042333f9d75688b3145658adef9f91") (:keywords "languages" "python"))]) (pyimpsort . [(20160129 2053) ((emacs (24 3))) "Sort python imports." tar ((:commit . "d5c61d70896b642646dfd3c809c06174ae086c1a") (:url . "https://github.com/emacs-pe/pyimpsort.el") (:keywords "convenience"))]) (pyimport . [(20170303 732) ((dash (2 8 0)) (s (1 9 0)) (shut-up (0 3 2))) "Manage Python imports!" single ((:commit . "2482c8efee8edab9f26ea278848d786323fcff9d"))]) (pygen . [(20161120 2106) ((elpy (1 12 0)) (python-mode (6 2 2)) (dash (2 13 0))) "Python code generation using Elpy and Python-mode." single ((:commit . "430e2a059b6e2b0d76700cf79a3de55d9deefd9b") (:url . "https://github.com/JackCrawley/pygen/") (:keywords "python" "code generation"))]) (pyfmt . [(20150521 1356) nil "Emacs interface to pyfmt" single ((:commit . "cb92be2cf0804cc53142dc5edb36f8e0ef5cec32") (:url . "https://github.com/aheaume/pyfmt.el") (:keywords "tools"))]) (pyenv-mode-auto . [(20160122 2341) ((pyenv-mode (0 1 0)) (s (1 11 0)) (f (0 17 0))) "Automatically activates pyenv version if .python-version file exists." single ((:commit . "714e322319ad7a8f5f2a3691aa431537b8a1b26c") (:url . "https://github.com/ssbb/pyenv-mode-auto") (:keywords "python" "pyenv"))]) (pyenv-mode . [(20160221 1123) ((pythonic (0 1 0))) "Integrate pyenv with python-mode" single ((:commit . "560614d47e3b0331f5c0e136763be69ef052048d") (:url . "https://github.com/proofit404/pyenv-mode"))]) (pydoc-info . [(20110301 34) nil "Better Python support for info-lookup-symbol." tar nil]) (pydoc . [(20170429 1158) nil "functional, syntax highlighted pydoc navigation" single ((:commit . "84133eefce0e52a861894815f0c414f1f276f6e1") (:url . "https://github.com/statmobile/pydoc") (:keywords "pydoc" "python"))]) (pycoverage . [(20160324 1812) ((emacs (24 3))) "Support for coverage stats on Python 2.X and 3" tar ((:commit . "dbc152a807efcaac4e50bedb64c026674009a279") (:url . "https://github.com/mattharrison/pycoverage.el") (:keywords "project" "convenience"))]) (pycarddavel . [(20150831 516) ((helm (1 7 0)) (emacs (24 0))) "Integrate pycarddav" single ((:commit . "a6d81ee4eb8309cd82f6082aeca68c5a015702a3") (:keywords "helm" "pyccarddav" "carddav" "message" "mu4e" "contacts"))]) (py-yapf . [(20160925 422) nil "Use yapf to beautify a Python buffer" single ((:commit . "a878304202ad827a1f3de3dce1badd9ca8731146") (:url . "https://github.com/paetzke/py-yapf.el"))]) (py-test . [(20151116 2222) ((dash (2 9 0)) (f (0 17)) (emacs (24 4))) "A test runner for Python code." single ((:commit . "3b2a0bdaacb54df6f2bee8317423e5c0d159d5cf") (:url . "https://github.com/Bogdanp/py-test.el") (:keywords "python" "testing" "py.test"))]) (py-smart-operator . [(20170531 509) ((s (1 9 0))) "smart-operator for python-mode" single ((:commit . "0c8a66faca4b35158d0b5885472cb75286039167") (:keywords "python" "convenience" "smart-operator"))]) (py-isort . [(20160925 318) nil "Use isort to sort the imports in a Python buffer" single ((:commit . "e67306f459c47c53a65604e4eea88a3914596560") (:url . "http://paetzke.me/project/py-isort.el"))]) (py-import-check . [(20130802 411) nil "Finds the unused python imports using importchecker" single ((:commit . "9787f87745a4234cd9bed711860b707902bc8ae4") (:url . "https://github.com/psibi/emacs-py-import-check") (:keywords "python" "import" "check"))]) (py-gnitset . [(20140224 2010) nil "Run your Python tests any way you'd like" single ((:commit . "471eb99b83eb9f6915d8ca241e9770ddd6244a78") (:url . "https://www.github.com/quodlibetor/py-gnitset"))]) (py-autopep8 . [(20160925 352) nil "Use autopep8 to beautify a Python buffer" single ((:commit . "68e12d8788c91c7ec53a68acf1d23adb2ffa4788") (:url . "http://paetzke.me/project/py-autopep8.el"))]) (px . [(20170317 1630) nil "preview inline latex in any mode" single ((:commit . "0c52f7933eab3ca1642ab0df151db9950430c9e2") (:url . "http://github.com/aaptel/preview-latex"))]) (pushover . [(20160718 857) ((cl-lib (0 5))) "Pushover API Access" single ((:commit . "c43f149eaef832f6af399723a5a59424aa093aaa") (:url . "http://github.com/swflint/pushover.el") (:keywords "notifications"))]) (pushbullet . [(20140809 532) ((grapnel (0 5 2)) (json (1 2))) "Emacs client for the PushBullet Android app" single ((:commit . "73c59a0f1dc04875b3e5a2c8afbc26c32128e445") (:url . "http://www.github.com/theanalyst/revolver") (:keywords "convenience"))]) (purty-mode . [(20131004 1559) nil "Safely pretty-print greek letters, mathematical symbols, or anything else." single ((:commit . "8eef77317a3bab07ade212353a50fbd3f20f365a"))]) (purple-haze-theme . [(20141014 1929) ((emacs (24 0))) "an overtly purple color theme for Emacs24." single ((:commit . "3e245cbef7cd09e6b3ee124963e372a04e9a6485") (:url . "https://github.com/jasonm23/emacs-purple-haze-theme"))]) (purescript-mode . [(20161216 133) nil "A PureScript editing mode" tar ((:commit . "c88126070c052d636f4dad5525846a1b200fce43"))]) (puppet-mode . [(20170614 2215) ((emacs (24 1)) (pkg-info (0 4))) "Major mode for Puppet manifests" single ((:commit . "3ffc2de8416b4ea389d5800a4a05d0885d9a8608") (:url . "https://github.com/voxpupuli/puppet-mode") (:keywords "languages"))]) (punpun-theme . [(20161103 147) nil "A bleak theme" tar ((:commit . "cce8b10b2df6f9187a9eaa0c3f21ff0dda175968"))]) (pungi . [(20150222 446) ((jedi (0 2 0 -3 2)) (pyvenv (1 5))) "Integrates jedi with virtualenv and buildout python environments" single ((:commit . "a2d4d439ea371be0b064a12248288903b8a521a0") (:keywords "convenience"))]) (punctuality-logger . [(20141120 1231) nil "Punctuality logger for Emacs" single ((:commit . "e09e5dd37bc92289fa2f7dc44aed51a7b5e04bb0") (:url . "https://gitlab.com/elzair/punctuality-logger") (:keywords "reminder" "calendar"))]) (pug-mode . [(20170127 1949) ((emacs (24 3))) "Major mode for jade/pug template files" single ((:commit . "83599129c0de6f9f5082d019373c3d9347150191") (:url . "https://github.com/hlissner/emacs-pug-mode") (:keywords "markup" "language" "jade" "pug"))]) (pt . [(20161226 1159) nil "A front-end for pt, The Platinum Searcher." single ((:commit . "6d99b2aaded3ece3db19a20f4b8f1d4abe382622") (:url . "https://github.com/bling/pt.el") (:keywords "pt" "ack" "ag" "grep" "search"))]) (psysh . [(20170610 2104) ((emacs (24 3)) (s (1 9 0)) (f (0 17))) "PsySH, PHP interactive shell (REPL)" single ((:commit . "f72d6fe41af2d9566d41b167cda66e97efdf8cfa") (:url . "https://github.com/zonuexe/psysh.el") (:keywords "processes" "php"))]) (psvn . [(20151103 1042) nil "Subversion interface for emacs" single ((:commit . "23048d302858fc3a52c118652bd83491a4956410"))]) (psession . [(20170110 228) ((emacs (24)) (cl-lib (0 5))) "Persistent save of elisp objects." single ((:commit . "3488f7777486aa6c85ebc04d011860163d3cf0fc") (:url . "https://github.com/thierryvolpiatto/psession"))]) (psci . [(20160717 1125) ((purescript-mode (13 10)) (dash (2 9 0)) (s (1 9 0)) (f (0 17 1))) "Major mode for purescript repl psci" tar ((:commit . "d773b407f772e6ab3c40406c22824889e0fd14fe") (:url . "https://github.com/ardumont/emacs-psci") (:keywords "purescript" "psci" "repl" "major" "mode"))]) (psc-ide . [(20170607 1512) ((dash (2 13 0)) (dash-functional (1 2 0)) (company (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (emacs (24 4)) (flycheck (0 24)) (let-alist (1 0 4)) (seq (1 11))) "Minor mode for PureScript's psc-ide tool." tar ((:commit . "04de7bd8a14ea71eaed568127428b8a44f325b24") (:url . "https://github.com/epost/psc-ide-emacs") (:keywords "languages"))]) (protocols . [(20170327 758) ((cl-lib (0 5))) "Protocol database access functions." single ((:commit . "1c93a48d4173635a7b742248797f424e7ce851e3") (:url . "https://github.com/davep/protocols.el") (:keywords "convenience" "net" "protocols"))]) (protobuf-mode . [(20170526 950) nil "major mode for editing protocol buffers." single ((:commit . "4674cc7c073f1b8d5efd2a42ffcf3ca30a907bfe") (:keywords "google" "protobuf" "languages"))]) (prosjekt . [(20151127 616) ((dash (2 8 0))) "a software project tool for emacs" tar ((:commit . "a864a8be5842223043702395f311e3350c28e9db") (:url . "https://github.com/abingham/prosjekt"))]) (propfont-mixed . [(20150113 1411) ((emacs (24)) (cl-lib (0 5))) "Use proportional fonts with space-based indentation." single ((:commit . "0b461ef4754a469610dba71874a34b6da42176bf") (:url . "https://github.com/ikirill/propfont-mixed") (:keywords "faces"))]) (prop-menu . [(20150728 418) ((emacs (24 3)) (cl-lib (0 5))) "Create and display a context menu based on text and overlay properties" single ((:commit . "50b102c1c0935fd3e0c465feed7f27d66b21cdf3") (:url . "https://github.com/david-christiansen/prop-menu-el") (:keywords "convenience"))]) (prompts . [(20160916 341) ((dash (2 13 0))) "utilities for working with text prompts." single ((:commit . "1cd5e732ff2a86b47836eb7252e5b59cd4b6ab26") (:url . "https://github.com/guiltydolphin/prompts.el") (:keywords "input" "minibuffer"))]) (prompt-text . [(20160106 609) nil "Various information in minibuffer prompt" single ((:commit . "bb9265ebfada42d0e3c67c809665e1e5d980691e") (:url . "https://github.com/10sr/prompt-text-el") (:keywords "utility" "minibuffer"))]) (promise . [(20170215 2204) ((emacs (25)) (async (1 9))) "Promises/A+" tar ((:commit . "7adac1f8e87d69b3d328add8db396f73254a4303") (:url . "https://github.com/chuntaro/emacs-promise") (:keywords "async" "promise" "convenience"))]) (projmake-mode . [(20161031 1015) ((dash (20150611 922)) (indicators (20130217 1405))) "Project oriented automatic builder and error highlighter, flymake for projects" tar ((:commit . "a897701f7e8f8cc11459ed44eb0e454db2a460c1"))]) (projekt . [(20150324 148) ((emacs (24))) "some kind of staging for CVS" single ((:commit . "a65e554e5d8b0def08c5d06f3fe34fec40bebd83"))]) (projector . [(20170410 905) ((alert (1 1)) (projectile (0 11 0)) (cl-lib (0 5))) "Lightweight library for managing project-aware shell and command buffers" single ((:commit . "bd9e5b5c4727c0facd9d45a4b6a46ffddaf6a131") (:url . "https://github.com/waymondo/projector"))]) (projectile-variable . [(20170208 918) ((emacs (24)) (cl-lib (0 5))) "Store project local variables." single ((:commit . "8d348ac70bdd6dc320c13a12941b32b38140e264") (:url . "https://github.com/zonuexe/projectile-variable") (:keywords "project" "convenience"))]) (projectile-speedbar . [(20170516 1943) ((projectile (0 11 0)) (sr-speedbar (0))) "projectile integration for speedbar" single ((:commit . "dcab13db72c2084edbebe808e35f1126fe0b3bcd") (:url . "https://github.com/anshulverma/projectile-speedbar") (:keywords "project" "convenience" "speedbar" "projectile"))]) (projectile-sift . [(20160107 215) ((sift (0 2 0)) (projectile (0 13 0))) "Run a sift with Projectile" single ((:commit . "ef509ac4c579340e8d924c26d9e5858a9f4fb9de") (:url . "https://github.com/nlamirault/sift.el") (:keywords "sift" "projectile"))]) (projectile-ripgrep . [(20170211 857) ((ripgrep (0 3 0)) (projectile (0 14 0))) "Run ripgrep with Projectile" single ((:commit . "5af6a0b2ee8a639cf857724ce4328f1f0955c99e") (:url . "https://github.com/nlamirault/ripgrep.el") (:keywords "ripgrep" "projectile"))]) (projectile-rails . [(20170626 653) ((emacs (24 3)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2))) "Minor mode for Rails projects based on projectile-mode" single ((:commit . "28df7d105cbfde2d9fbf322325a15edd85ced77a") (:url . "https://github.com/asok/projectile-rails") (:keywords "rails" "projectile"))]) (projectile-hanami . [(20160505 611) ((emacs (24 3)) (projectile (0 12 0)) (rake (0 3 2)) (inf-ruby (2 2 6))) "Minor mode for Hanami projects based on projectile" single ((:commit . "c4b8e7d4dfec789ef8493a7c5d4ce0cf7937e579") (:url . "https://github.com/avdgaag/projectile-hanami") (:keywords "hanami" "ruby" "projectile"))]) (projectile-git-autofetch . [(20170612 1011) ((projectile (0 14 0)) (alert (1 2))) "automatically fetch git repositories" single ((:commit . "51b40134000a2411c6342e865e63f74c950a9310") (:url . "https://github.com/andrmuel/projectile-git-autofetch") (:keywords "tools" "vc"))]) (projectile-direnv . [(20160305 1738) ((emacs (24)) (s (1 11 0)) (dash (2 12 0)) (projectile (0 13 0))) "Set environment variables from .envrc" single ((:commit . "d5d29e5228f840b7a25358a2fd50353ef2dc9b16") (:url . "https://github.com/christianromney/projectile-direnv") (:keywords "convenience"))]) (projectile-codesearch . [(20151228 20) ((codesearch (20141019 625)) (projectile (20150405 126))) "Integration of codesearch into projectile" single ((:commit . "7013d933cd9d3c04f19a6572176483b48a311807") (:url . "https://github.com/abingham/codesearch.el") (:keywords "tools" "development" "search"))]) (projectile . [(20170416 148) ((emacs (24 1)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single ((:commit . "56e262dd3b5998d0dc6a590d06bc11058839c588") (:url . "https://github.com/bbatsov/projectile") (:keywords "project" "convenience"))]) (project-shells . [(20170312 1912) ((emacs (24 3)) (seq (2 19))) "Manage the shell buffers of each project" single ((:commit . "1baec678ff04c2970591a2cb477c00b0182d6db1") (:url . "https://github.com/hying-caritas/project-shells") (:keywords "processes" "terminals"))]) (project-root . [(20110206 1230) nil "Define a project root and take actions based upon it." single nil]) (project-persist-drawer . [(20151108 422) ((project-persist (0 3))) "Use a project drawer with project-persist." tar ((:commit . "35bbe132a4fab6a0fec15ce6c0fd2fe6a4aa9626"))]) (project-persist . [(20150519 1324) nil "A minor mode to allow loading and saving of project settings." tar ((:commit . "8da45c80b23b1d7499eac11a258fd7382312a304"))]) (project-local-variables . [(20080502 952) nil "Set project-local variables from a file." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ProjectLocalVariables") (:keywords "project" "convenience"))]) (project-explorer . [(20150503 1714) ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) "A project explorer sidebar" single ((:commit . "589a09008706f5f4ef91393dc4306eede0d15ca9") (:url . "https://github.com/sabof/project-explorer"))]) (programmer-dvorak . [(20150426 1837) nil "Input method for Programmer Dvorak." single ((:commit . "3288a8f058eca4cab390a564babbbcb17cfa0350") (:url . "https://github.com/yangchenyun/programmer-dvorak") (:keywords "dvorak" "programmer-dvorak" "input-method"))]) (prognth . [(20130920 1059) nil "Extend prog1 to arbitrary index" single ((:commit . "2f1ca4d34b1fd581163e1df122c85418137e8e62") (:keywords "lisp"))]) (professional-theme . [(20150315 400) nil "Emacs port of Vim's professional theme" single ((:commit . "0927d1474049a193f9f366bde5eb1887b9ba20ed") (:url . "https://github.com/juanjux/emacs-professional-theme") (:keywords "theme" "light" "professional"))]) (prodigy . [(20160929 2302) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single ((:commit . "50a5d4e0c720e73ef0919cf8019a32d934e86616") (:url . "http://github.com/rejeep/prodigy.el"))]) (processing-snippets . [(20140426 728) ((yasnippet (0 8 0))) "Snippets for processing-mode" tar ((:commit . "a57415e523c9c3faeef02fa62a2b749270c4cc33"))]) (processing-mode . [(20150217 432) nil "Major mode for Processing 2.0" single ((:commit . "a57415e523c9c3faeef02fa62a2b749270c4cc33") (:url . "https://github.com/ptrv/processing2-emacs") (:keywords "languages" "snippets"))]) (proc-net . [(20130321 1712) nil "network process tools" single ((:commit . "10861112a1f3994c8e6374d6c5bb5d734cfeaf73") (:url . "http://github.com/nicferrier/emacs-procnet") (:keywords "processes"))]) (private-diary . [(20151216 857) ((emacs (24 0))) "maintain a private diary in Emacs" single ((:commit . "0c86fb6150ad8ed14f94def3504f5a68f4147283") (:url . "https://github.com/cacology/private-diary") (:keywords "diary" "encryption"))]) (private . [(20150121 1757) ((aes (0 6))) "take care of your private configuration files." single ((:commit . "9266d01c095895cc3ee9de95bc20511e88353755") (:url . "https://github.com/cheunghy/private") (:keywords "private" "configuration" "backup" "recover"))]) (pretty-symbols . [(20140814 259) nil "Draw tokens as Unicode glyphs." single ((:commit . "582cbe51ecfe1cc0a5b185bc06113c8a661e3956") (:url . "http://github.com/drothlis/pretty-symbols") (:keywords "faces"))]) (pretty-sha-path . [(20141105 1026) nil "Prettify Guix/Nix store paths" single ((:commit . "a2b43dd9de423a38d67cda2e3bd9412f7d363257") (:url . "https://gitorious.org/alezost-emacs/pretty-sha-path") (:keywords "faces" "convenience"))]) (pretty-mode . [(20160614 1146) nil "Redisplay parts of the buffer as pretty Unicode symbols." single ((:commit . "500085206e25b98d00b9ec996f91c87ba569c4ce") (:url . "https://github.com/akatov/pretty-mode") (:keywords "pretty" "unicode" "symbols"))]) (pretty-lambdada . [(20170307 940) nil "Show the word `lambda' as the Greek letter." single ((:url . "https://www.emacswiki.org/emacs/download/pretty-lambdada.el") (:keywords "convenience" "display"))]) (prettify-greek . [(20160603 208) nil "Greek letters for prettify-symbols" single ((:commit . "698d07a6ffe85f6fb53f3bfec4f49380c25cfd90") (:url . "https://gitlab.com/fommil/emacs-prettify-greek") (:keywords "faces"))]) (prettier-js . [(20170613 2323) nil "Minor mode to format JS code on file save" single ((:commit . "4bfc8b3f8e459235dca24796f18a3587d59f4aef") (:url . "https://github.com/prettier/prettier-emacs") (:keywords "convenience" "wp" "edit" "js"))]) (preseed-generic-mode . [(20150119 1241) nil "Debian preseed file major mode" single ((:commit . "19bce980d41607bef8af4b1901343abfca0f0855") (:url . "https://github.com/suntong001/preseed-generic-mode"))]) (preproc-font-lock . [(20151107 1218) nil "Highlight C-style preprocessor directives." single ((:commit . "565fda9f5fdeb0598986174a07e9fb09f7604397") (:url . "https://github.com/Lindydancer/preproc-font-lock") (:keywords "c" "languages" "faces"))]) (prassee-theme . [(20170406 1953) ((emacs (24))) "A high contrast color theme for Emacs." single ((:commit . "7ce96272a514caa8598aa3c7227ade8a21e20daa") (:url . "https://github.com/prassee/prassee-emacs-theme") (:keywords "faces"))]) (ppd-sr-speedbar . [(20151108 424) ((sr-speedbar (20140914 2339)) (project-persist-drawer (0 0 4))) "Sr Speedbar adaptor for project-persist-drawer." tar ((:commit . "19d3e924407f40a6bb38c8fe427a159af755adce"))]) (pp-c-l . [(20170307 939) nil "Display Control-l characters in a pretty way" single ((:url . "https://www.emacswiki.org/emacs/download/pp-c-l.el") (:keywords "display" "convenience" "faces"))]) (pp+ . [(20170307 938) nil "Extensions to `pp.el'." single ((:url . "https://www.emacswiki.org/emacs/download/pp%2b.el") (:keywords "lisp"))]) (powershell . [(20161103 2354) ((emacs (24))) "Mode for editing Powershell scripts" single ((:commit . "3c09e1b87064bedc065e45346fd4c3e051eeb0f0") (:url . "http://github.com/jschaf/powershell.el") (:keywords "powershell" "languages"))]) (powerline-evil . [(20151112 710) ((evil (1 0 8)) (powerline (2 3))) "Utilities for better Evil support for Powerline" tar ((:commit . "98b3a102b6dba6632aa0755a7257300c9b164309") (:url . "http://github.com/raugturi/powerline-evil/") (:keywords "evil" "mode-line" "powerline"))]) (powerline . [(20161121 2320) ((cl-lib (0 2))) "Rewrite of Powerline" tar ((:commit . "67538e4dbc2f1d2f270142481eb0b0d24e8cde36") (:url . "http://github.com/milkypostman/powerline/") (:keywords "mode-line"))]) (pow . [(20140420 106) ((emacs (24)) (cl-lib (0 5))) "pow (http://pow.cx/) manager for emacs" tar ((:commit . "ea83986b8ca8e27cb996290d6463b111ec0966ce") (:url . "http://github.com/yukihr/emacs-pow") (:keywords "develop" "web" "pow"))]) (pov-mode . [(20161114 2343) nil "Major mode for editing POV-Ray scene files." tar ((:commit . "9fc1db3aab7c27155674dd1a87ec62606035d074"))]) (postcss-sorting . [(20170531 1858) ((emacs (24))) "postcss-sorting interface" single ((:commit . "1320d74abd8ee7f0a09b5f7920d554650a7047a6") (:url . "https://github.com/P233/postcss-sorting.el"))]) (pos-tip . [(20150318 813) nil "Show tooltip at point" single ((:commit . "051e08fec5cf30b7574bdf439f79fef7d42d689d") (:keywords "tooltip"))]) (portage-navi . [(20141208 555) ((concurrent (0 3 1)) (ctable (0 1 2))) "portage viewer" single ((:commit . "8016c3e99fe6cef101d479a3d69185796b22ca2f") (:url . "https://github.com/kiwanami/emacs-portage-navi") (:keywords "tools" "gentoo"))]) (popwin . [(20150315 600) nil "Popup Window Manager." single ((:commit . "95dea14c60019d6cccf9a3b33e0dec4e1f22c304") (:keywords "convenience"))]) (popup-switcher . [(20161130 656) ((cl-lib (0 3)) (popup (0 5 3))) "switch to other buffers and files via popup." single ((:commit . "86809fbd3c3c3d566043043b6577ccf8133ac855") (:url . "https://github.com/kostafey/popup-switcher") (:keywords "popup" "switch" "buffers" "functions"))]) (popup-kill-ring . [(20131020 1154) ((popup (0 4)) (pos-tip (0 4))) "interactively insert item from kill-ring" single ((:commit . "5773dfadc104a906c088a3ec62e8cdd3e01e57fa") (:url . "https://github.com/waymondo/popup-kill-ring") (:keywords "popup" "kill-ring" "pos-tip"))]) (popup-imenu . [(20170326 340) ((dash (2 12 1)) (popup (0 5 3)) (flx-ido (0 6 1))) "imenu index popup" single ((:commit . "c5e2e69adbd3a630e4cb750965a1aee8c10c1f09") (:url . "https://github.com/ancane/popup-imenu") (:keywords "popup" "imenu"))]) (popup-edit-menu . [(20170404 725) ((emacs (24))) "a popup context edit menu package" single ((:commit . "925600a6e29183841199e866cf55e566a6a1b002") (:keywords "lisp" "pop-up" "context" "edit" "menu"))]) (popup-complete . [(20141108 1908) ((popup (0 5 0))) "completion with popup" single ((:commit . "caa655a6d8472e9a4bfa1311126d90d7d1b07fca") (:url . "https://github.com/syohex/emacs-popup-complete"))]) (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single ((:commit . "80829dd46381754639fb764da11c67235fe63282") (:keywords "lisp"))]) (poporg . [(20170403 51) nil "Pop a comment or string to an empty buffer for text editing" single ((:commit . "2c58d68c81ecca4140bf179f19ed153ec804b65a") (:url . "https://github.com/QBobWatson/poporg") (:keywords "outlines" "tools"))]) (pophint . [(20170403 701) ((log4e (0 2 0)) (yaxception (0 3))) "Provide navigation using pop-up tips, like Firefox's Vimperator Hint Mode" tar ((:commit . "5d1db7c0b92862ba2cc5f3566b25840b8ce3ba59") (:url . "https://github.com/aki2o/emacs-pophint") (:keywords "popup"))]) (ponylang-mode . [(20170514 1419) ((dash (2 10 0))) "Major mode for Pony code" single ((:commit . "88833317195f5ee2880e33a907861c6c2d3851da") (:url . "https://github.com/seantallen/ponylang-mode") (:keywords "languages" "programming"))]) (pony-snippets . [(20160204 2011) ((yasnippet (0 8 0))) "Yasnippets for Pony" tar ((:commit . "a6615ab0693f17fc47ec45753202010238157810") (:url . "https://github.com/seantallen/pony-snippets") (:keywords "snippets" "pony"))]) (pony-mode . [(20151028 302) nil "Minor mode for working with Django Projects" tar ((:commit . "d319b0317bfbdac12d28cfd83abe31cc35f3cdd7"))]) (pomodoro . [(20150716 1046) nil "A timer for the Pomodoro Technique" single ((:commit . "4a299b8f5e6623010224dcb3e524ff288c6a082c"))]) (pomidor . [(20170310 634) ((emacs (24 3)) (alert (1 2))) "Simple and cool pomodoro timer" tar ((:commit . "bac68f7a1c72da3db6020d3bda45e38576c9c488") (:url . "https://github.com/TatriX/pomidor") (:keywords "tools" "time" "applications" "pomodoro technique"))]) (polymode . [(20170307 322) ((emacs (24))) "Versatile multiple modes with extensive literate programming support" tar ((:commit . "0340f5e7e55235832e59673f027cc79a23cbdcd6") (:url . "https://github.com/vitoshka/polymode"))]) (pollen-mode . [(20160808 2000) ((emacs (24 3)) (cl-lib (0 5))) "major mode for editing pollen files" single ((:commit . "de762bd7f9760185dae8ef025ca9a9126ae78de0") (:url . "https://github.com/lijunsong/pollen-mode") (:keywords "languages" "pollen" "pollenpub"))]) (pointback . [(20100210 752) nil "Restore window points when returning to buffers" single ((:commit . "e3a02c1784d81b5a1d2477338d049af581ed19f8") (:keywords "convenience"))]) (point-undo . [(20100504 129) nil "undo/redo position" single nil]) (point-stack . [(20141225 2110) nil "Back and forward navigation through buffer locations" single ((:commit . "86b37666882398f4db93f3aba0ebb7b7965032cd"))]) (point-pos . [(20170421 932) nil "Save and restore point positions" single ((:commit . "442bccb40791832cbc2d6f5c8f53be745aea2b73") (:url . "https://github.com/alezost/point-pos.el") (:keywords "tools" "convenience"))]) (podcaster . [(20161020 835) ((cl-lib (0 5))) "Podcast client" single ((:commit . "9854517025deb5d556168a68955fb7b662239f5c") (:url . "https://github.com/lujun9972/podcaster"))]) (pocket-mode . [(20170327 438) ((emacs (24 4)) (pocket-api (0 1))) "Manage your pocket" single ((:commit . "4338e869862a057e7ad1e53953e8c4a2c0f12a46") (:keywords "convenience" "pocket"))]) (pocket-api . [(20170315 1934) ((emacs (24 4)) (request (0 2))) "another pocket api" single ((:commit . "de4c14122ffe6a04c93590da0ad4b8411801c6f5") (:url . "https://github.com/lujun9972/pocket-api.el") (:keywords "convenience" "pocket"))]) (po-mode . [(20170419 303) nil "major mode for GNU gettext PO files" single ((:commit . "0df827ef0bd0b0f858cc6dfd6ea83a4502e5f13b") (:keywords "i18n" "gettext"))]) (pmdm . [(20151109 1036) nil "poor man's desktop-mode alternative." single ((:url . "https://bitbucket.com/inigoserna/pmdm.el"))]) (plur . [(20160504 224) ((emacs (24 4))) "Easily search and replace multiple variants of a word" single ((:commit . "5bdd3b9a2f0624414bd596e798644713cd1545f0") (:url . "https://github.com/xuchunyang/plur"))]) (plsql . [(20121115 243) nil "Programming support for PL/SQL code" single ((:url . "http://www.emacswiki.org/elisp/plsql.el") (:keywords "languages"))]) (plsense-direx . [(20140520 1308) ((direx (0 1 -3)) (plsense (0 3 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perl Package Explorer" single ((:commit . "8a2f465264c74e04524cc789cdad0190ace43f6c") (:url . "https://github.com/aki2o/plsense-direx") (:keywords "perl" "convenience"))]) (plsense . [(20151104 645) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 2 0))) "provide interface for PlSense that is a development tool for Perl." single ((:commit . "d50f9dccc98f42bdb42f1d1c8142246e03879218") (:url . "https://github.com/aki2o/emacs-plsense") (:keywords "perl" "completion"))]) (plim-mode . [(20140812 1713) nil "Major mode for editing Plim files" single ((:commit . "92e39190286f172567ceb02c80e1df3b81abfa2d") (:url . "http://github.com/dongweiming/plim-mode") (:keywords "markup" "language"))]) (plenv . [(20130706 2316) nil "A plenv wrapper for Emacs" single ((:commit . "ee937d0f3a1a7ba2d035f45be896d3ed8fefaee2") (:keywords "emacs" "perl"))]) (playerctl . [(20170414 156) nil "Control your music player (e.g. Spotify) with playerctl" single ((:commit . "8354352813cd206efb60002f2af4427957bf8894") (:url . "https://github.com/thomasluquet/playerctl.el") (:keywords "multimedia" "playerctl" "music"))]) (play-routes-mode . [(20170426 33) nil "Play Framework Routes File Support" single ((:commit . "22d7b87e0eaf0330f2b2283872f8dc08a3258771") (:url . "https://github.com/brocode/play-routes-mode/") (:keywords "play" "scala"))]) (platformio-mode . [(20161210 539) ((projectile (0 13 0))) "PlatformIO integration" single ((:commit . "1466aed132a77f48fcb31938d64abb1a1e58ec42") (:url . "https://github.com/zachmassia/platformio-mode"))]) (plantuml-mode . [(20161225 1142) ((emacs (24))) "Major mode for PlantUML" single ((:commit . "c7e83c260778467be5f82500a5541ce76da662ac") (:keywords "uml" "plantuml" "ascii"))]) (planet-theme . [(20161030 1917) ((emacs (24))) "A dark theme inspired by Gmail's 'Planets' theme of yore" single ((:commit . "b0a310ff36565fe22224c407cf59569986698a32") (:url . "https://github.com/cmack/emacs-planet-theme") (:keywords "themes"))]) (plan9-theme . [(20170529 2212) nil "A color theme for Emacs based on Plan9" single ((:commit . "cdc50195f6579e6c3e6e8060142ce25b609f7949") (:url . "https://github.com/john2x/plan9-theme.el"))]) (plain-theme . [(20170625 1100) nil "Plain theme without syntax highlighting" single ((:commit . "7c376f5bf9d653bf12e414176284736cbdd19108") (:url . "https://github.com/yegortimoshenko/plain-theme"))]) (pkgbuild-mode . [(20151010 736) nil "Interface to the ArchLinux package manager" single ((:commit . "7369ab3c6b59cfdf2ecd2b32ad96ce006e766fa0"))]) (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" single ((:commit . "76ba7415480687d05a4353b27fea2ae02b8d9d61") (:url . "https://github.com/lunaryorn/pkg-info.el") (:keywords "convenience"))]) (pixiv-novel-mode . [(20160220 621) nil "Major mode for pixiv novel" single ((:commit . "0d1ca524d92b91f20a7105402a773bc21779b434") (:keywords "novel" "pixiv"))]) (pixie-mode . [(20150121 2124) ((clojure-mode (3 0 1)) (inf-clojure (1 0 0))) "Major mode for Pixie-lang" single ((:commit . "f32d5d812c7b5b72d7ff7bad52b41035f9ef6e96") (:url . "https://github.com/johnwalker/pixie-mode"))]) (pivotal-tracker . [(20161028 618) nil "Interact with Pivotal Tracker through its API" single ((:commit . "87b4e3cce343519b54a8ff4fef5d7b7745e27c3c") (:url . "http://github.com/jxa/pivotal-tracker"))]) (pippel . [(20170325 649) ((emacs (25 1)) (s (1 11 0))) "Frontend to python package manager pip" tar ((:commit . "764c8ec30ad14288accd05c7f8a1c9425d6aab7f") (:url . "https://github.com/brotzeitmacher/pippel"))]) (pip-requirements . [(20160930 2032) ((dash (2 8 0))) "A major mode for editing pip requirements files." single ((:commit . "babe44af1132fb05748c7ee098a4226b9e31eb76"))]) (pinyinlib . [(20170424 1352) nil "Convert first letter of Pinyin to Simplified/Traditional Chinese characters" single ((:commit . "39943d226c2a42a9013421a0b4b6d5d3696bf234") (:keywords "extensions"))]) (pinyin-search . [(20160514 2058) ((pinyinlib (0 1 0))) "Search Chinese by Pinyin" single ((:commit . "2e877a76851009d41bde66eb33182a03a7f04262") (:url . "https://github.com/xuchunyang/pinyin-search.el") (:keywords "chinese" "search"))]) (pinot . [(20140211 1226) nil "Emacs interface to pinot-search" tar ((:commit . "67fda555a155b22bb2ce44ba618b4bd6fc5f144a"))]) (pinboard-api . [(20140324 448) nil "Rudimentary http://pinboard.in integration" single ((:commit . "b7b5214d0c35178f8dca08cf22d6ef3c21f0fce4") (:url . "https://github.com/danieroux/pinboard-api-el") (:keywords "pinboard" "www"))]) (pillar . [(20141112 1011) ((makey (0 3))) "Major mode for editing Pillar files" tar ((:commit . "13a7f676544cc66005ccd8e6fc1c25e4ccd6f909") (:url . "http://github.com/DamienCassou/pillar-mode") (:keywords "markup" "major-mode"))]) (pig-snippets . [(20130912 2324) ((yasnippet (0 8 0))) "Snippets for pig-mode" tar ((:commit . "af4200c88a50264b63fa162a02860f3f54c8755b"))]) (pig-mode . [(20140617 1058) nil "Major mode for Pig files" single ((:commit . "af4200c88a50264b63fa162a02860f3f54c8755b"))]) (picpocket . [(20170305 259) ((emacs (24 4))) "Image viewer" single ((:commit . "3404de0e6ed1b46f3b873472e34ea9342445f43e") (:keywords "multimedia"))]) (picolisp-mode . [(20150516 155) nil "Major mode for PicoLisp programming." single ((:commit . "1a537b14090813f46cbba54636d40365e1a8067e") (:url . "https://github.com/flexibeast/picolisp-mode") (:keywords "picolisp" "lisp" "programming"))]) (pianobar . [(20120128 1301) nil "thin wrapper for Pianobar, a Pandora Radio client" single ((:commit . "9193e3888a8097dbe7ee58e4658cc6ec2a76b160") (:url . "http://github.com/agrif/pianobar.el"))]) (phpunit . [(20161219 320) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5)) (cl-lib (0 5)) (emacs (24 3))) "Launch PHP unit tests using phpunit" tar ((:commit . "5ca5ee53e16b2cf0939dbeacbf1dffa13b41b48f") (:url . "https://github.com/nlamirault/phpunit.el") (:keywords "php" "tests" "phpunit"))]) (phpcbf . [(20150302 528) ((s (1 9 0))) "Format PHP code in Emacs using PHP_CodeSniffer's phpcbf" single ((:commit . "b556b548ceb061b002389d6165d2cc63d8bddb5d") (:url . "https://github.com/nishimaki10/emacs-phpcbf") (:keywords "tools" "php"))]) (php-scratch . [(20161103 1517) ((emacs (24 3)) (s (1 11 0)) (php-mode (1 17 0))) "A scratch buffer to interactively evaluate php code" single ((:commit . "3aa66d1d53b84b779374edff7a7e6b5f2cd7575d"))]) (php-refactor-mode . [(20160417 1446) nil "Minor mode to quickly and safely perform common refactorings" single ((:commit . "de47bb705c58e7ac06bdb1b403697013c77306ae") (:url . "https://github.com/keelerm84/php-refactor-mode.el") (:keywords "php" "refactor"))]) (php-mode . [(20170621 2242) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing PHP code" tar ((:commit . "a40c5e51077e1d40f7b8773235c18682ef7861ca") (:url . "https://github.com/ejmr/php-mode"))]) (php-eldoc . [(20140202 1141) nil "eldoc backend for php" tar ((:commit . "df05064146b884d9081e10657e32dc480f070cfe") (:url . "https://github.com/sabof/php-eldoc"))]) (php-cs-fixer . [(20170506 1133) ((cl-lib (0 5))) "php-cs-fixer wrapper." single ((:commit . "ca2c075a22ad156c336d2aa093fb6394c9f6c112") (:url . "https://github.com/OVYA/php-cs-fixer") (:keywords "languages" "php"))]) (php-boris-minor-mode . [(20140209 1035) ((php-boris (0 0 1)) (highlight (0))) "a minor mode to evaluate PHP code in the Boris repl" single ((:commit . "c70e176dd6545f2d42ca3427e87b469635616d8a") (:url . "https://github.com/steckerhalter/php-boris-minor-mode") (:keywords "php" "repl" "eval"))]) (php-boris . [(20130527 121) nil "Run boris php REPL" single ((:commit . "f2faebf610c917f7091f7ec0cd97645629c4f819") (:keywords "php" "commint" "repl" "boris"))]) (php-auto-yasnippets . [(20170330 1814) ((php-mode (1 11)) (yasnippet (0 8 0))) "Creates snippets for PHP functions" tar ((:commit . "03e1f0899c081813901ac15c2f7a675a37cca9f5") (:url . "https://github.com/ejmr/php-auto-yasnippets"))]) (php+-mode . [(20170215 657) nil "A better PHP mode with Zend Framework 1 support." tar ((:commit . "963eb19c06a7237879ae7b7a111c83abcfe9ca36"))]) (phoenix-dark-pink-theme . [(20170324 1144) nil "Originally a port of the Sublime Text 2 theme" single ((:commit . "219edf69adb7e911394c5849c310ca0f4201a917") (:url . "http://github.com/j0ni/phoenix-dark-pink"))]) (phoenix-dark-mono-theme . [(20130306 1215) nil "Monochromatic version of the Phoenix theme" single ((:commit . "dafb65c542605145d6b1702aae5b195b70f98285") (:url . "http://github.com/j0ni/phoenix-dark-mono"))]) (phi-search-migemo . [(20170618 221) ((phi-search (2 2 0)) (migemo (1 9 1))) "migemo extension for phi-search" single ((:commit . "308909ebfc8003d16673f97ca9eb26a667b72969") (:url . "http://hins11.yu-yake.com/"))]) (phi-search-mc . [(20160324 803) ((phi-search (2 0 0)) (multiple-cursors (1 2 1))) "multiple-cursors extension for phi-search" single ((:commit . "7aa671910f766437089aec26c3aa7814222d1356") (:url . "https://github.com/knu/phi-search-mc.el") (:keywords "search" "cursors"))]) (phi-search-dired . [(20150405 14) ((phi-search (2 2 0))) "interactive filtering for dired powered by phi-search" single ((:commit . "162a5e4507c72512affae22744bb606a906d4193") (:url . "http://hins11.yu-yake.com/"))]) (phi-search . [(20170310 237) nil "another incremental search & replace, compatible with \"multiple-cursors\"" tar ((:commit . "a81c4ea203fcb572f6cc37cc658d6b01453bef9d") (:url . "http://hins11.yu-yake.com/"))]) (phi-rectangle . [(20151207 2254) nil "another rectangle-mark command (rewrite of rect-mark)" single ((:commit . "0c12716afc71d803d1f39417469521dc465762d9") (:url . "http://hins11.yu-yake.com/"))]) (phi-grep . [(20170606 107) ((cl-lib (0 1))) "Interactively-editable recursive grep implementation in elisp" single ((:commit . "ab9bd8d25e751a9cbfa108b49839293230b6e8b5") (:url . "http://github.com/zk-phi/phi-grep"))]) (phi-autopair . [(20170216 1953) ((paredit (20))) "another simple-minded autopair implementation" single ((:commit . "3c7556779c3a53b045f5df33ae2a0c67469cbf60") (:url . "http://hins11.yu-yake.com/"))]) (phan . [(20170205 604) ((emacs (24)) (composer (0 0 8)) (f (0 17))) "Utility functions for Phan (PHP static analizer)" single ((:commit . "6442663bf7618bc614b6c47b0ad7bc591c68f947") (:keywords "tools" "php"))]) (phabricator . [(20160510 725) ((emacs (24 4)) (dash (1 0)) (projectile (0 13 0)) (s (1 10 0)) (f (0 17 2))) "Phabricator/Arcanist helpers for Emacs." single ((:commit . "d09d6f059aea92d3b11c68664a5e80c901182ab8") (:url . "https://github.com/ajtulloch/phabricator.el") (:keywords "phabricator" "arcanist" "diffusion"))]) (ph . [(20161029 822) ((emacs (24 3))) "A global minor mode for managing multiple projects." tar ((:commit . "ed80dad9211583ed0db633448b3624c99b7fac23"))]) (pgdevenv . [(20150105 1436) nil "Manage your PostgreSQL development envs" tar ((:commit . "7f1d5bc734750aca98cf67a9491cdbd5615fd132") (:keywords "emacs" "postgresql" "development" "environment" "shell" "debug" "gdb"))]) (pg . [(20130731 1442) nil "Emacs Lisp interface to the PostgreSQL RDBMS" single ((:commit . "4f6516ec3946d95dcef49abb6703cc89ecb5183d") (:keywords "data" "comm" "database" "postgresql"))]) (pfuture . [(20170531 805) ((emacs (25))) "a simple wrapper around asynchronous processes" single ((:commit . "a6c32c69abdb9b91baf8036b88cc4f477f611bd5") (:url . "https://github.com/Alexander-Miller/pfuture"))]) (perspeen . [(20170312 19) ((emacs (25 0)) (powerline (2 4))) "An package for multi-workspace" tar ((:commit . "f093cfecde0e8ce0d5e390784c228831536aef72") (:url . "https://github.com/seudut/perspeen") (:keywords "lisp"))]) (perspective . [(20160609 1444) ((cl-lib (0 5))) "switch between named \"perspectives\" of the editor" single ((:commit . "89a8ef5e8297b113e4f732bb94336608b76e13fd") (:url . "http://github.com/nex3/perspective-el") (:keywords "workspace" "convenience" "frames"))]) (persp-projectile . [(20160709 2317) ((perspective (1 9)) (projectile (0 11 0)) (cl-lib (0 3))) "Perspective integration with Projectile" single ((:commit . "7686633acf44402fa90429759cca6a155e4df2b9") (:keywords "project" "convenience"))]) (persp-mode-projectile-bridge . [(20170315 420) ((persp-mode (2 9)) (projectile (0 13 0)) (cl-lib (0 5))) "persp-mode + projectile integration." single ((:commit . "f6453cd7b8b4352c06e771706f2c5b7e2cdff1ce") (:url . "https://github.com/Bad-ptr/persp-mode-projectile-bridge.el") (:keywords "persp-mode" "projectile"))]) (persp-mode . [(20170509 829) nil "windows/buffers sets shared among frames + save/load." single ((:commit . "a33c91e3738996c058841ed1985c67bedd4875e1") (:url . "https://github.com/Bad-ptr/persp-mode.el") (:keywords "perspectives" "session" "workspace" "persistence" "windows" "buffers" "convenience"))]) (persp-fr . [(20161226 1241) ((emacs (25 0)) (persp-mode (2 9 1))) "In persp-mode, show perspective list in the GUI window title" single ((:commit . "ba989ad309c2023d1826e79446908bd1b881a56a") (:url . "http://github.com/rocher/persp-fr") (:keywords "perspectives" "workspace" "windows" "convenience"))]) (persistent-soft . [(20150223 1053) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" single ((:commit . "a1e0ddf2a12a6f18cab565dee250f070384cbe02") (:url . "http://github.com/rolandwalker/persistent-soft") (:keywords "data" "extensions"))]) (persistent-scratch . [(20170110 546) ((emacs (24))) "Preserve the scratch buffer across Emacs sessions" single ((:commit . "551c655fa349e6f48e4e29f427fff7594f76ac1d") (:url . "https://github.com/Fanael/persistent-scratch"))]) (persistent-overlays . [(20161127 2300) nil "Minor mode to store selected overlays to be loaded later" tar ((:commit . "f563c8b966edc78c9d806661c4eb80e4781c4eab") (:url . "https://github.com/mneilly/Emacs-Persistent-Overlays") (:keywords "overlays" "persistent"))]) (perlbrew . [(20161108 2309) nil "A perlbrew wrapper for Emacs" single ((:commit . "3a3406c3307c92aa30f9400d430925c434a3b6f0") (:keywords "emacs" "perl"))]) (perl6-mode . [(20160730 1455) ((emacs (24 4)) (pkg-info (0 1))) "Major mode for editing Perl 6 code" tar ((:commit . "14073feeb0f8ad2225616d550133f8f473a51b33") (:url . "https://github.com/hinrik/perl6-mode") (:keywords "languages"))]) (perl-completion . [(20090527 2336) nil "No description available." single ((:commit . "f2ec91b88a8b7d97d40d6c90a89eaf8e595c2b89"))]) (per-buffer-theme . [(20160318 1501) ((cl-lib (0 5))) "Change theme according to buffer name or major mode." single ((:url . "https://bitbucket.com/inigoserna/per-buffer-theme.el") (:keywords "themes"))]) (peg . [(20150707 2341) nil "Parsing Expression Grammars in Emacs Lisp" single ((:commit . "081efeca91d790c7fbc90871ac22c40935f4833b"))]) (peep-dired . [(20160321 1537) nil "Peep at files in another window from dired buffers" single ((:commit . "c88a9a3050197840edfe145f11e0bb9488de32f4") (:keywords "files" "convenience"))]) (peek-mode . [(20130620 1246) ((elnode (0 9 8 1))) "Serve buffers live over HTTP with elnode backend" tar ((:commit . "55a7dd011375330c7d57322257a5167516702c71") (:url . "https://github.com/erikriverson/peek-mode"))]) (peacock-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Peacock (tmTheme)" single ((:commit . "268a2a7eb48ac750fc939657169ec65f2ac0f4f7") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (pdf-tools . [(20170417 150) ((emacs (24 3)) (tablist (0 70)) (let-alist (1 0 4))) "Support library for PDF documents." tar ((:commit . "f314597b2e391f6564e4f9e5cc3af0b4b53f19e9") (:keywords "files" "multimedia"))]) (pdb-mode . [(20150128 951) nil "Major mode for editing Protein Data Bank files" single ((:commit . "855fb18ebb73b5df30c8d7677c2bcd0f361b138a") (:url . "http://bondxray.org/software/pdb-mode/") (:keywords "data" "pdb"))]) (pcsv . [(20150220 331) nil "Parser of csv" single ((:commit . "798e0933f8d0818beb17aebf3b1056bbf74e03d0") (:url . "https://github.com/mhayashi1120/Emacs-pcsv/raw/master/pcsv.el") (:keywords "data"))]) (pcre2el . [(20161120 1303) ((emacs (24)) (cl-lib (0 3))) "regexp syntax converter" single ((:commit . "0b5b2a2c173aab3fd14aac6cf5e90ad3bf58fa7d") (:url . "https://github.com/joddie/pcre2el"))]) (pcomplete-extension . [(20140604 947) ((emacs (24)) (cl-lib (0 5))) "additional completion for pcomplete" single ((:commit . "839740c90de857e18db2f578d6660951522faab5") (:url . "https://github.com/thierryvolpiatto/pcomplete-extension"))]) (pcmpl-pip . [(20141024 148) nil "pcomplete for pip" single ((:commit . "b775bef9fa3ae9fb8015409554ecdd165c4bc325") (:keywords "pcomplete" "pip" "python" "tools"))]) (pcmpl-homebrew . [(20170110 1609) nil "pcomplete for homebrew" single ((:commit . "d001520fec4715c9a4c73f02fd948bac371cc50a") (:keywords "pcomplete" "homebrew" "tools" "cask" "services"))]) (pcmpl-git . [(20170120 1659) nil "pcomplete for git" tar ((:commit . "9472ac70baeda025ef7becd1cf141d72aec93f32") (:keywords "tools"))]) (pcmpl-args . [(20120911 2224) nil "Enhanced shell command completion" single ((:commit . "2ba03b3125ada8037585e545b88bd85b79da5c37") (:url . "https://github.com/JonWaltman/pcmpl-args.el") (:keywords "abbrev" "completion" "convenience" "processes" "terminals" "unix"))]) (pcap-mode . [(20161025 748) ((emacs (24 3))) "Major mode for working with PCAP files" single ((:commit . "52780669af0ade136f84d73f21b4dbb7ab655416") (:keywords "pcap" "packets" "tcpdump" "wireshark" "tshark"))]) (pcache . [(20170105 1414) ((eieio (1 3))) "persistent caching for Emacs." single ((:commit . "025ef2411fa1bf82a9ac61dfdb7bd4cedaf2d740"))]) (pc-bufsw . [(20150923 13) nil "PC style quick buffer switcher" single ((:commit . "a76120bca9821c355069f135b4e6978351b66bc2") (:url . "https://github.com/ibukanov/pc-bufsw") (:keywords "buffer"))]) (pbcopy . [(20150224 2059) nil "Emacs Interface to pbcopy" single ((:commit . "338f7245746b5de1bb96c5cc2b32bfd9b5d83272") (:url . "https://github.com/jkp/pbcopy.el") (:keywords "mac" "osx" "pbcopy"))]) (paxedit . [(20160730 1027) ((cl-lib (0 5)) (paredit (23))) "Structured, Context Driven LISP Editing and Refactoring" single ((:commit . "09f3d5aeb108937a801e77ef413e29eaa4ecc4be") (:url . "https://github.com/promethial/paxedit") (:keywords "lisp" "refactoring" "context"))]) (pathify . [(20160423 146) nil "Symlink your scripts into a PATH directory" single ((:commit . "401b184c743694a60b3bc4273fc43de05cd5ac4b") (:url . "https://gitlab.com/alezost-emacs/pathify") (:keywords "convenience"))]) (path-headerline-mode . [(20140423 632) nil "Displaying file path on headerline." single ((:commit . "b5b2725c6a8b1cb592fc242b7dbbd54b4dff2e69") (:url . "https://github.com/7696122/path-headerline-mode") (:keywords "headerline"))]) (pastery . [(20170206 1934) ((emacs (24 4)) (request (0 2 0))) "paste snippets to pastery.net." single ((:commit . "3f60a2660613c09be5a0b6e299828b44ee3c8732") (:url . "https://github.com/diasbruno/pastery.el") (:keywords "tools"))]) (pastels-on-dark-theme . [(20120304 1022) nil "Pastels on Dark theme for Emacs 24" single ((:commit . "854839a0b4bf8c3f6a7d947926bf41d690547002") (:url . "http://gist.github.com/1906662") (:keywords "theme" "color"))]) (pastelmac-theme . [(20151030 1936) ((emacs (24 1))) "a soothing theme with a pastel color palette" single ((:commit . "bead21741e3f46f6506e8aef4469d4240a819389") (:url . "https://github.com/bmastenbrook/pastelmac-theme-el") (:keywords "themes"))]) (pastehub . [(20140614 2320) nil "A client for the PasteHub cloud service" single ((:commit . "37b045c67659c078f1517d0fbd5282dab58dca23") (:url . "https://github.com/kiyoka/pastehub"))]) (pastebin . [(20101125 1202) nil "A simple interface to the www.pastebin.com webservice" single ((:commit . "8e9a829298ce0f747ab80758aa26caeb2af6cb30"))]) (password-vault . [(20160126 1020) ((cl-lib (0 2)) (emacs (24))) "A Password manager for Emacs." single ((:commit . "dc56e6c2f5da66f1ab63736cecf08fb2c6c2b30f") (:url . "http://github.com/PuercoPop/password-vault") (:keywords "password" "productivity"))]) (password-store . [(20151027 1449) ((f (0 11 0)) (s (1 9 0))) "Password store (pass) support" single ((:keywords "pass"))]) (password-mode . [(20170411 2329) nil "Hide password text using overlays" single ((:commit . "ed764a4ec1011526457c71b7c37fa9a659a866ab") (:keywords "docs" "password" "passphrase"))]) (password-generator . [(20150222 1240) nil "Password generator for humans. Good, Bad, Phonetic passwords included." single ((:commit . "c8193d5e963bda0a2f8e51fd4a94dcf37c76f282") (:url . "http://github.com/zargener/emacs-password-genarator"))]) (passthword . [(20141201 123) ((cl-lib (0 5))) "Simple password manager" single ((:commit . "30bace842eaaa6b48cb2251fb84868ebca0467d6"))]) (passmm . [(20170113 837) ((emacs (24 4))) "A minor mode for pass (Password Store)." single ((:commit . "076df7221f9450b96855c36684ae4a7481e0bb71") (:url . "https://github.com/pjones/passmm"))]) (pass . [(20161111 1320) ((emacs (24)) (password-store (0 1)) (f (0 17))) "Major mode for password-store.el" single ((:commit . "b4c3bd9130044c4e106bac5ba73a50822865e258") (:keywords "password-store" "password" "keychain"))]) (pasp-mode . [(20170615 605) ((emacs (24 3))) "- A major mode for editing Answer Set Programs." single ((:commit . "7e722686e34c66ac4485520225a5d0b375078bad") (:url . "https://github.com/santifa/pasp-mode") (:keywords "asp" "pasp" "answer set programs" "potassco answer set programs" "major mode" "languages"))]) (parsec . [(20170508 1500) ((emacs (24)) (cl-lib (0 5))) "Parser combinator library" single ((:commit . "8755c60826efaa8603b0d4300bfba9abaa072584") (:url . "https://github.com/cute-jumper/parsec.el") (:keywords "extensions"))]) (parsebib . [(20170501 347) ((emacs (24 3))) "A library for parsing bib files" single ((:commit . "bc31b627c666df576aa37e21c27a2223b3cb91a3") (:keywords "text" "bibtex"))]) (parse-csv . [(20160512 1023) nil "Parse strings with CSV fields into s-expressions" single ((:commit . "96bef1ffbc89ea12d13311c9fa239c5c3e864890") (:url . "https://github.com/mrc/el-csv") (:keywords "csv"))]) (parinfer . [(20170612 1048) ((dash (2 13 0)) (cl-lib (0 5))) "Simpler Lisp editing" tar ((:commit . "972d413b4d8284ba67ab43513a6a709692325f20") (:url . "https://github.com/DogLooksGood/parinfer-mode") (:keywords "parinfer"))]) (parent-mode . [(20150824 1600) nil "get major mode's parent modes" single ((:commit . "db692cf08deff2f0e973e6e86e26662b44813d1b") (:url . "https://github.com/Fanael/parent-mode"))]) (paren-face . [(20161028 1127) nil "a face for parentheses in lisp modes" single ((:commit . "0a7cbd65bb578cc52a9dc495a4fcaf23a57507bf") (:url . "https://github.com/tarsius/paren-face"))]) (paren-completer . [(20160501 352) ((emacs (24 3))) "Automatically, language agnostically, fill in delimiters." single ((:commit . "74183a8e13fa1266271bdcbcb4bfb29a4f915f0a") (:url . "https://github.com/MatthewBregg/paren-completer") (:keywords "convenience"))]) (paredit-menu . [(20160128 933) ((paredit (25))) "Adds a menu to paredit.el as memory aid" single ((:commit . "cc0ae85bd819f9ebfa4f2a419ab3b2d70e39c9c8") (:keywords "paredit"))]) (paredit-everywhere . [(20150821 2144) ((paredit (22))) "Enable some paredit features in non-lisp buffers" single ((:commit . "94c92095c2096713fb3e2f7662ddd994f4b694c6") (:keywords "languages" "convenience"))]) (paredit . [(20170405 1149) nil "minor mode for editing parentheses" single ((:commit . "99829aa423c9e8dd1be8d64c4b68982cf4c1559b") (:keywords "lisp"))]) (paradox . [(20161117 502) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar ((:commit . "4554d7651c26de10d350db28e150c685cd171e19") (:url . "https://github.com/Malabarba/paradox") (:keywords "package" "packages"))]) (paperless . [(20170213 503) ((emacs (24 4)) (f (0 19 0)) (s (1 10 0)) (cl-lib (0 6 1))) "A major mode for sorting and filing PDF documents." single ((:commit . "4e8c5d147db5c8ef0a3914e95b4030b28d29c6bb") (:url . "http://github.com/atgreen/paperless") (:keywords "pdf" "convenience"))]) (paper-theme . [(20151231 932) ((emacs (24)) (hexrgb (0))) "A minimal Emacs colour theme." single ((:commit . "15af5e31492f79dc0d47787150ef39d6318a2608") (:url . "http://gkayaalp.com/emacs.html#paper") (:keywords "theme" "paper"))]) (pangu-spacing . [(20170317 157) nil "Minor-mode to add space between Chinese and English characters." single ((:commit . "a4463dbb74abdeddb6c1c132a1f8fcf67ed87498") (:url . "http://github.com/coldnew/pangu-spacing"))]) (pandoc-mode . [(20170503 606) ((hydra (0 10 0)) (dash (2 10 0))) "Minor mode for interacting with Pandoc" tar ((:commit . "72aa0c2abad0ecca689adcf93dd4e9109c9fc737") (:keywords "text" "pandoc"))]) (pandoc . [(20161128 357) ((emacs (24 4))) "Pandoc interface" single ((:commit . "198d262d09e30448f1672338b0b5a81cf75e1eaa") (:url . "https://github.com/zonuexe/pandoc.el") (:keywords "hypermedia" "documentation" "markup" "converter"))]) (pallet . [(20150512 2) ((dash (2 10 0)) (s (1 9 0)) (f (0 17 1)) (cask (0 7))) "A package management tool for Emacs, using Cask." tar ((:commit . "b8d0df1883224a371ac0a3bc9b9c1c4dc61e6ac0"))]) (palimpsest . [(20170119 1232) nil "Various deletion strategies when editing" single ((:commit . "e6d5944393c260ceb724462c84046cc62c9ae916"))]) (palette . [(20170307 936) ((hexrgb (0))) "Color palette useful with RGB, HSV, and color names" single ((:url . "https://www.emacswiki.org/emacs/download/palette.el") (:keywords "color" "rgb" "hsv" "hexadecimal" "face" "frame"))]) (pager-default-keybindings . [(20130719 1357) ((pager (1 0))) "Add the default keybindings suggested for pager.el" single ((:commit . "dbbd49c2ac5906d1dabf9e9c832bfebc1ab405b3") (:url . "http://github.com/nflath/pager-default-keybindings"))]) (pager . [(20151201 1720) nil "windows-scroll commands" single ((:commit . "5c791ed23f1136e04040d6f4bc9b4ca5b6dc919f"))]) (page-break-lines . [(20170517 235) nil "Display ugly ^L page breaks as tidy horizontal lines" single ((:commit . "82f9100312dcc922fb66ff289faf5d4795d8ca7a") (:url . "https://github.com/purcell/page-break-lines") (:keywords "convenience" "faces"))]) (paganini-theme . [(20160612 337) ((emacs (24 0))) "A colorful, dark and warm theme." single ((:commit . "44e3ae4c451f3b380956fea8aef8cca75279746b") (:url . "https://github.com/onurtemizkan/paganini"))]) (pacmacs . [(20160131 32) ((emacs (24 4)) (dash (2 11 0)) (dash-functional (1 2 0)) (cl-lib (0 5)) (f (0 18 0))) "Pacman for Emacs" tar ((:commit . "d813e9c62c2540fe619234824fc60e128c786442") (:url . "http://github.com/codingteam/pacmacs.el"))]) (packed . [(20170314 1340) ((emacs (24 3)) (dash (2 12 1))) "package manager agnostic Emacs Lisp package utilities" single ((:commit . "536f4a3bda06cc09759fed1aa0cdebb068ff75a1") (:url . "https://github.com/tarsius/packed") (:keywords "compile" "convenience" "lisp" "package" "library"))]) (package-utils . [(20170222 2352) nil "Extensions for package.el" single ((:commit . "3cbbc2ff50ecb5e6fb20a309cb07d74ca10d4d42") (:url . "https://github.com/Silex/package-utils") (:keywords "package" "convenience"))]) (package-safe-delete . [(20150116 807) ((emacs (24)) (epl (0 7 -3))) "Safely delete package.el packages" single ((:commit . "138171e4fc03c0ef05a8260cbb5cd2e114c1c194") (:url . "https://github.com/Fanael/package-safe-delete"))]) (package-lint . [(20170702 227) ((cl-lib (0 5)) (emacs (24))) "A linting library for elisp package authors" single ((:commit . "416d1cba6664b0783722129d24f4a748bd71e057") (:url . "https://github.com/purcell/package-lint") (:keywords "lisp"))]) (package-filter . [(20161121 2319) nil "package archive whitelist and blacklist" single ((:commit . "c8e2531227c02c4c5e9d593f2cdb6a4ab4a6849b") (:url . "https://github.com/milkypostman/package-filter"))]) (package-build . [(20170506 1759) ((cl-lib (0 5))) "Tools for assembling a package archive" single ((:commit . "940c991ccd0dab53bd7c120601b3db35669c5e73") (:keywords "tools"))]) (package+ . [(20150319 1455) nil "Extensions for the package library." single ((:commit . "4a9618a44ec4f26a14e0136cd9d3c4855fceb25b") (:url . "TBA") (:keywords "extensions" "tools"))]) (pabbrev . [(20160320 1401) nil "Predictive abbreviation expansion" single ((:commit . "56400d5d256b42ffe45c229ea9827f026b650cf5"))]) (p4 . [(20150721 1237) nil "Simple Perforce-Emacs Integration" single ((:commit . "eff047caa75dbe4965defca9d1212454cdb755d5") (:url . "https://github.com/gareth-rees/p4.el"))]) (ox-twiki . [(20160306 915) ((org (8)) (cl-lib (0 5))) "org Twiki and Foswiki export" single ((:commit . "57538ada07d1c631cfd07410cd8f47523be54c9a") (:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org"))]) (ox-twbs . [(20161103 1316) nil "Bootstrap compatible HTML Back-End for Org" single ((:commit . "2414e6b1de7deb6dd2ae79a7be633fdccb9c2f28") (:url . "https://github.com/marsmining/ox-twbs") (:keywords "org" "html" "publish" "twitter" "bootstrap"))]) (ox-tufte . [(20160926 907) ((org (8 2)) (emacs (24))) "Tufte HTML org-mode export backend" single ((:commit . "49d7ea78fde063b407ce6fa57739f90c83500682") (:url . "https://github.com/dakrone/ox-tufte") (:keywords "org" "tufte" "html"))]) (ox-trac . [(20151102 955) ((org (8 0))) "Org Export Backend to Trac WikiFormat" single ((:commit . "2f2f70eefb9679025ae5812e221f0c118da36012") (:url . "https://github.com/JalapenoGremlin/ox-trac") (:keywords "org-mode" "trac"))]) (ox-tiddly . [(20151206 240) ((org (8)) (cl-lib (0 5))) "org TiddlyWiki exporter" single ((:commit . "57538ada07d1c631cfd07410cd8f47523be54c9a") (:url . "https://github.com/dfeich/org8-wikiexporters") (:keywords "org"))]) (ox-textile . [(20151114 2025) ((org (8 1))) "Textile Back-End for Org Export Engine" single ((:commit . "0dfca070e35bc6f4a412319e2474bb88666c8c2d") (:url . "https://github.com/yashi/org-textile") (:keywords "org" "textile"))]) (ox-rst . [(20170418 758) ((emacs (24 4)) (org (8 2 4))) "Export reStructuredText using org-mode." single ((:commit . "70f15591715796b1d96af660481739f019c295cb") (:url . "https://github.com/masayuko/ox-rst") (:keywords "org" "rst" "rest" "restructuredtext"))]) (ox-reveal . [(20161027 226) ((org (20150330))) "reveal.js Presentation Back-End for Org Export Engine" single ((:commit . "001567cc12d50ba07612edd1718b86a12e8c2547") (:keywords "outlines" "hypermedia" "slideshow" "presentation"))]) (ox-qmd . [(20170402 957) ((org (8 0))) "Qiita Markdown Back-End for Org Export Engine" single ((:commit . "3a24c7a0b3ec80e494b977e14a3dfb94c9f1d8ec") (:url . "https://github.com/0x60df/ox-qmd") (:keywords "org" "wp" "markdown" "qiita"))]) (ox-pukiwiki . [(20150124 916) ((org (8 1))) "Pukiwiki Back-End for Org Export Engine" single ((:commit . "bdbde2c294f5d3de11f08a3fe19f01175d2e011a") (:url . "https://github.com/yashi/org-pukiwiki") (:keywords "org" "pukiwiki"))]) (ox-pandoc . [(20161125 35) ((org (8 2)) (emacs (24)) (dash (2 8)) (ht (2 0))) "org exporter for pandoc." single ((:commit . "d9cf410096fb27be8eb13b2207697f8530f62abf") (:url . "https://github.com/kawabata/ox-pandoc") (:keywords "tools"))]) (ox-nikola . [(20151114 316) ((emacs (24 4)) (org (8 2 4)) (ox-rst (0 2))) "Export Nikola articles using org-mode." single ((:commit . "5bcbc1a38f6619f62294194f13ca0cd4ca14dd48") (:url . "https://github.com/masayuko/ox-nikola") (:keywords "org" "nikola"))]) (ox-minutes . [(20170323 835) ((emacs (24 4))) "Plain text backend for Org for Meeting Minutes" single ((:commit . "ad9632f35524ac546c6d55dfa827e8597669e1e1") (:url . "https://github.com/kaushalmodi/ox-minutes") (:keywords "org" "exporter" "notes"))]) (ox-mediawiki . [(20161228 850) ((cl-lib (0 5)) (s (1 9 0))) "Mediawiki Back-End for Org Export Engine" single ((:commit . "9e13392fe88817564f46a7a9f1eadebf54a2c346") (:url . "https://github.com/tomalexander/orgmode-mediawiki") (:keywords "org" "wp" "mediawiki"))]) (ox-latex-chinese . [(20170401 439) ((emacs (24 4)) (cl-lib (0 5))) "An example org latex exporter configure for Chinese users" single ((:commit . "f79d25443987a169a1234f5fbb2bc115cccea33e") (:url . "https://github.com/tumashu/ox-latex-chinese"))]) (ox-jira . [(20170607 1513) ((org (8 3))) "JIRA Backend for Org Export Engine" single ((:commit . "a5e7c7166f5d4baf4b6487f44865f2636cda4698") (:url . "https://github.com/stig/ox-jira.el") (:keywords "outlines" "hypermedia" "wp"))]) (ox-ioslide . [(20161015 638) ((emacs (24 1)) (org (8 0)) (cl-lib (0 5)) (f (0 17 2)) (makey (0 3))) "Export org-mode to Google I/O HTML5 slide." tar ((:commit . "6555680be5364c8ddd2bf446865cb1a82adb6b9e") (:url . "http://github.com/coldnew/org-ioslide") (:keywords "html" "presentation"))]) (ox-impress-js . [(20150412 1016) ((org (8))) "impress.js Back-End for Org Export Engine" tar ((:commit . "91c6d2af6af308ade352a03355c4fb551b238c6b") (:url . "https://github.com/kinjo/org-impress-js.el") (:keywords "outlines" "hypermedia" "calendar" "wp"))]) (ox-html5slide . [(20131227 2206) ((org (8 0))) "Export org-mode to HTML5 slide." single ((:commit . "4703dfbd9d79161509def673d2c1e118d722a58f") (:url . "http://github.com/coldnew/org-html5slide") (:keywords "html" "presentation"))]) (ox-gfm . [(20170628 1402) nil "Github Flavored Markdown Back-End for Org Export Engine" single ((:commit . "99f93011b069e02b37c9660b8fcb45dab086a07f") (:keywords "org" "wp" "markdown" "github"))]) (ox-epub . [(20170414 0) ((emacs (24 3)) (org (9))) "Export org mode projects to EPUB" single ((:commit . "113300ed2c66cca10624e6d7bf5ff0a72e05653a") (:url . "http://github.com/ofosos/org-epub") (:keywords "hypermedia"))]) (ox-clip . [(20170108 1348) ((org (8 2)) (htmlize (0))) "Cross-platform Formatted copy commands for org-mode" single ((:commit . "957fc496311e8c685a5299aeaeb0f1882caaa3af") (:url . "https://github.com/jkitchin/scimax/ox-clip.el") (:keywords "org-mode"))]) (ox-bibtex-chinese . [(20160510 506) ((emacs (24 4))) "Let ox-bibtex work well for Chinese users" single ((:commit . "7771304977f921ff0596b17520289c984116f1a1") (:url . "https://github.com/tumashu/ox-bibtex-chinese.git"))]) (ox-asciidoc . [(20170622 346) ((org (8 1))) "AsciiDoc Back-End for Org Export Engine" single ((:commit . "83cc8afad239bf386832e1da49fa273ab5a3e466") (:url . "https://github.com/yashi/org-asciidoc") (:keywords "org" "asciidoc"))]) (owdriver . [(20170401 612) ((smartrep (0 0 3)) (log4e (0 2 0)) (yaxception (0 2 0))) "Quickly perform various actions on other windows" single ((:commit . "d934f182bafe29aa16c173440eff3fef08b0ec10") (:url . "https://github.com/aki2o/owdriver") (:keywords "convenience"))]) (overseer . [(20170207 2241) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4)) (f (0 18 1))) "Ert-runner Integration Into Emacs" single ((:commit . "3269801dc5145d41c11599430229340e6dfa6cc6") (:url . "http://www.github.com/tonini/overseer.el"))]) (ov . [(20150311 2228) ((emacs (24 3))) "Overlay library for Emacs Lisp" single ((:commit . "fae7215b3dedba2a9ced145284332e4609bfdc38") (:url . "https://github.com/ShingoFukuyama/ov.el") (:keywords "overlay"))]) (outshine . [(20170414 1217) ((outorg (2 0)) (cl-lib (0 5))) "outline with outshine outshines outline" tar ((:commit . "399ccd20cd65c758bbbd5563bd804d2bccfd0279") (:url . "http://github.com/alphapapa/outshine"))]) (outorg . [(20170414 1215) ((emacs (24 4))) "Org-style comment editing" single ((:commit . "78b0695121fb974bc4e971eb4ef7f8afd6d89d64") (:url . "https://github.com/alphapapa/outorg"))]) (outlined-elisp-mode . [(20131108 327) nil "outline-minor-mode settings for emacs lisp" single ((:commit . "c16cb02b540448919ad148f2be6a41523ee5489c") (:url . "http://hins11.yu-yake.com/"))]) (outline-magic . [(20150209 1426) nil "outline mode extensions for Emacs" single ((:commit . "5689436cd67edc86066e51be77fa4e1fe21de507") (:keywords "outlines"))]) (otama . [(20160404 332) nil "Org-table Manipulator" single ((:commit . "c114fd8006762f891bc120a7c0ea213872e7ab31") (:keywords "database" "org-mode"))]) (osx-trash . [(20160520 600) ((emacs (24 1))) "System trash for OS X" tar ((:commit . "0f1dc052d0a750b8c75f14530a4897f5d4324b4e") (:url . "https://github.com/lunaryorn/osx-trash.el") (:keywords "files" "convenience" "tools" "unix"))]) (osx-pseudo-daemon . [(20131026 1730) nil "Daemon mode that plays nice with OSX." single ((:commit . "0b9f330a66b4e8d2ff9bcd57e09b8d304dfb5841") (:url . "https://github.com/DarwinAwardWinner/osx-pseudo-daemon") (:keywords "convenience" "osx"))]) (osx-plist . [(20101130 448) nil "Apple plist file parser" single ((:commit . "5e6de2622fdfe552d4902904f05ea03bc5a6ebd0") (:keywords "convenience"))]) (osx-org-clock-menubar . [(20150205 1311) nil "simple menubar integration for org-clock" tar ((:commit . "9964d2a97cc2fb6570dc4116da44f73bd8eb7cb3") (:url . "https://github.com/jordonbiondo/osx-org-clock-menubar") (:keywords "org" "osx"))]) (osx-location . [(20150613 217) nil "Watch and respond to changes in geographical location on OS X" tar ((:commit . "84e9269f6c66e52e8bbe8a0cd55932e7b3e7977e"))]) (osx-lib . [(20160919 1700) ((emacs (24 4))) "Basic function for Apple/OSX." single ((:commit . "fdbbb41e07ba64d6a09b54bd142a7c7b83bfd09f") (:keywords "apple" "applescript" "osx" "finder" "emacs" "elisp" "vpn" "speech"))]) (osx-dictionary . [(20170208 505) ((cl-lib (0 5))) "Interface for OSX Dictionary.app" tar ((:commit . "ec16c40cc4db0140db1cf6ad1fb1198c7c344b2b") (:url . "https://github.com/xuchunyang/osx-dictionary.el") (:keywords "mac" "dictionary"))]) (osx-clipboard . [(20141012 17) nil "Use the OS X clipboard from terminal Emacs" single ((:commit . "e46dd31327a3f92f77b013b4c9b1e5fdd0e5c73d") (:url . "https://github.com/joddie/osx-clipboard-mode"))]) (osx-browse . [(20140508 1341) ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) "Web browsing helpers for OS X" single ((:commit . "44ded7cc3a7ee426c1c3257fae534c121f7e752e") (:url . "http://github.com/rolandwalker/osx-browse") (:keywords "hypermedia" "external"))]) (origami . [(20170129 805) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "Flexible text folding" tar ((:commit . "5630536d04613476e13b413fe05fd0bbff4107ca") (:url . "https://github.com/gregsexton/origami.el") (:keywords "folding"))]) (orgtbl-show-header . [(20141023 137) nil "Show the header of the current column in the minibuffer" single ((:commit . "0b63ab4425b6e2af8ffb1f0b94839918d1720d09"))]) (orgtbl-join . [(20150121 1446) ((cl-lib (0 5))) "join columns from another table" tar ((:commit . "ccf5e0d96e053dc289da39a048715fcf36835ff2") (:keywords "org" "table" "join" "filtering"))]) (orgtbl-ascii-plot . [(20151215 1351) nil "ascii-art bar plots in org-mode tables" single ((:commit . "cd91f6ae26a7402e192a1f4fd6248f5797edf19e") (:keywords "org" "table" "ascii" "plot"))]) (orgtbl-aggregate . [(20160421 726) nil "Create an aggregated Org table from another one" tar ((:commit . "a33a02ba70639cadaef5f6ea028c2fe73f76cf14") (:keywords "org" "table" "aggregation" "filtering"))]) (orgnav . [(20170608 1013) ((helm (2 7 0)) (s (1 11 0)) (dash (1 11 0)) (emacs (24))) "Org tree navigation using helm" tar ((:commit . "9e2cac9c1a67af5f0080e60022e821bf7b70312d") (:url . "http://github.com/facetframer/orgnav") (:keywords "convenience" "outlines"))]) (orglue . [(20150430 513) ((org (8 1)) (epic (0 2)) (org-mac-link (1 2))) "more functionality to org-mode." tar ((:commit . "4732f8bfd6866e20230b36e5971f2492827c6944") (:keywords "org"))]) (orglink . [(20161104 1800) ((emacs (24 3)) (dash (2 12 1)) (org (8 3))) "use Org Mode links in other modes" single ((:commit . "50debcf3508d2252bdce35c8822af1b3a81fd2dd") (:url . "https://github.com/tarsius/orglink") (:keywords "hypertext"))]) (orgit . [(20170403 1323) ((emacs (24 4)) (dash (2 13 0)) (magit (2 10 0)) (org (8 3 3))) "support for Org links to Magit buffers" single ((:commit . "c91e662ace7e3ce992269cbf755f378bc6742511") (:url . "https://github.com/magit/orgit"))]) (orgbox . [(20140528 1826) ((org (8 0)) (cl-lib (0 5))) "Mailbox-like task scheduling Org." single ((:commit . "72373b09768cc2200d143af38e25a0c082e8375d") (:url . "https://github.com/yasuhito/orgbox") (:keywords "org"))]) (organic-green-theme . [(20170125 606) nil "Low-contrast green color theme." single ((:commit . "5f8ce452d16f1acbd18a6963f2c042851968dd8d"))]) (org2jekyll . [(20170225 115) ((dash-functional (2 11 0)) (s (1 9 0)) (deferred (0 3 1)) (kv (0 0 19))) "Minor mode to publish org-mode post to jekyll without specific yaml" tar ((:commit . "52a19a5d372116262b9d613f4ec8490a3b49e329") (:url . "https://github.com/ardumont/org2jekyll") (:keywords "org-mode" "jekyll" "blog" "publish"))]) (org2issue . [(20160426 1818) ((org (8 0)) (emacs (24 4)) (ox-gfm (0 1)) (gh (0 1)) (s (20160405 920))) "export org to github issue" single ((:commit . "0f7f13463e389f2d8d7d830a928042d0cf1c71eb") (:url . "https://github.com/lujun9972/org2issue") (:keywords "convenience" "github" "org"))]) (org2elcomment . [(20170324 245) ((org (8 3 4))) "Convert Org file to Elisp comments" single ((:commit . "c88a75d9587c484ead18f7adf08592b09c1cceb0") (:keywords "extensions"))]) (org2blog . [(20170627 1750) ((org (8 3)) (xml-rpc (1 6 12)) (metaweblog (1 0 0))) "Blog from Org mode to wordpress" tar ((:commit . "e266ff4296661de520b73e6e18f201fb6378ba05"))]) (org-wunderlist . [(20150817 1913) ((request-deferred (0 2 0)) (alert (1 1)) (emacs (24)) (cl-lib (0 5)) (org (8 2 4)) (s (1 9 0))) "Org sync with Wunderlist" single ((:commit . "f7f1ca73661356b9fa072efd73431592ff1182e1") (:url . "https://github.com/myuhe/org-wunderlist.el") (:keywords "convenience"))]) (org-webpage . [(20170318 450) ((cl-lib (1 0)) (ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0)) (simple-httpd (0 1))) "A static site generator based on org mode." tar ((:commit . "c71042f16bf33120d0d3d40e107f3f4de044ae53"))]) (org-wc . [(20160204 1715) nil "Count words in org mode trees." single ((:commit . "7735d5111f779a84c40b1eb3783631e6048fb6fe"))]) (org-vcard . [(20161001 2202) nil "org-mode support for vCard export and import." tar ((:commit . "58f83784c580da893c214bd729aae3ab5d285f33") (:url . "https://github.com/flexibeast/org-vcard") (:keywords "outlines" "org" "vcard"))]) (org-trello . [(20170225 1247) ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) "Minor mode to synchronize org-mode buffer and trello board" tar ((:commit . "32dd866e830836a72a3b96b96e0d00d044d0eaf7"))]) (org-tree-slide . [(20160513 2325) nil "A presentation tool for org-mode" single ((:commit . "fed7ec7e6df59cffcdb4c13a9345f4d828404dd8") (:keywords "org-mode" "presentation" "narrowing"))]) (org-transform-tree-table . [(20150110 633) ((dash (2 10 0)) (s (1 3 0))) "Transform org-mode tree with properties to a table, and the other way around" single ((:commit . "0a9bf07f01bc5fc3b349aff64e83999a8de83b52") (:url . "https://github.com/jplindstrom/emacs-org-transform-tree-table") (:keywords "org-mode" "table" "org-table" "tree" "csv" "convert"))]) (org-tracktable . [(20161118 529) ((emacs (24)) (cl-lib (0 5))) "Track your writing progress in an org-table" single ((:commit . "8e0e60a582a034bd66d5efb72d513140b7d4d90a") (:url . "https://github.com/tty-tourist/org-tracktable") (:keywords "org" "writing"))]) (org-toodledo . [(20150301 313) ((request-deferred (0 2 0)) (emacs (24)) (cl-lib (0 5))) "Toodledo integration for Emacs Org mode" tar ((:commit . "2c91a92bd07ae4a546771b018a6faa0e06399968") (:keywords "outlines" "data"))]) (org-time-budgets . [(20151111 1) ((alert (0 5 10)) (cl-lib (0 5))) "Define time budgets and display clocked time." single ((:commit . "baa1ce6333157fed3b3799a80e6cf8c73c9e2c18"))]) (org-themis . [(20160121 2004) ((cl-lib (0 4))) "Experimental project management mode for org-mode" single ((:commit . "78aadbbe22b1993be5c4accd0d3f91a4e85c9a3c") (:url . "http://github.com/zellio/org-themis") (:keywords "org-mode" "elisp" "project"))]) (org-tfl . [(20161120 932) ((org (0 16 2)) (cl-lib (0 5)) (emacs (24 1))) "Transport for London meets Orgmode" tar ((:commit . "f0405e3ad62b90ea43489bdd6312adbd77edb9f3") (:url . "https://github.com/storax/org-tfl") (:keywords "org" "tfl"))]) (org-table-sticky-header . [(20170408 1814) ((org (8 2 10)) (emacs (24 4))) "Sticky header for org-mode tables" single ((:commit . "93dc69efc00ac9fd3cc2ece5100f51df33ec7d8b") (:keywords "extensions"))]) (org-table-comment . [(20120209 1051) nil "Org table comment modes." single ((:commit . "33b9966c33ecbc3e27cca67c2f2cdea04364d74e") (:url . "http://github.com/mlf176f2/org-table-comment.el") (:keywords "org-mode" "orgtbl"))]) (org-sync-snippets . [(20170614 641) ((org (8 3 5)) (emacs (24 3)) (f (0 17 3))) "Export snippets to org-mode and vice versa" single ((:commit . "e96bc94ff8865b4d408d90c4f3e39cc7cbb6cec8") (:url . "https://github.com/abrochard/org-sync-snippets") (:keywords "snippet" "org-mode" "yasnippet" "tools"))]) (org-sync . [(20150817 754) ((cl-lib (0 5)) (org (8 2)) (emacs (24))) "Synchronize Org documents with External Issue Trackers" tar ((:commit . "1e9045e38cd6f12dc0d60e2f7bd2d414a49a5722") (:url . "https://github.com/arbox/org-sync") (:keywords "org" "synchronization" "issue tracking" "github" "redmine"))]) (org-sticky-header . [(20170422 2135) ((emacs (24 4)) (org (8 3 5))) "Show off-screen Org heading at top of window" single ((:commit . "aae8dbc7f3b33c4dd35dc38d83791d7c23757060") (:url . "http://github.com/alphapapa/org-sticky-header") (:keywords "hypermedia" "outlines" "org"))]) (org-static-blog . [(20170621 2328) ((emacs (24 3))) "a simple org-mode based static blog generator" single ((:commit . "e9ba61e8bbe6e2bd1cb5fe2e507d066fa05cabd9") (:url . "http://github.com/bastibe/org-static-blog"))]) (org-seek . [(20161216 2102) ((emacs (24 3)) (ag (0 48))) "Searching Org-mode files with search tools." single ((:commit . "1f51e6634e3b9a6a29d335d0d14370a6ffef2265") (:url . "https://github.com/stardiviner/org-seek.el") (:keywords "org" "search" "ag" "pt"))]) (org-rtm . [(20160214 436) ((rtm (0 1))) "Simple import/export from rememberthemilk to org-mode" single ((:commit . "adc42ad1fbe92ab447ccc9553780f4456f2508d2") (:url . "https://github.com/pmiddend/org-rtm") (:keywords "outlines" "data"))]) (org-review . [(20160906 2237) nil "schedule reviews for Org entries" single ((:commit . "058e75b7f28d2ad2390290fe17a63d98ef5ab763") (:url . "https://github.com/brabalan/org-review") (:keywords "org" "review"))]) (org-repo-todo . [(20160307 1029) nil "Simple repository todo management with org-mode" single ((:commit . "b164bacefcd3c55dd40cd1a9e91ffefd315b400d") (:url . "https://github.com/waymondo/org-repo-todo") (:keywords "convenience"))]) (org-ref . [(20170626 1834) ((dash (2 11 0)) (helm (1 5 5)) (helm-bibtex (2 0 0)) (ivy (0 8 0)) (hydra (0 13 2)) (key-chord (0)) (s (1 10 0)) (f (0 18 0)) (emacs (24 4)) (pdf-tools (0 7))) "citations, cross-references and bibliographies in org-mode" tar ((:commit . "6abe56f638562cc683d866f209387c9d30a32299") (:url . "https://github.com/jkitchin/org-ref") (:keywords "org-mode" "cite" "ref" "label"))]) (org-redmine . [(20160711 414) nil "Redmine tools using Emacs OrgMode" single ((:commit . "4cdf9a2aea8420befd2d667d98f63c386f3e44f7") (:url . "https://github.com/gongo/org-redmine") (:keywords "redmine" "org"))]) (org-recent-headings . [(20170604 1353) ((emacs (24 4)) (org (9 0 5)) (dash (2 13 0))) "Jump to recently used Org headings" single ((:commit . "9b373ddafe33283ed9a41bddc65f05d6e9bfcda6") (:url . "http://github.com/alphapapa/org-recent-headings") (:keywords "hypermedia" "outlines" "org"))]) (org-readme . [(20151204 417) ((http-post-simple (1 0)) (yaoddmuse (0 1 1)) (header2 (21 0)) (lib-requires (21 0)) (cl-lib (0 5))) "Integrates Readme.org and Commentary/Change-logs." tar ((:commit . "4cb9f768d282a2835b4510b6504ff9ede487007d") (:url . "https://github.com/mlf176f2/org-readme") (:keywords "header2" "readme.org" "emacswiki" "git"))]) (org-random-todo . [(20170404 318) ((emacs (24 3)) (alert (1 2))) "notify of random TODO's" single ((:commit . "8b784ff0419fcaa2467991bc670e0e8e31be62c0") (:keywords "org" "todo" "notification"))]) (org-protocol-jekyll . [(20170328 939) ((cl-lib (0 5))) "Jekyll's handler for org-protocol" single ((:commit . "dec064a42d6dfe81dfde7ba59ece5ca103ac6334"))]) (org-projectile . [(20170520 2310) ((projectile (0 11 0)) (dash (2 10 0)) (emacs (24))) "Repository todo management for org-mode" tar ((:commit . "0ca3b80a46d8c541d36f161506ac8d8dc36d8e80") (:url . "https://github.com/IvanMalison/org-projectile") (:keywords "org" "projectile" "todo"))]) (org-preview-html . [(20160913 526) ((org (8 0)) (emacs (24 4))) "automatically use eww to preview the current org file on save" single ((:commit . "2b6afbaf1fcf781bcd53074ee62895f15f5282e5") (:url . "https://github.com/lujun9972/org-preview-html") (:keywords "convenience" "eww" "org"))]) (org-present . [(20141109 1756) ((org (7))) "Minimalist presentation minor-mode for Emacs org-mode." single ((:commit . "1b519cfd5abf44bed307cac576dc9fd61eb2c35f") (:url . "https://github.com/rlister/org-present"))]) (org-pomodoro . [(20161119 226) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode." tar ((:commit . "4b1d650b8d0b607a616a8c792da428334fe635f7") (:url . "https://github.com/lolownia/org-pomodoro"))]) (org-pdfview . [(20161130 1053) ((org (6 1)) (pdf-tools (0 40))) "Support for links to documents in pdfview mode" single ((:commit . "9de96eef6f187a10cd910e3bc3eb274d38856819") (:keywords "org" "pdf-view" "pdf-tools"))]) (org-password-manager . [(20170701 919) ((org (8 2 10)) (s (1 9 0)) (dash (2 13 0))) "Password manager for Org Mode." single ((:commit . "b2814d26287f2b6295a39098da9f5e2fbc5f2de2") (:url . "https://git.leafac.com/org-password-manager") (:keywords "password"))]) (org-parser . [(20170528 1324) ((emacs (25 1)) (dash (2 13 0))) "parse org files into structured datatypes." single ((:url . "https://bitbucket.org/zck/org-parser.el") (:keywords "files" "outlines" "tools"))]) (org-page . [(20170607 442) ((ht (1 5)) (simple-httpd (1 4 6)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0)) (cl-lib (0 5)) (git (0 1 1))) "a static site generator based on org mode" tar ((:commit . "fa4e86621a63033148f8fe295a11b4721ba17462"))]) (org-outlook . [(20160705 638) nil "Outlook org" tar ((:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d") (:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook"))]) (org-octopress . [(20170315 441) ((org (9 0)) (orglue (0 1)) (ctable (0 1 1))) "Compose octopress articles using org-mode." tar ((:commit . "a8a251d6940623daae58453dd91630593c2536c0") (:keywords "org" "jekyll" "octopress" "blog"))]) (org-notebook . [(20170321 2152) ((emacs (24)) (org (8)) (cl-lib (0 5))) "Ease the use of org-mode as a notebook" single ((:commit . "d90c4aeca2442161e6dd89de175561af85aace03") (:keywords "convenience" "tools"))]) (org-multiple-keymap . [(20150328 1806) ((org (8 2 4)) (emacs (24)) (cl-lib (0 5))) "Set keymap to elements, such as timestamp and priority." single ((:commit . "8ebc532df7f0dd6e6c3aa7c380a51d4166c668e8") (:url . "https://github.com/myuhe/org-multiple-keymap.el") (:keywords "convenience" "org-mode"))]) (org-mru-clock . [(20170323 308) ((emacs (24 3))) "load most recently used clocks into history" single ((:commit . "98691aac779001d50516b12679e2a53b5192f164") (:keywords "convenience" "calendar"))]) (org-mobile-sync . [(20160629 1307) ((emacs (24 3 50)) (org (8 0))) "automatically sync org-mobile on changes" single ((:commit . "442bcfe93f4f2cab02e2dd2c3634fbffcda9a17d") (:url . "https://github.com/steckerhalter/org-mobile-sync") (:keywords "org-mode" "org" "mobile" "sync" "todo"))]) (org-mime . [(20170506 2244) ((emacs (24)) (cl-lib (0 5))) "org html export for text/html MIME emails" single ((:commit . "c0e99cfdfa645300a0c114fa6825efdf797da7c0") (:url . "http://github.com/org-mime/org-mime") (:keywords "mime" "mail" "email" "html"))]) (org-mac-link . [(20170105 1723) nil "Insert org-mode links to items selected in various Mac apps" single ((:commit . "dd757f14f00bd106165fe900b011c7c1ea4e62ce") (:keywords "org" "mac" "hyperlink"))]) (org-mac-iCal . [(20140107 519) nil "Imports events from iCal.app to the Emacs diary" single ((:commit . "dd757f14f00bd106165fe900b011c7c1ea4e62ce") (:keywords "outlines" "calendar"))]) (org-linkany . [(20160206 2011) ((log4e (0 2 0)) (yaxception (0 1))) "Insert link using anything.el/helm.el on org-mode" single ((:commit . "8cfe2f1a46e6654a79f56505349d1396263cecb3") (:url . "https://github.com/aki2o/org-linkany") (:keywords "org" "completion"))]) (org-link-travis . [(20140405 1627) ((org (7))) "Insert/Export the link of Travis CI on org-mode" single ((:commit . "596615ad8373d9090bd4138da683524f0ad0bda5") (:url . "https://github.com/aki2o/org-link-travis") (:keywords "org"))]) (org-link-minor-mode . [(20170616 516) ((org (8))) "Enable org-mode links in non-org modes" single ((:commit . "f7d986b4c63673e0e81ad87e9109237abc667893"))]) (org-journal . [(20170221 612) nil "a simple org-mode based journaling mode" single ((:commit . "c020fa3f58cdeff51701322334daa6253a144db6") (:url . "http://github.com/bastibe/org-journal"))]) (org-jira . [(20170527 2154) ((emacs (24 5)) (cl-lib (0 5)) (request (0 2 0))) "Syncing between Jira and Org-mode." tar ((:commit . "4d8bda9b5207175ecd3ae647ebec42b3546efd49") (:url . "https://github.com/ahungry/org-jira") (:keywords "ahungry" "jira" "org" "bug" "tracker"))]) (org-jekyll . [(20130508 239) ((org (8 0))) "Export jekyll-ready posts form org-mode entries" single ((:commit . "66300a1a6676ab168663178e7a7c954541a39992") (:url . "http://juanreyero.com/open/org-jekyll/") (:keywords "hypermedia"))]) (org-iv . [(20160609 1854) ((impatient-mode (1 0 0)) (org (8 0)) (cl-lib (0 5))) "a tool used to view html (in browser) generated by org-file once the org-file changes" tar ((:commit . "40fa39ae680794cd493dfa8624e5eff4d04c2363"))]) (org-if . [(20150920 813) nil "Interactive Fiction Authoring System for Org-Mode." tar ((:commit . "fab602cc1bbee7a4e99c0083e129219d3f9ed2e8"))]) (org-grep . [(20151202 429) ((cl-lib (0 5))) "Kind of M-x rgrep adapted for Org mode." single ((:commit . "5bdd04c0f53b8a3d656f36ea17bba3df7f0cb684") (:url . "https://github.com/pinard/org-grep"))]) (org-gnome . [(20150614 757) ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) "Orgmode integration with the GNOME desktop" single ((:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862") (:keywords "org" "gnome"))]) (org-gcal . [(20170420 1401) ((request-deferred (0 2 0)) (alert (1 1)) (emacs (24)) (cl-lib (0 5)) (org (8 2 4))) "Org sync with Google Calendar" single ((:commit . "bdc704842da000a1cffb8f155ef3887c5e1d0446") (:url . "https://github.com/myuhe/org-gcal.el") (:keywords "convenience"))]) (org-fstree . [(20090723 819) nil "include a filesystem subtree into an org file" single ((:commit . "24e305c6443be9f45198185772eecfddc390a9ce") (:url . "http://www.burtzlaff.de/org-fstree/org-fstree.el") (:keywords "org-mode" "filesystem" "tree"))]) (org-evil . [(20170529 741) ((dash (2 13 0)) (evil (0)) (monitor (0)) (org (0))) "Evil extensions for Org." tar ((:commit . "6c98be7488fb0dc7cea8f88af6e432edb43e0e32") (:url . "https://github.com/guiltydolphin/org-evil") (:keywords "convenience" "evil" "org"))]) (org-elisp-help . [(20161121 1655) ((cl-lib (0 5)) (org (9 0))) "org links to emacs-lisp documentation" single ((:commit . "3e33ab1a2933dd7f2782ef91d667a37f12d633ab") (:url . "https://github.com/tarsius/org-elisp-help") (:keywords "org" "remember" "lisp"))]) (org-ehtml . [(20150506 1658) ((web-server (20140109 2200)) (emacs (24 3))) "Export Org-mode files as editable web pages" tar ((:commit . "9df85de1a0fe1e7b2d6c000777c1a0c0217f92d0"))]) (org-edit-latex . [(20170621 758) ((emacs (24 4)) (org (9 0)) (auctex (11 90))) "Edit embedded LaTeX in a dedicated buffer" single ((:commit . "e8362d605f13a1c8b94b112c302b6351de6c88eb") (:url . "https://github.com/et2010/org-edit-latex") (:keywords "org" "latex"))]) (org-easy-img-insert . [(20160915 1308) ((emacs (24 4))) "An easier way to add images from the web in org mode" single ((:commit . "9f8aaa7f68ff1f0d8d7b1e9b618abb15002f971e") (:url . "https://github.com/tashrifsanil/org-easy-img-insert") (:keywords "convenience" "hypermedia" "files"))]) (org-dropbox . [(20150113 2109) ((dash (2 2)) (names (20150000)) (emacs (24))) "move Dropbox notes from phone into org-mode datetree" single ((:commit . "75dab6d6f0438a7a8a18ccf3a5d55f50bf531f6e") (:url . "https://github.com/heikkil/org-dropbox") (:keywords "dropbox" "android" "notes" "org-mode"))]) (org-drill-table . [(20170408 1205) ((s (1 7 0)) (dash (2 2 0)) (cl-lib (0 3)) (org-plus-contrib (8 2)) (emacs (24 1))) "Generate drill cards from org tables" single ((:commit . "5662511e98697e086149a223a64f9f01fabf7330"))]) (org-dp . [(20160326 603) ((cl-lib (0 5))) "Declarative Local Programming with Org Elements" tar ((:commit . "d9a18e8fb04c94d5d35236b37ee7db0afcb7d580") (:url . "https://github.com/tj64/org-dp"))]) (org-download . [(20170605 23) ((async (1 2))) "Image drag-and-drop for Emacs org-mode" single ((:commit . "131d2409b3639798ebac6d77c98eae446ea915dc") (:url . "https://github.com/abo-abo/org-download") (:keywords "images" "screenshots" "download"))]) (org-dotemacs . [(20151119 1022) ((org (7 9 3)) (cl-lib (1 0))) "Store your emacs config as an org file, and choose which bits to load." single ((:commit . "99a066508fedf8c80a3bfef08e015e612499d417") (:url . "https://github.com/vapniks/org-dotemacs") (:keywords "local"))]) (org-doing . [(20161017 920) nil "Keep track of what you're doing" tar ((:commit . "07ddbfc238cba31e4990c9b52e9a2757b39111da") (:url . "https://github.com/omouse/org-doing") (:keywords "tools" "org"))]) (org-dashboard . [(20160929 941) ((cl-lib (0 5))) "Visually summarize progress in org files" single ((:commit . "f9cd3b979166a3713aea48b1a1e6aaea2e7c7a05") (:url . "http://github.com/bard/org-dashboard") (:keywords "outlines" "calendar"))]) (org-cua-dwim . [(20120202 2134) nil "Org-mode and Cua mode compatibility layer" single ((:commit . "a55d6c7009fc0b22f1110c07de629acc955c85e4") (:keywords "org-mode" "cua-mode"))]) (org-context . [(20170107 537) nil "Contextual capture and agenda commands for Org-mode" single ((:commit . "a3b4a4ce6d15e3c2d45eb5dcb78bea81913f3e21") (:url . "https://github.com/thisirs/org-context") (:keywords "org" "capture" "agenda" "convenience"))]) (org-commentary . [(20160801 2337) ((dash (2 0)) (emacs (24 4)) (org (8 0))) "generate or update conventional library headers using Org mode files" tar ((:commit . "821ccb994811359c42f4e3d459e0e88849d42b75") (:url . "https://github.com/smaximov/org-commentary") (:keywords "convenience" "docs" "tools"))]) (org-clock-today . [(20161014 220) ((emacs (25))) "Show the total clocked time of the current day in the mode line" single ((:commit . "02b8fd541a01040405a9a1400c46dcb68b7c2a3a"))]) (org-clock-csv . [(20170326 1041) ((org (8 3)) (s (1 0))) "Export `org-mode' clock entries to CSV format." single ((:commit . "0bae215df11e5602b07294e83b595447ae73ca0d") (:url . "https://github.com/atheriel/org-clock-csv") (:keywords "calendar" "data" "org"))]) (org-clock-convenience . [(20160830 1156) ((cl-lib (0 5)) (org (8)) (emacs (24 3))) "convenience functions for org time tracking" single ((:commit . "2d3fab0991ef7fa8d94c46a63a66abd289c79d9e") (:url . "https://github.com/dfeich/org-clock-convenience") (:keywords "org"))]) (org-cliplink . [(20160819 900) ((emacs (24 4))) "insert org-mode links from the clipboard" tar ((:commit . "4c7c126ad3421ef076e4eb6358c57389b40a5e53") (:url . "http://github.com/rexim/org-cliplink"))]) (org-chinese-utils . [(20170313 2148) nil "A org-mode utils manager for Chinese users" single ((:commit . "f44d7114899102f1e1109bb7aeeab4330281ff94") (:url . "https://github.com/tumashu/org-chinese-utils.git"))]) (org-capture-pop-frame . [(20160518 308) ((emacs (24 4))) "Run org-capture in a new pop frame" single ((:commit . "b16fd712de62cf0d1f9befd03be6ab5983cb3301") (:url . "https://github.com/tumashu/org-capture-pop-frame.git"))]) (org-caldav . [(20170615 724) ((org (7))) "Sync org files with external calendar through CalDAV" single ((:commit . "07e6ccda6756754a115d567f2ad3a760514b731d") (:keywords "calendar" "caldav"))]) (org-bullets . [(20140918 1137) nil "Show bullets in org-mode as UTF-8 characters" single ((:commit . "b70ac2ec805bcb626a6e39ea696354577c681b36") (:url . "https://github.com/sabof/org-bullets"))]) (org-brain . [(20170629 1228) ((emacs (25)) (org (9))) "Org-mode concept mapping" single ((:commit . "0566b155f417ab645542135f0b25525ff2c48421") (:url . "http://github.com/Kungsgeten/org-brain") (:keywords "outlines" "hypermedia"))]) (org-bookmark-heading . [(20170510 1008) ((emacs (24 4))) "Emacs bookmark support for org-mode" single ((:commit . "c535fd9b430d2cc50b54a1ab550d64e20ebd5bd6") (:url . "http://github.com/alphapapa/org-bookmark-heading") (:keywords "hypermedia" "outlines"))]) (org-board . [(20170507 858) nil "bookmarking and web archival system for Org mode." single ((:commit . "2978aee8981a2ff5c09104b2d8b055957b277078") (:url . "https://github.com/scallywag/org-board") (:keywords "org" "bookmarks" "archives"))]) (org-beautify-theme . [(20161019 1524) nil "A sub-theme to make org-mode more beautiful." single ((:commit . "7b7a7cbd4f25f77e8bd81783f517b2b182220fd9") (:keywords "org" "theme"))]) (org-babel-eval-in-repl . [(20170511 514) ((eval-in-repl (0 9 2)) (matlab-mode (3 3 6)) (ess (16 10)) (emacs (24))) "Eval org-mode babel code blocks in various REPLs." tar ((:commit . "bfa72c582ac1531ad42aba23e2b1267ab68e31f6") (:url . "https://github.com/diadochos/org-babel-eval-in-repl") (:keywords "literate programming" "reproducible research" "async execution"))]) (org-autolist . [(20150922 705) nil "Improved list management in org-mode" single ((:commit . "da332fadcd9be4c5eb21c5e98c392b89743750b2") (:url . "https://github.com/calvinwyoung/org-autolist") (:keywords "lists" "checklists" "org-mode"))]) (org-attach-screenshot . [(20160928 258) nil "screenshots integrated with org attachment dirs" single ((:commit . "1aabac1a2885d31a3d862cbeb31a635c3d68b9ab") (:url . "https://github.com/dfeich/org-screenshot") (:keywords "org"))]) (org-alert . [(20170701 1855) ((s (1 10 0)) (dash (2 12 0)) (alert (1 2))) "Notify org deadlines via notify-send" single ((:commit . "169acc082643b6b793aab17ab7e0de3694e74698") (:url . "https://github.com/groksteve/org-alert") (:keywords "org" "org-mode" "notify" "notifications"))]) (org-agenda-property . [(20140626 1416) ((emacs (24 2))) "Display org properties in the agenda buffer." single ((:commit . "3b469f3e93de0036547f3631cd0366d53f7584c8") (:url . "http://github.com/Bruce-Connor/org-agenda-property") (:keywords "calendar"))]) (org-ac . [(20170401 607) ((auto-complete-pcmp (0 0 1)) (log4e (0 2 0)) (yaxception (0 1))) "Some auto-complete sources for org-mode" single ((:commit . "41e3ef8e4039619d0370c23c66730b3b2e9e32ed") (:url . "https://github.com/aki2o/org-ac") (:keywords "org" "completion"))]) (operate-on-number . [(20150706 2323) nil "Operate on number at point with arithmetic functions" single ((:commit . "ceb3be565a29326c1098244fac0c50606723a56e") (:url . "https://github.com/knu/operate-on-number.el") (:keywords "editing"))]) (openwith . [(20120531 1436) nil "Open files with external programs" single ((:url . "https://bitbucket.org/jpkotta/openwith") (:keywords "files" "processes"))]) (openstack-cgit-browse-file . [(20130819 227) nil "Browse the current file in OpenStack cgit" single ((:commit . "244219288b9aef41155044697bb114b7af83ab8f") (:url . "https://github.com/chmouel/openstack-cgit-browse-file") (:keywords "convenience" "vc" "git" "cgit" "gerrit" "openstack"))]) (opensource . [(20160926 916) ((s (1 11 0)) (dash (2 12 1)) (pkg-info (0 6 0)) (request (0 2 0))) "Client for Opensource API" tar ((:commit . "13499b7ae602c735e40c1c494bda6252a2f1c98f") (:url . "https://github.com/OpenSourceOrg/el-opensourceorg") (:keywords "opensource"))]) (opener . [(20161207 1010) ((request (0 2 0)) (emacs (24)) (cl-lib (0 5))) "opening urls as buffers" tar ((:commit . "c384f67278046fdcd220275fdd212ab85672cbeb") (:url . "https://github.com/0robustus1/opener.el") (:keywords "url" "http" "files"))]) (opencl-mode . [(20160220 909) nil "Syntax coloring for opencl kernels" single ((:commit . "bb39190bb4fdffa188ce4e6849853a07c682b999") (:url . "https://github.com/salmanebah/opencl-mode") (:keywords "c" "opencl"))]) (open-junk-file . [(20161210 314) nil "Open a junk (memo) file to try-and-error" single ((:commit . "558bec7372b0fed4c4cb6074ab906535fae615bd") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/open-junk-file.el") (:keywords "convenience" "tools"))]) (open-in-msvs . [(20170123 1428) nil "Open current file:line:column in Microsoft Visual Studio" tar ((:commit . "e0d071c83188ad5db8f3297d6ce784b4ed554a04") (:url . "https://github.com/evgeny-panasyuk/open-in-msvs") (:keywords "convenience" "usability" "integration" "visual studio" "msvs" "ide"))]) (opam . [(20150719 520) ((emacs (24 1))) "OPAM tools" single ((:commit . "4d589de5765728f56af7078fae328b6792de8600") (:url . "https://github.com/lunaryorn/opam.el") (:keywords "convenience"))]) (oneonone . [(20170416 858) ((hexrgb (0))) "Frame configuration that uses one frame per window." single ((:url . "https://www.emacswiki.org/emacs/download/oneonone.el") (:keywords "local" "frames"))]) (one-time-pad-encrypt . [(20160329 813) nil "One time pad encryption within file" single ((:commit . "87cc1f124024ce3d277299ca0ac703f182937d9f") (:url . "https://github.com/garvinguan/emacs-one-time-pad/") (:keywords "convenience"))]) (on-screen . [(20160302 150) ((cl-lib (0))) "guide your eyes while scrolling" single ((:commit . "206468aa4de299ad26c2db12b757f5ad7290912f") (:url . "https://github.com/michael-heerdegen/on-screen.el") (:keywords "convenience"))]) (on-parens . [(20150702 1506) ((dash (2 10 0)) (emacs (24)) (evil (1 1 6)) (smartparens (1 6 3))) "smartparens wrapper to fit with evil-mode/vim normal-state" single ((:commit . "16a145bf73550d5000ffbc2725c541a8458d0d3c") (:keywords "evil" "smartparens"))]) (omtose-phellack-theme . [(20161111 1320) nil "A dark theme, with cold bluish touch." tar ((:commit . "66f99633e199e65bd28641626435e8e59246529a"))]) (omnisharp . [(20170702 1129) ((emacs (24)) (flycheck (30)) (dash (2 12 0)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (shut-up (0 3 2)) (f (0 19 0))) "Omnicompletion (intellisense) and more for C#" tar ((:commit . "696c758738df429c86a0f848c5f11f47d8d65ea9") (:url . "https://github.com/Omnisharp/omnisharp-emacs") (:keywords "languages" "csharp" "c#" "ide" "auto-complete" "intellisense"))]) (omniref . [(20160225 1424) nil "Omniref Ruby documentation search engine interface" single ((:commit . "cc18a41e9717bae439d66c945788e3e19b4624ad") (:url . "http://github.org/dotemacs/omniref.el") (:keywords "docs" "help" "tools"))]) (omni-tags . [(20170426 1409) ((pcre2el (1 7)) (cl-lib (0 5))) "Highlight and Actions for 'Tags'" tar ((:commit . "8f0f6c302fab900b7681e5c039f90850cbbabd33") (:url . "http://github.com/AdrieanKhisbe/omni-tags.el") (:keywords "convenience"))]) (omni-scratch . [(20170416 329) nil "Easy and mode-specific draft buffers" single ((:commit . "0da549c1386f93ed4de201bf8779ba64ddc91347") (:url . "https://github.com/AdrieanKhisbe/omni-scratch.el") (:keywords "convenience" "languages" "tools"))]) (omni-quotes . [(20170425 1132) ((dash (2 8)) (omni-log (0 3 3)) (f (0 19 0)) (s (1 11 0)) (ht (2 1))) "Random quotes displayer" tar ((:commit . "454116c1dd6581baaeefd6b9310b1b6b7a5c36d0") (:url . "https://github.com/AdrieanKhisbe/omni-quotes.el") (:keywords "convenience"))]) (omni-log . [(20170420 407) ((emacs (24)) (ht (2 0)) (s (1 6 1)) (dash (2 13 0))) "Logging utilities" tar ((:commit . "60fd1b7ba77bd82787e43ce1aee2832f53981c68") (:url . "https://github.com/AdrieanKhisbe/omni-log.el") (:keywords "convenience" "languages" "tools"))]) (omni-kill . [(20150526 2349) nil "Kill all the things" single ((:commit . "4c8dbb6b2c9f1afc0f82077c04eab022e5387e85") (:keywords "convenience" "editing" "tools"))]) (om-mode . [(20140915 1410) nil "Insert Om component template with life cycle." single ((:commit . "cdc0c2912321f8438b0f3449ba8aca50ec150bba") (:keywords "clojurescript"))]) (olivetti . [(20160912 1758) nil "Minor mode for a nice writing environment" single ((:commit . "de2716cfb1f4dc82a08093cdd00200e9bb1f07ef") (:keywords "wp"))]) (oldlace-theme . [(20150705 600) ((emacs (24))) "Emacs 24 theme with an 'oldlace' background." single ((:commit . "5c6f437203b0783b36a7aff4a578de4a0c8c4ee6"))]) (offlineimap . [(20150916 458) nil "Run OfflineIMAP from Emacs" single ((:commit . "cc3e067e6237a1eb7b21c575a41683b1febb47f1") (:url . "http://julien.danjou.info/offlineimap-el.html"))]) (octopress . [(20161222 343) nil "A lightweight wrapper for Jekyll and Octopress." tar ((:commit . "85bab12adbd985767233eb1622c4b8f7c1fe7e1a") (:url . "https://github.com/aaronbieber/octopress.el") (:keywords "octopress" "blog"))]) (octo-mode . [(20161008 529) ((emacs (24))) "Major mode for Octo assembly language" single ((:commit . "bd4db7e5e3275b24c74e6a23c11d04f54e9feca5") (:url . "https://github.com/cryon/octo-mode") (:keywords "languages"))]) (octicons . [(20151031 2040) ((cl-lib (0 5))) "octicons utility" tar ((:commit . "a61e561966ffd8faa3b48ce5b3a4eec10c59708b") (:url . "https://github.com/syohex/emacs-octicons"))]) (ocp-indent . [(20170412 12) nil "automatic indentation with ocp-indent" single ((:commit . "d3f250b6029a7afec0d7ddd8770d9c4a7e5b9c7c") (:url . "http://www.typerex.org/ocp-indent.html") (:keywords "ocaml" "languages"))]) (ocodo-svg-modelines . [(20150516 719) ((svg-mode-line-themes (0))) "A collection of beautiful SVG modelines" tar ((:commit . "c7b0789a177219f117c4de5659ecfa8622958c40"))]) (oceanic-theme . [(20161015 119) nil "Oceanic theme." single ((:commit . "a92ee9b470843c923e6cdcafdd65106ff994d04d") (:url . "https://github.com/terry3/oceanic-theme") (:keywords "oceanic" "color" "theme"))]) (occur-x . [(20130610 643) nil "Extra functionality for occur" single ((:commit . "352f5fab207d8a1d3dd048073ff127a83e97c82b") (:keywords "occur" "search" "convenience"))]) (occur-context-resize . [(20151227 2002) nil "dynamically resize context around matches in occur-mode" single ((:commit . "36e69b9d3b7c6de884a8e8822d67856b78a07f4f") (:url . "https://github.com/dgtized/occur-context-resize.el") (:keywords "matching"))]) (occidental-theme . [(20130312 1258) nil "Custom theme for faces based on Adwaita" single ((:commit . "fd2db7256d4f78c43d99c3cddb1c39106d479816") (:url . "http://github.com/olcai/occidental-theme"))]) (obsidian-theme . [(20140420 943) nil "port of the eclipse obsidian theme" single ((:commit . "0f92ce87245529d5c75d6e5f7862ebbc54bdbc92") (:url . "http://github.com/mswift42/obsidian-theme"))]) (objc-font-lock . [(20141021 1122) nil "Highlight Objective-C method calls." single ((:commit . "34b457d577f97ca94b8792d025f9a909c7610612") (:url . "https://github.com/Lindydancer/objc-font-lock") (:keywords "languages" "faces"))]) (obfusurl . [(20170325 802) ((cl-lib (0 5))) "Obfuscate URLs so they aren't spoilers" single ((:commit . "96c619fe4753062af93a12f44b67ba8aed22f2fb") (:url . "https://github.com/davep/obfusurl.el") (:keywords "convenience" "web" "text"))]) (oberon . [(20120715 209) nil "Major mode for editing Oberon/Oberon-2 program texts" single ((:commit . "fb57d18ce13835a8a69b6bafecdd9193ca9a59a3") (:keywords "oberon" "oberon-2" "languages" "oop"))]) (ob-uart . [(20170521 158) nil "org-babel support for UART communication" single ((:commit . "90daeac90a9e75c20cdcf71234c67b812110c50e") (:url . "https://www.0x7.ch") (:keywords "tools" "comm" "org-mode" "uart" "literate programming" "reproducible development"))]) (ob-typescript . [(20150804 530) ((emacs (24)) (org (8 0))) "org-babel functions for typescript evaluation" single ((:commit . "9dcbd226cbfb75e790dd9de91d9401dde85a889a") (:url . "https://github.com/lurdan/ob-typescript") (:keywords "literate programming" "reproducible research" "typescript"))]) (ob-translate . [(20160411 124) ((google-translate (0 11)) (org (8))) "Translation of text blocks in org-mode." single ((:commit . "bba3bd1e2dbb5c672543129460c2713f78b26120") (:url . "https://github.com/krisajenkins/ob-translate") (:keywords "org" "babel" "translate" "translation"))]) (ob-swift . [(20151204 2311) ((org (8))) "org-babel functions for swift evaluation" single ((:commit . "f376af0d86fb410e41289df59a0c2625954c9067") (:url . "http://github.com/zweifisch/ob-swift") (:keywords "org" "babel" "swift"))]) (ob-sql-mode . [(20170213 1056) ((emacs (24 3))) "SQL code blocks evaluated by sql-mode" single ((:commit . "778232af7c87b6a32ecb3668a9e5a2763d6a4830") (:url . "http://github.com/nikclayton/ob-sql-mode") (:keywords "languages" "org" "org-babel" "sql"))]) (ob-spice . [(20160815 2249) ((spice-mode (0 0 1)) (org (8))) "org-babel functions for spice evaluation" single ((:commit . "0ea589f852de4b1eb239c985be9f960367aa5c1a") (:url . "http://tiagoweber.github.io"))]) (ob-sml . [(20130829 1143) ((sml-mode (6 4))) "org-babel functions for template evaluation" single ((:commit . "958165c92b6cff6cada5c85c8ae5887806b8451b") (:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research"))]) (ob-smiles . [(20160717 421) ((smiles-mode (0 0 1)) (org (8))) "Org-mode Babel support for SMILES." single ((:commit . "c23c318bf8bbe2e266967388221893fbecdd2fd5") (:keywords "org" "babel" "smiles"))]) (ob-sagemath . [(20170130 1833) ((sage-shell-mode (0 0 8)) (s (1 8 0)) (emacs (24))) "org-babel functions for SageMath evaluation" tar ((:commit . "68d3e516c712bc7aa5042f305f3eb5bbb6d656c2") (:url . "https://github.com/stakemori/ob-sagemath") (:keywords "sagemath" "org-babel"))]) (ob-rust . [(20170619 802) nil "org-babel functions for rust evaluation" tar ((:commit . "126ee38c6f560cac2ea6bbef034f92ff948d2664") (:url . "http://orgmode.org") (:keywords "rust" "languages" "org" "babel"))]) (ob-restclient . [(20160323 2305) ((restclient (0))) "org-babel functions for restclient-mode" single ((:commit . "08b82b9ea668631968ae4fb531fd74494630f840") (:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research"))]) (ob-redis . [(20160411 2013) ((org (8))) "Execute Redis queries within org-mode blocks." single ((:commit . "244a21569499a3d8cb39f651fbf00ce26accf983") (:url . "https://github.com/stardiviner/ob-redis") (:keywords "org" "babel" "redis"))]) (ob-prolog . [(20170126 921) nil "org-babel functions for prolog evaluation." single ((:commit . "e70a9f9b96fd0fedcc30de7768c870f4b0ee1ae9") (:url . "https://github.com/ljos/ob-prolog") (:keywords "literate programming" "reproducible research"))]) (ob-php . [(20160505 219) ((org (8))) "Execute PHP within org-mode blocks." single ((:commit . "fd30c5e945a08b605725cf51808b3512ca885777") (:url . "https://github.com/stardiviner/ob-php") (:keywords "org" "babel" "php"))]) (ob-nim . [(20160830 220) ((cl-lib (0 5))) "Babel Functions for nim" single ((:commit . "050b165817e62067b0d686d96e25bc12fb9c7d84") (:keywords "literate programming" "reproducible research"))]) (ob-mongo . [(20161130 152) ((org (8))) "Execute mongodb queries within org-mode blocks." single ((:commit . "d64a507c2f9e2a1f8062acae50199541fc23be65") (:url . "https://github.com/krisajenkins/ob-mongo") (:keywords "org" "babel" "mongo" "mongodb"))]) (ob-ml-marklogic . [(20170622 1133) nil "org-babel functions for MarkLogic evaluation" tar ((:commit . "f678af0f440b3030e311ed6fbc444200be04da91") (:url . "http://github.com/ndw/ob-ml-marklogic") (:keywords "marklogic" "xquery" "javascript" "sparql"))]) (ob-lfe . [(20150701 655) ((org (8))) "org-babel functions for lfe evaluation" single ((:commit . "d50a5d76e389501504e060a7005f20b96c895594") (:url . "http://github.com/zweifisch/ob-lfe") (:keywords "org" "babel" "lfe" "lisp" "erlang"))]) (ob-kotlin . [(20170624 2050) ((org (8))) "org-babel functions for kotlin evaluation" single ((:commit . "ebbd3fcd52a80c0579e896ad3cbb1484d0a55d00") (:url . "http://github.com/zweifisch/ob-kotlin") (:keywords "org" "babel" "kotlin"))]) (ob-ipython . [(20170628 1116) ((s (1 9 0)) (dash (2 10 0)) (dash-functional (1 2 0)) (f (0 17 2)) (emacs (24))) "org-babel functions for IPython evaluation" tar ((:commit . "a0ae4add0310d131c6b4b15139b929955cec93dd") (:url . "http://www.gregsexton.org") (:keywords "literate programming" "reproducible research"))]) (ob-http . [(20170411 1842) ((s (1 9 0)) (cl-lib (0 5))) "http request in org-mode babel" tar ((:commit . "5fd0e99630e07c5e64f2483c6d46aefdd37677d2") (:url . "http://github.com/zweifisch/ob-http"))]) (ob-go . [(20170324 932) nil "org-babel functions for go evaluation" tar ((:commit . "1f582d5c16ff032207a40d49be0727190a227912") (:url . "http://orgmode.org") (:keywords "golang" "go" "literate programming" "reproducible research"))]) (ob-fsharp . [(20170618 729) ((fsharp-mode (1 9 8)) (emacs (25))) "Org-Babel F#" tar ((:commit . "65ec2b626ac55313d8a04e746940370f615fed1e"))]) (ob-elixir . [(20151021 447) ((org (8))) "org-babel functions for elixir evaluation" single ((:commit . "d0e8007efa0b99ab7a6e4cb7160a87d6cb60d210") (:url . "http://github.com/zweifisch/ob-elixir") (:keywords "org" "babel" "elixir"))]) (ob-diagrams . [(20160407 537) nil "org-babel functions for diagrams evaluation" single ((:commit . "ed6649616325ca5b2d2109f74aded8bcb8aa5186") (:url . "http://orgmode.org") (:keywords "literate programming" "reproducible research"))]) (ob-dart . [(20170106 824) nil "org-babel functions for Dart evaluation" single ((:commit . "2e463d83a3fe1c9c86f2040e0d22c06dfa49ecbf") (:url . "http://github.org/mzimmerm/ob-dart") (:keywords "literate programming" "reproducible research" "emacs" "org" "babel" "dart"))]) (ob-cypher . [(20150224 1837) ((s (1 9 0)) (cypher-mode (0 0 6)) (dash (2 10 0)) (dash-functional (1 2 0))) "query neo4j using cypher in org-mode blocks" single ((:commit . "b3511df05f175c1947996802e9e199432ea9ced8") (:url . "http://github.com/zweifisch/ob-cypher") (:keywords "org" "babel" "cypher" "neo4j"))]) (ob-coffee . [(20160415 2036) ((org (8))) "org-babel functions for coffee-script evaluation" tar ((:commit . "dbfa5827df91ed1cdc5b0f3247da6b93fa632507") (:url . "http://github.com/zweifisch/ob-coffee") (:keywords "org" "babel" "coffee-script"))]) (ob-browser . [(20150101 710) ((org (8))) "Render HTML in org-mode blocks." tar ((:commit . "9271453d28d0912093ab5f91807745ada69ada0c") (:url . "https://github.com/krisajenkins/ob-browser") (:keywords "org" "babel" "browser" "phantomjs"))]) (ob-blockdiag . [(20170524 1605) nil "org-babel functions for blockdiag evaluation" single ((:commit . "715e7d41124a98d3f1e38e430e3a7f31b52704e4") (:url . "https://github.com/corpix/ob-blockdiag.el") (:keywords "tools" "convenience"))]) (ob-axiom . [(20161122 1222) ((emacs (24 2)) (axiom-environment (20150801))) "org-babel for the axiom-environment system" single ((:keywords "axiom" "openaxiom" "fricas"))]) (ob-async . [(20170624 1810) ((async (1 9)) (org (9 0 1))) "Asynchronous org-babel src block execution" single ((:commit . "fc0020e515fe156fdda7fbf47f12c4b00029d44b") (:url . "https://github.com/astahlman/ob-async") (:keywords "tools"))]) (ob-applescript . [(20160914 1327) nil "org-babel functions for template evaluation" single ((:commit . "bc708af6cf45707d4e8d8f00ea59a7e413bfaca7") (:url . "http://github.com/stig/ob-applescript.el") (:keywords "literate programming" "reproducible research" "mac"))]) (oauth . [(20130127 1751) nil "Oauth library." tar ((:commit . "ee4744ad76a1560281b0c4944575a3bd598c6458") (:keywords "comm"))]) (o-blog . [(20151202 1539) nil "Standalone orgmode blog exporter" tar ((:commit . "e466c59478feddc8126c43c1b98550474af484c0") (:keywords "emacs"))]) (nyan-prompt . [(20140809 2208) nil "Nyan Cat on the eshell prompt." tar ((:commit . "b5137f2ee9afe640f59786eed17b308df6356c73") (:url . "http://github.com/PuercoPop/nyan-prompt") (:keywords "nyan" "cat" "lulz" "eshell" "rainbow dependencies ((rx 0))"))]) (nyan-mode . [(20170423 40) nil "Nyan Cat shows position in current buffer in mode-line." tar ((:commit . "4195cd368aca8f05a71cbff4e60cfa9dde10319a") (:url . "https://github.com/TeMPOraL/nyan-mode/") (:keywords "nyan" "cat" "lulz" "scrolling" "pop tart cat" "build something amazing"))]) (nvm . [(20170513 1501) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (dash-functional (2 4 0))) "Manage Node versions within Emacs" single ((:commit . "61590e7fdeb19b1d866d26e48aef1af4767e5709") (:url . "http://github.com/rejeep/nvm.el") (:keywords "node" "nvm"))]) (nv-delete-back . [(20170224 449) ((emacs (24))) "backward delete like modern text editors" single ((:commit . "44d506105989873dc1725e0cfc675925b35c9c98") (:keywords "lisp"))]) (nummm-mode . [(20131117 214) nil "Display the number of minor modes instead of their names" single ((:commit . "81951e12032274543c5f7a585b29bd93961e94e4") (:url . "http://github.com/agpchil/nummm-mode"))]) (number-lock . [(20160829 1900) nil "Enter symbols on your number keys without pressing shift" single ((:commit . "74417b1238953bf485961a0dd7d20f5c36ae25ea") (:url . "https://github.com/Liu233w/number-lock.el") (:keywords "convenience"))]) (number . [(20141127 1004) nil "Working with numbers at point." single ((:commit . "f483365c330392b3e9362481b145acf3db040baf"))]) (nubox . [(20170619 210) nil "Nubox color theme (dark, light and tty versions)" tar ((:commit . "84aa965f0cb4bde293237e4cc586643d1f662f83") (:keywords "faces"))]) (nu-mode . [(20160520 614) ((undo-tree (0 6 5)) (transpose-frame (0)) (helm (20140902 1005))) "Modern Emacs Prompts Based Keybinding." tar ((:commit . "347f6c958f20d6e8e46bc7122556405b3a434242"))]) (nsis-mode . [(20150914 546) nil "NSIS-mode" tar ((:commit . "5ea767c326bbe180e42be723605c0b03b16fdb06") (:url . "http://github.com/mlf176f2/nsis-mode") (:keywords "nsis"))]) (nrepl-sync . [(20140807 854) ((cider (0 6))) "connect to nrepl port and eval .sync.clj." single ((:commit . "bab53a2361526d63a24cda176d07a1247bf5b399") (:url . "https://github.com/phillord/lein-sync"))]) (nrepl-eval-sexp-fu . [(20140311 341) ((highlight (0 0 0)) (smartparens (0 0 0)) (thingatpt (0 0 0))) "Tiny functionality enhancements for evaluating sexps." single ((:commit . "3a24b7d4bca13e87c987a4ddd212da914ff59191") (:keywords "lisp" "highlight" "convenience"))]) (npm-mode . [(20160706 1129) ((emacs (24 1))) "minor mode for working with npm projects" single ((:commit . "63a5c306f6e8d53f043471eb8ea734f00ca998c4") (:url . "https://github.com/mojochao/npm-mode") (:keywords "convenience" "project" "javascript" "node" "npm"))]) (noxml-fold . [(20170520 545) nil "Fold away XML things." single ((:commit . "41cd645531783982e03cb1af2fc2acd59c88f6cb") (:url . "https://github.com/paddymcall/noxml-fold") (:keywords "xml" "folding"))]) (novice+ . [(20170307 925) nil "Extensions to `novice.el'." single ((:url . "https://www.emacswiki.org/emacs/download/novice%2b.el") (:keywords "internal" "help"))]) (notmuch-labeler . [(20131230 919) ((notmuch (0))) "Improve notmuch way of displaying labels" tar ((:commit . "d65d1129555d368243df4770ecc1e7ccb88efc58") (:url . "https://github.com/DamienCassou/notmuch-labeler") (:keywords "emacs" "package" "elisp" "notmuch" "emails"))]) (notmuch . [(20170630 455) nil "run notmuch within emacs" tar ((:commit . "6dd00d64863dfc0563877ca7899231b8c3058c49") (:url . "https://notmuchmail.org/"))]) (nose . [(20140520 948) nil "Easy Python test running in Emacs" single ((:keywords "nose" "python" "testing"))]) (nord-theme . [(20170506 2351) ((emacs (24))) "An arctic, north-bluish clean and elegant theme" single ((:commit . "8962f7c77f2a27c0e0b649653c212fa310cce130") (:url . "https://github.com/arcticicestudio/nord-emacs"))]) (noflet . [(20141102 654) nil "locally override functions" single ((:commit . "7ae84dc3257637af7334101456dafe1759c6b68a") (:url . "https://github.com/nicferrier/emacs-noflet") (:keywords "lisp"))]) (nodejs-repl . [(20170607 1303) nil "Run Node.js REPL" single ((:commit . "f72a537700b08e14db28e6bcc1d6244bbeaefca4"))]) (node-resolver . [(20140930 1023) ((cl-lib (0 5))) "hook to install node modules in background" single ((:commit . "ef9d0486907a746a80b02ffc6208a09c168a9f7c") (:url . "https://github.com/meandavejustice/node-resolver.el") (:keywords "convenience" "nodejs" "javascript" "npm"))]) (noctilux-theme . [(20161113 642) ((emacs (24))) "Dark theme inspired by LightTable" single ((:commit . "a3265a1be7f4d73f44acce6d968ca6f7add1f2ca") (:url . "https://github.com/sjrmanning/noctilux-theme"))]) (nocomments-mode . [(20170213 1237) nil "Minor mode that makes comments invisible." single ((:commit . "5a41a20cc44dfe4a9ea584354ed6dbc15dd92f46") (:url . "https://github.com/Lindydancer/nocomments-mode"))]) (noccur . [(20150514 1420) nil "Run multi-occur on project/dired files" single ((:commit . "6cc02ce07178a61ae38a849f80472c01969272bc") (:keywords "convenience"))]) (no-littering . [(20170702 457) ((cl-lib (0 5))) "help keeping ~/.emacs.d clean" single ((:commit . "8b689a1e16d4825d0221f4a41756b63bbc361c82") (:url . "https://github.com/tarsius/no-littering"))]) (nnir-est . [(20140301 602) nil "Gnus nnir interface for HyperEstraier" single ((:commit . "ba263fbd872fe05cfa6b3d815c0d98cdbe24b687") (:url . "https://github.com/kawabata/nnir-est") (:keywords "mail"))]) (nm . [(20151110 1110) ((notmuch (0 21)) (peg (0 6)) (company (0)) (emacs (24 3))) "NEVERMORE: an email interface for Notmuch" tar ((:commit . "5a3f29174b3a4b2b2e7a700a862f3b16a942687e") (:url . "https://github.com/tjim/nevermore"))]) (nlinum-relative . [(20160526 8) ((emacs (24 4)) (nlinum (1 5))) "Relative line number with nlinum" single ((:commit . "5b9950c97ba79a6f0683e38b13da23f39e01031c") (:keywords "convenience"))]) (nlinum-hl . [(20170613 1748) ((emacs (24 4)) (nlinum (1 7)) (cl-lib (0 5))) "heal nlinum's line numbers" single ((:commit . "46e26d1e3d5bfe9a3f79a5cce21f3c442ac10da8") (:url . "https://github.com/hlissner/emacs-nlinum-hl") (:keywords "nlinum" "highlight" "current" "line" "faces"))]) (nixos-options . [(20160209 1041) ((emacs (24))) "Interface for browsing and completing NixOS options." single ((:commit . "ace629f7645d12778c96ff7b5cf4b1e41a98af29") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (nix-sandbox . [(20170131 241) ((dash (2 12 1)) (s (1 10 0))) "Utility functions to work with nix-shell sandboxes" single ((:commit . "ace629f7645d12778c96ff7b5cf4b1e41a98af29") (:url . "https://github.com/travisbhartwell/nix-emacs"))]) (nix-mode . [(20160502 637) nil "Major mode for editing Nix expressions" single ((:commit . "63d6e0ad3f0a93305cebc870dbb3639506727b27") (:url . "https://github.com/NixOS/nix/tree/master/misc/emacs"))]) (nix-buffer . [(20170520 553) ((f (0 17 3)) (emacs (24 4))) "Set up buffer environments with nix" single ((:commit . "749f48b510d0fd47dac67850f4089119fbff142a") (:url . "https://github.com/shlevy/nix-buffer/tree/master/"))]) (ninja-mode . [(20141203 2159) ((emacs (24))) "Major mode for editing .ninja files" single ((:commit . "7bbc708ff08f5660f4cff4b3e8c675bec428a1f2"))]) (nimbus-theme . [(20170412 758) nil "An awesome dark theme" single ((:commit . "ce999b8d152b9b15d75f66fe22b84827167c8311") (:url . "https://github.com/m-cat/nimbus-theme") (:keywords "faces"))]) (nim-mode . [(20170409 1737) ((emacs (24 4)) (epc (0 1 1)) (let-alist (1 0 1)) (commenter (0 5 1)) (flycheck (28))) "A major mode for the Nim programming language" tar ((:commit . "58707562dd29c7a9f36e96a8e894caec90ce1e41") (:keywords "nim" "languages"))]) (nikola . [(20170301 1148) ((async (1 5)) (emacs (24 3))) "Simple wrapper for nikola" single ((:commit . "6752cc70b08889ff5184ac111616863f1881d357") (:url . ": https://git.daemons.cf/drymer/nikola.el") (:keywords ":" "nikola"))]) (niflheim-theme . [(20150630 821) nil "A port of the Nifleim theme to Emacs" single ((:commit . "5265e89164132fbdbc13146a79f0abce78bd0c5e") (:url . "https://github.com/niflheim-theme/emacs") (:keywords "themes"))]) (niconama . [(20160703 802) ((emacs (24)) (request (0 2 0)) (cl-lib (0 5))) "Tools for Niconico Live Broadcast" single ((:commit . "533559931670d49e930dfe4d19bc7a182dbbd3a8") (:url . "https://github.com/NOBUTOKA/niconama.el") (:keywords "comm"))]) (niceify-info . [(20160416 544) nil "improve usability of Info pages" single ((:commit . "38df5062bc3b99d1074cab3e788b5ed66732111c"))]) (nginx-mode . [(20170611 2137) nil "major mode for editing nginx config files" single ((:commit . "a2bab83c2eb233d57d76b236e7c141c2ccc97005") (:keywords "languages" "nginx"))]) (ng2-mode . [(20170504 2007) ((typescript-mode (0 1))) "Major modes for editing Angular 2" tar ((:commit . "adbfe16a47cf26edeb1b508cbedae5307b4efbf6") (:url . "http://github.com/AdamNiederer/ng2-mode") (:keywords "typescript" "angular" "angular2" "template"))]) (nexus . [(20140114 505) nil "REST Client for Nexus Maven Repository servers" tar ((:commit . "c46f499951b90839aa8683779fe43d8f01672a60") (:keywords "comm"))]) (newlisp-mode . [(20160226 745) nil "newLISP editing mode for Emacs" single ((:commit . "ac23be40c81a360988ab803d365f1510733f6db4") (:url . "https://github.com/kosh04/newlisp-mode") (:keywords "language" "lisp" "newlisp"))]) (never-comment . [(20140104 1407) nil "Never blocks are comment" single ((:commit . "74ded8f1e7f23240f5f6032d0451fb0a51733bc4") (:url . "http://stackoverflow.com/a/4554658/89376"))]) (netrunner . [(20160910 1632) ((popup (0 5 3)) (company (0 9 0)) (helm (1 9 5))) "Create Android: Netrunner decklists using Company, Helm and org-mode" single ((:commit . "c64672992175c8c1073c0f56c2e471839db71a0f") (:url . "http://github.com/Kungsgeten/netrunner") (:keywords "games"))]) (netherlands-holidays . [(20150202 817) nil "Netherlands holidays for Emacs calendar." single ((:commit . "26236178cdd650df9958bf5a086e184096559f00") (:url . "https://github.com/abo-abo/netherlands-holidays") (:keywords "calendar"))]) (neotree . [(20170522 758) ((cl-lib (0 5))) "A tree plugin like NerdTree for Vim" tar ((:commit . "bc98dfb44c106375efa4f26848f3790ee264da97") (:url . "https://github.com/jaypei/emacs-neotree"))]) (neon-mode . [(20170630 245) nil "Simple major mode for editing neon files" single ((:commit . "044040df9e83a015ddfe58940b503b6197fc29ce") (:keywords "conf"))]) (nemerle . [(20161029 1323) nil "major mode for editing nemerle programs" single ((:commit . "d0777b677c50714415174e407a321efc1e9bfdae") (:keywords "nemerle" "mode" "languages"))]) (nclip . [(20130617 1315) nil "Network (HTTP) Clipboard" tar ((:commit . "af88e38b1f04be02bf2e57affc662dbd0f828e67") (:url . "http://www.github.com/maio/nclip.el") (:keywords "nclip" "clipboard" "network"))]) (ncl-mode . [(20170121 231) ((emacs (24))) "Major Mode for editing NCL scripts and other goodies" tar ((:commit . "cfabbbf5e49a856c9b4cb32408f28ef4378731b5"))]) (navorski . [(20141203 1024) ((s (1 9 0)) (dash (1 5 0)) (multi-term (0 8 14))) "Helping you live in the terminal, like Viktor did." single ((:commit . "698c1c62da70164aebe9a7a5d034778fbc30ea5b") (:keywords "terminal"))]) (navi2ch . [(20150329 1916) nil "Navigator for 2ch for Emacsen" tar ((:commit . "f39d93c32acd5b9c3a7fb1a9fe14c5e1c4b5288e") (:keywords "network" "2ch"))]) (navi-mode . [(20170414 1228) ((outshine (2 0)) (outorg (2 0))) "major-mode for easy buffer-navigation" single ((:commit . "c1d38e8237f4e14af020a0b7d4f118ea198ab674") (:url . "https://github.com/alphapapa/navi"))]) (nav-flash . [(20140508 1341) nil "Briefly highlight the current line" single ((:commit . "53f5bc59e3f32c1192d15637d3979732dacb2c35") (:url . "http://github.com/rolandwalker/nav-flash") (:keywords "extensions" "navigation" "interface"))]) (nav . [(20120507 7) nil "Emacs mode for filesystem navigation" tar ((:commit . "c5eb234c063f435dbdcd1f8bdc46cfc68c973ebe"))]) (nasm-mode . [(20161216 736) ((emacs (24 3))) "NASM x86 assembly major mode" single ((:commit . "d990ed94d902b74a5c834fb567e03307607cee45") (:url . "https://github.com/skeeto/nasm-mode"))]) (nash-mode . [(20160830 512) nil "Nash major mode" single ((:commit . "2cd96535eb7d669a94306183e95ee37333872c1a") (:url . "https://github.com/tiago4orion/nash-mode.el") (:keywords "nash" "languages"))]) (narrowed-page-navigation . [(20150108 2119) ((emacs (24)) (cl-lib (0 5))) "A minor mode for showing one page at a time" single ((:commit . "b215adbac4873f56fbab65772062f0f5be8058a1") (:keywords "outlines"))]) (narrow-reindent . [(20150722 1206) ((emacs (24 4))) "Defines a minor mode to left-align narrowed regions." single ((:commit . "87466aac4dbeb79597124dd077bf5c704872fd3d") (:url . "https://github.com/emallson/narrow-reindent.el"))]) (narrow-indirect . [(20170307 921) nil "Narrow using an indirect buffer that is a clone" single ((:url . "https://www.emacswiki.org/emacs/download/narrow-indirect.el") (:keywords "narrow" "indirect" "buffer" "clone" "view" "multiple-modes"))]) (naquadah-theme . [(20160819 121) nil "A theme based on Tango color set" single ((:commit . "37e822ccea0ff4a6eb79ea6615a1fd6dc6c72d51"))]) (nanowrimo . [(20151104 1828) nil "Track progress for nanowrimo" single ((:url . "https://bitbucket.org/gvol/nanowrimo-mode"))]) (nand2tetris-assembler . [(20161109 1637) ((nand2tetris (1 0 0))) "Assembler For the Nand2tetris Course" single ((:commit . "9f7c605a1d030aed933e86b45c9f7232dbbcfb6e") (:url . "http://www.github.com/CestDiego/nand2tetris-assembler.el/") (:keywords "nand2tetris-assembler" "hdl"))]) (nand2tetris . [(20170306 1827) ((emacs (24))) "Major mode for HDL files in the nand2tetris course" tar ((:commit . "9f7c605a1d030aed933e86b45c9f7232dbbcfb6e") (:url . "http://www.github.com/CestDiego/nand2tetris.el/") (:keywords "nand2tetris" "hdl"))]) (namespaces . [(20130326 1550) nil "An implementation of namespaces for Elisp, with an emphasis on immutabilty." single ((:commit . "3d02525d9b9a5ae6e7be3adefd880121436e6270") (:url . "https://github.com/chrisbarrett/elisp-namespaces"))]) (names . [(20151201 404) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar ((:commit . "65b577b1215c4cfaee1ed5e98b0545e9ef7b9964") (:url . "https://github.com/Malabarba/names") (:keywords "extensions" "lisp"))]) (nameless . [(20161012 1214) ((emacs (24 4))) "Hide package namespace in your emacs-lisp code" single ((:commit . "ab1a5c589378334eafca105af1a17f73b9065423") (:url . "https://github.com/Malabarba/nameless") (:keywords "convenience" "lisp"))]) (nameframe-projectile . [(20160927 2103) ((nameframe (0 4 1 -2)) (projectile (0 13 0))) "Nameframe integration with Projectile" single ((:commit . "d14186e99fa800d293e8e3072ba26f383c6624c6") (:url . "https://github.com/john2x/nameframe"))]) (nameframe-perspective . [(20170405 1819) ((nameframe (0 4 1 -2)) (perspective (1 12))) "Nameframe integration with perspective.el" single ((:commit . "d14186e99fa800d293e8e3072ba26f383c6624c6") (:url . "https://github.com/john2x/nameframe"))]) (nameframe . [(20160927 2103) nil "Manage frames by name." single ((:commit . "d14186e99fa800d293e8e3072ba26f383c6624c6") (:url . "https://github.com/john2x/nameframe"))]) (name-this-color . [(20151014 1330) ((emacs (24)) (cl-lib (0 5)) (dash (2 11 0))) "Match RGB codes to names easily and precisely" single ((:commit . "e37cd1291d5d68d4c8d6386eab9cb9d94fd3bcfa") (:url . "https://github.com/knl/name-this-color.el") (:keywords "lisp" "color" "hex" "rgb" "shade" "name"))]) (naked . [(20170418 1822) nil "Provide for naked key descriptions: no angle brackets." single ((:url . "https://www.emacswiki.org/emacs/download/naked.el") (:keywords "lisp" "key" "print" "format" "help"))]) (n4js . [(20150713 1931) ((emacs (24)) (cypher-mode (0))) "Neo4j Shell" single ((:commit . "3991ed8975151d5e8d568e952362df810f7ffab7") (:url . "https://github.com/tmtxt/n4js.el") (:keywords "neo4j" "shell" "comint"))]) (n3-mode . [(20141027 1057) nil "mode for Notation 3" single ((:commit . "0145e7938c30183edb03a55a4f16390dabd191ec"))]) (myterminal-controls . [(20170425 1936) ((emacs (24)) (cl-lib (0 5))) "Quick toggle controls at a key-stroke" single ((:commit . "3edcef051f882342ca769b84527bf92dfb755e14") (:url . "http://ismail.teamfluxion.com") (:keywords "convenience" "shortcuts"))]) (mysql2sqlite . [(20151123 1339) nil "Convert mysql databases into sqlite databases." single ((:commit . "07415c5fcd895ebccf1b774d0eab175f2700652f"))]) (mysql-to-org . [(20170205 1306) ((emacs (24 3)) (s (1 11 0))) "Minor mode to output the results of mysql queries to org tables" single ((:commit . "d87e9b6117fc0db4b156e8a12550cf9ee4bd692a"))]) (mynt-mode . [(20150512 1349) ((virtualenvwrapper (20131514))) "Minor mode to work with the mynt static site generator" single ((:commit . "23d4489167bfa899634548cb41ed32fdeb3600c9") (:url . "https://github.com/crshd/mynt-mode") (:keywords "convenience"))]) (mykie . [(20150808 1505) ((emacs (24 3)) (cl-lib (0 5))) "Command multiplexer: Register multiple functions to a keybind" tar ((:commit . "7676f0e883af1d1054e404e97691f3c13aba196f") (:url . "https://github.com/yuutayamada/mykie-el") (:keywords "emacs" "configuration" "keybind"))]) (myanmar-input-methods . [(20160106 737) nil "Emacs Input Method for Myanmar" single ((:commit . "9d4e0d6358c61bde7a2274e430ef71683faea32e") (:url . "http://github.com/yelinkyaw/emacs-myanmar-input-methods") (:keywords "myanmar" "unicode" "keyboard"))]) (mwim . [(20161004 647) nil "Switch between the beginning/end of line or code" single ((:commit . "e53da113b88a7e0693fd8f91862ce5948ad80a5b") (:url . "https://github.com/alezost/mwim.el") (:keywords "convenience"))]) (mwe-log-commands . [(20100703 541) nil "log keyboard commands to buffer" single ((:commit . "8253f2a311f35b03f72a035744f0cbdd776ea17e") (:keywords "help"))]) (mvn . [(20160211 743) nil "helpers for compiling with maven" single ((:commit . "8a65b4eb88c9801aa3bff1921b600c72dfb8791a") (:url . "https://github.com/apgwoz/mvn-el") (:keywords "compilation" "maven" "java"))]) (muttrc-mode . [(20090804 1552) nil "Major mode to edit muttrc under Emacs" single nil]) (mutant . [(20160124 553) ((emacs (24 4)) (dash (2 1 0))) "An interface for the Mutant testing tool" single ((:commit . "de9cdefe48c880128a8f62c6699d7416e9c8ced1") (:url . "http://github.com/p-lambert/mutant.el") (:keywords "mutant" "testing"))]) (mustard-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Mustard (tmTheme)" single ((:commit . "33bc6e3a0e2abc5668afdb349bca7e8b5730582c") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (mustang-theme . [(20141017 1623) nil "port of vim's mustang theme" single ((:commit . "79c3381dd50601775402fe2fddd16fffa9218837") (:url . "http://github.com/mswift42/mustang-theme"))]) (mustache-mode . [(20141024 732) nil "A major mode for editing Mustache files." single ((:commit . "bf9897eb287ca47ced65d7d4e07ea61ea0aec39f"))]) (mustache . [(20131117 1407) ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) "a mustache templating library in emacs lisp" tar ((:commit . "b0ea352813592424164520a49e86c04600242752"))]) (multitran . [(20161122 1323) ((emacs (24)) (cl-lib (0 5))) "Interface to multitran" single ((:commit . "c0ce2e1b3706263946f9240a47c3f65ed4fc0afa") (:keywords "dictionary" "hypermedia"))]) (multiple-cursors . [(20170215 552) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar ((:commit . "ddbe3ae932b6564c7429c3b2507510093ed1f3aa"))]) (multifiles . [(20130615 1433) nil "View and edit parts of multiple files in one buffer" single ((:commit . "dddfe64b8e1c1cd1f9ccc1f03405477fc0d53897") (:keywords "multiple" "files"))]) (multicolumn . [(20150202 1451) nil "Creating and managing multiple side-by-side windows." single ((:commit . "c7a3afecd470859b2e60aa7c554d6e4d436df7fa") (:url . "https://github.com/Lindydancer/multicolumn"))]) (multi-web-mode . [(20130823 2054) nil "multiple major mode support for web editing" tar ((:commit . "ad1c8d1c870334052d244c7ae3636cb7b9357b7c") (:url . "https://github.com/fgallina/multi-web-mode") (:keywords "convenience" "languages" "wp"))]) (multi-term . [(20160619 233) nil "Managing multiple terminal buffers in Emacs." single ((:commit . "f954e4e18b0a035151d34852387e724d87a3316f") (:url . "http://www.emacswiki.org/emacs/download/multi-term.el") (:keywords "term" "terminal" "multiple buffer"))]) (multi-project . [(20170604 1514) nil "Easily work with multiple projects." single ((:url . "https://bitbucket.org/ellisvelo/multi-project/overview") (:keywords "project" "management"))]) (multi-line . [(20170417 1856) ((emacs (24 3)) (s (1 9 0)) (cl-lib (0 5)) (dash (2 12 0)) (shut-up (0 3 2))) "multi-line statements" tar ((:commit . "7e99fd560b15a6176a5ccfcac0af4ef9e8dd0656") (:url . "https://github.com/IvanMalison/multi-line") (:keywords "multi" "line" "length" "whitespace" "programming" "tools" "convenience" "files"))]) (multi-eshell . [(20120608 1135) nil "Create and manage multiple shells within Emacs" single ((:url . "http://cims.nyu.edu/~stucchio"))]) (multi-compile . [(20160306 1423) ((emacs (24)) (dash (2 12 1))) "Multi target interface to compile." single ((:commit . "bd0331854774e7a269ce8a7dd49580cd397c0ec2") (:url . "https://github.com/ReanGD/emacs-multi-compile") (:keywords "tools" "compile" "build"))]) (multi . [(20131013 844) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" single ((:commit . "0987ab71692717ed457cb3984de184db9185806d") (:url . "http://github.com/kurisuwhyte/emacs-multi") (:keywords "multimethod" "generic" "predicate" "dispatch"))]) (mu4e-maildirs-extension . [(20170217 40) ((dash (0 0 0))) "Show mu4e maildirs summary in mu4e-main-view" single ((:commit . "485438c466464fd4fe0c4b3305cd3110455f0f05") (:url . "http://github.com/agpchil/mu4e-maildirs-extension"))]) (mu4e-alert . [(20170429 816) ((alert (1 2)) (s (1 10 0)) (ht (2 0)) (emacs (24 1))) "Desktop notification for mu4e" single ((:commit . "3453e25ff6c07c1b768b2a79fdb9fc5c97100e76") (:url . "https://github.com/iqbalansari/mu4e-alert") (:keywords "mail" "convenience"))]) (mu-cite . [(20160130 300) ((flim (1 14 9))) "A library to provide MIME features." tar ((:commit . "aea3c2d01eb3284d5e0124059d368e8c6b6ffddc"))]) (mtg-deck-mode . [(20170506 1701) ((emacs (24 4))) "Major mode to edit MTG decks" tar ((:commit . "55d493b2e4ad0d931659d1785bcdacc6f16bed07") (:url . "https://github.com/mattiasb/mtg-deck-mode") (:keywords "data" "mtg" "magic"))]) (msvc . [(20170610 1044) ((emacs (24)) (cl-lib (0 5)) (cedet (1 0)) (ac-clang (1 2 0))) "Microsoft Visual C/C++ mode" tar ((:commit . "bb9af3aee0e82d6a78a49a9af61ce47fab32d577") (:url . "https://github.com/yaruopooner/msvc") (:keywords "languages" "completion" "syntax check" "mode" "intellisense"))]) (mpv . [(20150218 118) ((cl-lib (0 5)) (emacs (24)) (json (1 3)) (names (0 5 4)) (org (8 0))) "control mpv for easy note-taking" single ((:commit . "3021c55fa5723a806dde5fb2a630b115e2c53d06") (:url . "https://github.com/kljohann/mpv.el") (:keywords "tools" "multimedia"))]) (mpg123 . [(20170313 715) nil "A front-end program to mpg123/ogg123" single ((:commit . "d1dd8c56428ae55df9e23ba26f102588001d55be"))]) (mpages . [(20150710 704) nil "An Emacs buffer for quickly writing your Morning Pages" single ((:commit . "39a72a0931ab1cdbfdf0ab9f412dc12d43a3829f") (:url . "https://github.com/slevin/mpages"))]) (mozc-temp . [(20160228 40) ((emacs (24)) (dash (2 10 0)) (mozc (0))) "Use mozc temporarily" single ((:commit . "9d6b645eff901ea79dbc43a55d5a97ead3f4bad7") (:url . "https://github.com/HKey/mozc-temp"))]) (mozc-popup . [(20150223 1634) ((popup (0 5 2)) (mozc (0))) "Mozc with popup" single ((:commit . "f0684b875a7427ec08f8df13939a486e5d5cf420") (:keywords "i18n" "extentions"))]) (mozc-im . [(20160411 1722) ((mozc (0))) "Mozc with input-method-function interface." single ((:commit . "df614a1076c28a11551fb3e822868bae47e855a5") (:keywords "i18n" "extentions"))]) (mozc . [(20160102 1506) nil "minor mode to input Japanese with Mozc" single ((:commit . "4767ce2f2b6a63f1f139daea6e98bc7a564d5e4e") (:keywords "mule" "multilingual" "input method"))]) (moz-controller . [(20151208 1806) ((moz (0))) "Control Firefox from Emacs" single ((:commit . "46f665c03574fa922de767fc29795e0db4a7c5c6") (:url . "https://github.com/RenWenshan/emacs-moz-controller"))]) (moz . [(20150805 1006) nil "Lets current buffer interact with inferior mozilla." single ((:commit . "57f278849e4246a992e731e188b221a2574fc81e") (:url . "http://github.com/bard/mozrepl/raw/master/chrome/content/moz.el"))]) (mowedline . [(20161121 1835) nil "elisp utilities for using mowedline" single ((:commit . "bca452544b5e200034d0505a767090a975a21a28"))]) (move-text . [(20170213 2128) nil "Move current line or region with M-up or M-down." single ((:commit . "ea57d20a49bcffbcd948ad2f6f6c710fdd71d689") (:url . "https://github.com/emacsfodder/move-text") (:keywords "edit"))]) (move-dup . [(20170513 1911) nil "Eclipse-like moving and duplicating lines or rectangles." single ((:commit . "dae61de7aa5e2bf56a7bab1fa36fa3a39520a3c0") (:url . "https://github.com/wyuenho/move-dup") (:keywords "convenience" "wp" "edit"))]) (mouse3 . [(20170324 1050) nil "Customizable behavior for `mouse-3'." single ((:url . "https://www.emacswiki.org/emacs/download/mouse3.el") (:keywords "mouse" "menu" "keymap" "kill" "rectangle" "region"))]) (mouse-slider-mode . [(20161021 1214) ((emacs (24 3)) (cl-lib (0 3))) "scale numbers dragged under the mouse" single ((:commit . "b3c19cd231edecce76787c5a9bbe5e4046d91f88") (:url . "https://github.com/skeeto/mouse-slider-mode"))]) (mouse+ . [(20170307 859) nil "Extensions to `mouse.el'." single ((:url . "https://www.emacswiki.org/emacs/download/mouse%2b.el") (:keywords "mouse"))]) (motion-mode . [(20140919 1856) ((flymake-easy (0 7)) (flymake-cursor (1 0 2))) "major mode for RubyMotion enviroment" tar ((:commit . "4c94180e3ecea611a61240a0c0cd48f1032c4a55") (:url . "https://github.com/ainame/motion-mode"))]) (mote-mode . [(20160122 1629) ((ruby-mode (1 1))) "Mote minor mode" single ((:commit . "666c6641addbd3b337a7aa01fd2742ded2f41b83") (:url . "http://inkel.github.com/mote-mode/"))]) (mosey . [(20161015 319) ((emacs (24 4))) "Mosey around your buffers" single ((:commit . "eb0ae6ec10f1d9828a2665476f6d6811df9b0bfa") (:url . "http://github.com/alphapapa/mosey.el") (:keywords "convenience"))]) (morlock . [(20161008 1358) nil "more font-lock keywords for elisp" single ((:commit . "5845b60c705e8db88ce790b0b12cd8b917e1e5a5") (:url . "https://github.com/tarsius/morlock") (:keywords "convenience"))]) (morganey-mode . [(20170118 134) ((emacs (24 4))) "Major mode for editing Morganey files" single ((:commit . "5cf3870432a2aeb69d373abe63b3be1f325f6d21") (:url . "https://github.com/morganey-lang/morganey-mode"))]) (moonscript . [(20160503 631) ((cl-lib (0 5)) (emacs (24))) "Major mode for editing MoonScript code" tar ((:commit . "2278810a43ee41b760e84e48e54ffc48b11772b0"))]) (monroe . [(20170623 103) nil "Yet another client for nREPL" single ((:commit . "2bb59ac84e030f7047e7443e2df25185b397a5d3") (:url . "http://www.github.com/sanel/monroe") (:keywords "languages" "clojure" "nrepl" "lisp"))]) (monokai-theme . [(20170314 1612) nil "A fruity color theme for Emacs." single ((:commit . "46fe076b5943ccc6fdc9cdacc7e8ad02b64bcd36") (:url . "http://github.com/oneKelvinSmith/monokai-emacs"))]) (monokai-alt-theme . [(20170630 1348) ((emacs (24))) "Theme with a dark background. Based on sublime monokai theme." single ((:commit . "f342b6afc31f929be0626eca2d696ee9fab78011") (:url . "https://github.com/dawidof/emacs-monokai-theme"))]) (monochrome-theme . [(20140326 350) nil "A dark Emacs 24 theme for your focused hacking sessions" tar ((:commit . "58fb4cf28c407f059b78bfd72c4dbced07638dd6"))]) (monky . [(20170224 921) nil "Control Hg from Emacs." tar ((:commit . "190079ea4d22a4e875a3b2892e58737344cb2b26"))]) (monitor . [(20161018 444) ((dash (2 13 0))) "Utilities for monitoring expressions." tar ((:commit . "63f4643a0ee81616dbb692b8b03bae21df2283e2") (:url . "https://github.com/guiltydolphin/monitor") (:keywords "lisp" "monitor" "utility"))]) (mongo . [(20150315 519) nil "MongoDB driver for Emacs Lisp" tar ((:commit . "595529ddd70ecb9fab8b11daad2c3929941099d6") (:keywords "convenience"))]) (molokai-theme . [(20151016 845) nil "molokai theme with Emacs theme engine" single ((:commit . "04a44f21184b6a26caae4f2c92db9019d883309c") (:url . "https://github.com/alloy-d/color-theme-molokai"))]) (moe-theme . [(20170111 1838) nil "A colorful eye-candy theme. Moe, moe, kyun!" tar ((:commit . "70e71ef7404cc5c38254771695eee221090d5110") (:url . "https://github.com/kuanyui/moe-theme.el"))]) (modtime-skip-mode . [(20140128 1401) nil "Minor mode for disabling modtime and supersession checks on files." single ((:commit . "c0e49523aa26b2263a8693691ac775988015f592") (:url . "http://www.github.com/jordonbiondo/modtime-skip-mode"))]) (modern-cpp-font-lock . [(20170625 1306) nil "Font-locking for \"Modern C++\"" single ((:commit . "0a5a4ae4d3115eb95ab6047faf8d1734a238ab70") (:url . "https://github.com/ludwigpacifici/modern-cpp-font-lock") (:keywords "languages" "c++" "cpp" "font-lock"))]) (modeline-posn . [(20170307 856) nil "Set up `mode-line-position'." single ((:url . "https://www.emacswiki.org/emacs/download/modeline-posn.el") (:keywords "mode-line" "region" "column"))]) (modeline-char . [(20170307 854) nil "In the mode-line, show the value of the character after point." single ((:url . "https://www.emacswiki.org/emacs/download/modeline-char.el") (:keywords "mode-line" "character"))]) (mode-line-debug . [(20150307 512) nil "show status of `debug-on-error' in the mode-line" single ((:commit . "da44422eeb6a1f055b4ec2f822962c5162fce001") (:url . "https://github.com/tarsius/mode-line-debug") (:keywords "convenience" "lisp"))]) (mode-icons . [(20170216 620) ((emacs (24)) (cl-lib (0 5))) "Show icons for modes" tar ((:commit . "2d47c03ee33c53d069fd64409f7212a2e1ed3f18") (:url . "http://ryuslash.org/projects/mode-icons.html") (:keywords "multimedia"))]) (modalka . [(20170519 32) ((emacs (24 4))) "Easily introduce native modal editing of your own design" single ((:commit . "1259afa084f58d143d133aac56a6c0c10bc460f2") (:url . "https://github.com/mrkkrp/modalka") (:keywords "modal" "editing"))]) (mocker . [(20150916 1854) ((eieio (1 3)) (el-x (0 2 4))) "mocking framework for emacs" single ((:commit . "a1ddf87150f67306ae8da927117063c75588be30") (:keywords "lisp" "testing"))]) (mocha-snippets . [(20170103 2127) ((yasnippet (0 8 0))) "Yasnippets for the Mocha JS Testing Framework" tar ((:commit . "e054137bd78f0d236e983874da1f345d30a71816") (:keywords "test" "javascript"))]) (mocha . [(20170513 1501) ((js2-mode (20150909)) (f (0 18))) "Run Mocha or Jasmine tests" single ((:commit . "dbda778badb8f33c9ed816b927710ef6d0123cf5") (:url . "http://github.com/scottaj/mocha.el") (:keywords "javascript" "mocha" "jasmine"))]) (mobdebug-mode . [(20140109 1946) ((lua-mode (20130419)) (emacs (24))) "Major mode for MobDebug" single ((:commit . "e1d483bc4e341c762bc5c0a8c52306a8d01ea0da") (:url . "https://github.com/deftsp/mobdebug-mode"))]) (mo-vi-ment-mode . [(20131028 2333) nil "Provide vi-like cursor movement that's easy on the fingers" single ((:commit . "f45b014261f8fab19254920bd1d92f3a83263411") (:keywords "convenience"))]) (mo-git-blame . [(20160129 959) nil "An interactive, iterative 'git blame' mode for Emacs" single ((:commit . "254a675eb794cdbbdef9fa2b4b7bb510b70089c0") (:keywords "tools"))]) (mmt . [(20170519 4) ((emacs (24 1)) (cl-lib (0 3))) "Missing macro tools for Emacs Lisp" single ((:commit . "1d89502ea4b0f6a7da327a95f104f5c11e662493") (:url . "https://github.com/mrkkrp/mmt") (:keywords "macro" "emacs-lisp"))]) (mmm-mode . [(20170220 1548) nil "Allow Multiple Major Modes in a buffer" tar ((:commit . "631e7f12d1641cb40e650134f35f2680a1a310a1") (:url . "https://github.com/purcell/mmm-mode") (:keywords "convenience" "faces" "languages" "tools"))]) (mmm-mako . [(20121019 2351) ((mmm-mode (0 4 8))) "MMM submode class for Mako Templates" single ((:url . "https://bitbucket.org/pjenvey/mmm-mako"))]) (mmm-jinja2 . [(20170313 720) ((mmm-mode (0 5 4))) "MMM submode class for Jinja2 Templates" single ((:commit . "c8cb763174fa2fb61b9a0e5e0ff8cb0210f8492f") (:url . "https://github.com/glynnforrest/mmm-jinja2"))]) (mkdown . [(20140517 718) ((markdown-mode (2 0))) "Pretty Markdown previews based on mkdown.com" tar ((:commit . "8e23de82719af6c5b53b52b3308a02b3a1fb872e") (:url . "https://github.com/ajtulloch/mkdown.el") (:keywords "markdown"))]) (misc-fns . [(20170307 848) nil "Miscellaneous non-interactive functions." single ((:url . "https://www.emacswiki.org/emacs/download/misc-fns.el") (:keywords "internal" "unix" "lisp" "extensions" "local"))]) (misc-cmds . [(20170307 847) nil "Miscellaneous commands (interactive functions)." single ((:url . "https://www.emacswiki.org/emacs/download/misc-cmds.el") (:keywords "internal" "unix" "extensions" "maint" "local"))]) (mips-mode . [(20170310 2149) nil "Major-mode for MIPS assembly" single ((:commit . "a13d1fc5b583a29f059f7794f2d83e59da439fa1") (:url . "https://github.com/hlissner/emacs-mips-mode") (:keywords "mips" "assembly"))]) (mip-mode . [(20151126 2217) nil "virtual projects for emacs." single ((:commit . "7c88c383b4c7ed0a4c1dc397735f365c1fcb461c") (:keywords "workspaces" "workspace" "project" "projects" "mip-mode"))]) (minor-mode-hack . [(20141226 1220) nil "Change priority of minor-mode keymaps" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/minor-mode-hack.el") (:keywords "lisp"))]) (minizinc-mode . [(20170605 2342) ((emacs (24 1))) "Major mode for MiniZinc code" single ((:commit . "c33a8e23817468c2a64dcfede6dea41485fb43df") (:url . "http://github.com/m00nlight/minizinc-mode") (:keywords "languages" "minizinc"))]) (minitest . [(20160628 1120) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar ((:commit . "2997ba81456f2a0f3e25b6555b491586865ebb61") (:url . "https://github.com/arthurnn/minitest-emacs"))]) (minimal-theme . [(20160608 322) nil "A light/dark minimalistic Emacs 24 theme." tar ((:commit . "430e0d3fc2044c16aa9f10961841febbd60df285") (:url . "http://github.com/ikame/minimal-theme") (:keywords "color" "theme" "minimal"))]) (minimal-session-saver . [(20140508 1341) nil "Very lean session saver" single ((:commit . "cf654ac549850746dc21091746e4bcc1aef7668e") (:url . "http://github.com/rolandwalker/minimal-session-saver") (:keywords "tools" "frames" "project"))]) (miniedit . [(20100419 1045) nil "Enhanced editing for minibuffer fields." single ((:commit . "e12bf659c3eb92dd8a4cb77642dc0865c54667a3"))]) (minibuffer-cua . [(20130906 434) nil "Make CUA mode's S-up/S-down work in minibuffer" single ((:commit . "adc4979a64f8b36e05960e9afa0746dfa9e2e4c7") (:url . "https://github.com/knu/minibuffer-cua.el") (:keywords "completion" "editing"))]) (minibuffer-complete-cycle . [(20130813 945) nil "Cycle through the *Completions* buffer" single ((:commit . "3df80135887d0169e02294a948711f6dfeca4a6f") (:url . "https://github.com/knu/minibuffer-complete-cycle") (:keywords "completion"))]) (minibuf-isearch . [(20151226 1143) nil "incremental search on minibuffer history" single ((:commit . "2846c6ac369ee623dad4cd3c8a7a6d9078965516") (:keywords "minibuffer" "history" "incremental search"))]) (mini-header-line . [(20170621 521) ((emacs (24 4))) "a minimal header-line" single ((:commit . "73b6724e0a26c4528d93768191c8aa59e6bce2e5") (:url . "https://github.com/ksjogo/mini-header-line") (:keywords "header-line" "mode-line"))]) (mingus . [(20161001 150) ((libmpdee (2 1))) "MPD Interface" tar ((:commit . "519c42b3dd138211c8a025e00826ba196c29facf") (:url . "https://github.com/pft/mingus") (:keywords "multimedia" "elisp" "music" "mpd"))]) (minesweeper . [(20150413 2222) nil "play minesweeper in Emacs" single ((:url . "https://bitbucket.org/zck/minesweeper.el") (:keywords "game" "fun" "minesweeper" "inane" "diversion"))]) (milkode . [(20140926 2229) nil "Command line search and direct jump with Milkode" single ((:commit . "ba97e2aeefa1d9d0b3835bf08edd0de248b0c513") (:keywords "milkode" "search" "grep" "jump" "keyword"))]) (migemo . [(20160924 741) ((cl-lib (0 5))) "Japanese incremental search through dynamic pattern expansion" single ((:commit . "e4744efae1b2fdea2bbd2ceaff0f6ea0bb739f5a") (:url . "https://github.com/emacs-jp/migemo"))]) (midje-mode . [(20150921 1750) ((cider (0 1 4)) (clojure-mode (1 0))) "Minor mode for running Midje tests in emacs" tar ((:commit . "07fc6cee4f5d6aa4187636266b9681a3e455ab6b"))]) (micgoline . [(20160414 2026) ((emacs (24 3)) (powerline (2 3))) "powerline mode, color schemes from microsoft and google's logo." single ((:commit . "837504263bb1711203b0f7efecd6b7b5f272fae0") (:url . "https://github.com/yzprofile/micgoline") (:keywords "mode-line" "powerline" "theme"))]) (mic-paren . [(20150110 1816) nil "advanced highlighting of matching parentheses" single ((:commit . "d0332fae515af2fa461d19afa7f933588afc327f") (:keywords "languages" "faces" "parenthesis" "matching"))]) (mhc . [(20160704 633) ((calfw (20150703))) "Message Harmonized Calendaring system." tar ((:commit . "d5f7c5abe90831248581c26ef3abfec70b2c2b9c") (:url . "http://www.quickhack.net/mhc") (:keywords "calendar"))]) (mexican-holidays . [(20160109 1342) nil "Mexico holidays for Emacs calendar." single ((:commit . "43ced1f9e40a04be6927d1a1be64060f9be4f5c5") (:url . "https://github.com/shopClerk/mexican-holidays") (:keywords "calendar"))]) (mew . [(20170508 22) nil "Messaging in the Emacs World" tar ((:commit . "7ea2baefff668263bf011c72879c2aa88125f2de"))]) (metaweblog . [(20170626 750) ((xml-rpc (1 6 8))) "An emacs library to access metaweblog based weblogs" tar ((:commit . "c039d1ffb618d19d160bde835fab389e9a7433a3"))]) (metascript-mode . [(20150708 1757) ((emacs (24 3))) "Major mode for the Metascript programming language" single ((:commit . "edb361c7b0e5de231e5334a17b90652fb1df78f9") (:url . "http://github.com/metascript/metascript-mode") (:keywords "languages" "metascript" "mjs"))]) (metalheart-theme . [(20160709 2341) ((emacs (24))) "Low-contrast theme with a dark blue-green background." single ((:commit . "ec98ea2c11dc1213dae8cbe1fe0cee73ca138bb2"))]) (metafmt . [(20160221 855) nil "Run metafmt on buffers when saving them" single ((:commit . "b624ba1ac46cdbeddb0cfe920dd44dcab3fdb529") (:url . "https://github.com/lvillani/metafmt") (:keywords "languages" "tools"))]) (meta-presenter . [(20170425 1934) nil "A simple multi-file presentation tool for Emacs" single ((:commit . "e882ac7f7658dd9507aca0ff88c88fcf74618252") (:url . "http://ismail.teamfluxion.com") (:keywords "productivity" "presentation"))]) (messages-are-flowing . [(20170218 1720) nil "visible indication when composing \"flowed\" emails" single ((:commit . "17a0d91658390ba8d38f325b3ece380e07e3cb49") (:keywords "mail"))]) (message-x . [(20151029 718) nil "customizable completion in message headers" single ((:keywords "news" "mail" "compose" "completion"))]) (meson-mode . [(20170501 1310) ((emacs (24 3))) "Major mode for the Meson build system files" single ((:commit . "af09db99891c3d19353150e26338c191525711aa") (:url . "https://github.com/wentasah/meson-mode") (:keywords "languages" "tools"))]) (merlin . [(20170204 628) nil "Mode for Merlin, an assistant for OCaml." tar ((:commit . "420416f182d2ea2a2285ab4bd22e5898dfb20a83") (:url . "https://github.com/the-lambda-church/merlin") (:keywords "ocaml" "languages"))]) (menu-bar+ . [(20170618 1417) nil "Extensions to `menu-bar.el'." single ((:url . "https://www.emacswiki.org/emacs/download/menu-bar%2b.el") (:keywords "internal" "local" "convenience"))]) (mentor . [(20170105 221) ((xml-rpc (1 6 9)) (seq (1 11)) (cl-lib (0 5))) "Frontend for the rTorrent bittorrent client" tar ((:commit . "9a160d718b02a95b1bb24072cca87b4348e1e261") (:keywords "comm" "processes" "bittorrent"))]) (memolist . [(20150804 1021) ((markdown-mode (22 0)) (ag (0 45))) "memolist.el is Emacs port of memolist.vim." single ((:commit . "60c296e202a71e9dcf1c3936d47b5c4b95c5839f") (:url . "http://github.com/mikanfactory/emacs-memolist") (:keywords "markdown" "memo"))]) (memoize . [(20130421 1234) nil "Memoization functions" single ((:commit . "b55eab0cb6ab05d941e07b8c01f1655c0cf1dd75") (:url . "https://github.com/skeeto/emacs-memoize"))]) (memento . [(20150823 339) nil "maintaining daily journals when the day ends." single ((:commit . "35733b79101f694346792a57df686cbffe64bd79") (:keywords "journal" "log" "diary"))]) (melpa-upstream-visit . [(20130720 333) ((s (1 6 0))) "A set of kludges to visit a melpa-hosted package's homepage" single ((:commit . "7310c74fdead3c0f86ad6eff76cf989e63f70f66") (:keywords "convenience"))]) (mellow-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Mellow (tmTheme)" single ((:commit . "ab72898824af6452d0cefea16e49491e42b660d1") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (melancholy-theme . [(20170220 1248) nil "A dark theme for dark minds" single ((:commit . "a9e13ca7051731b3a2c2aece9f3e3033b9a5e41d") (:url . "http://github.com/techquila/melancholy-theme"))]) (meghanada . [(20170628 2045) ((emacs (24 3)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar ((:commit . "b507fc0e6fa4b6f1b05c46ecf563ad0af69e263a") (:url . "https://github.com/mopemope/meghanada-emacs") (:keywords "languages" "java"))]) (mediawiki . [(20170418 1035) nil "mediawiki frontend" single ((:commit . "e1adf088e621c3446d04cb2222756edcb03eb363") (:url . "https://github.com/hexmode/mediawiki-el") (:keywords "mediawiki" "wikipedia" "network" "wiki"))]) (md-readme . [(20160811 946) nil "Markdown-formatted READMEs for your ELisp" tar ((:commit . "bf818dd847c8b06b3b5100c5d3cf24cf96662528") (:url . "http://github.com/thomas11/md-readme/tree/master") (:keywords "lisp" "help" "readme" "markdown" "header" "documentation" "github"))]) (mc-extras . [(20150218 234) ((multiple-cursors (1 2 1))) "Extra functions for multiple-cursors mode." tar ((:commit . "71cf966be06d9c74e781a87bb30fa4cf657ee852") (:url . "https://github.com/knu/mc-extras.el") (:keywords "editing" "cursors"))]) (mbsync . [(20170320 503) nil "run mbsync to fetch mails" single ((:commit . "046a745ea1ea85152e27efd4c83fd3487aacffaa") (:url . "https://github.com/dimitri/mbsync-el"))]) (mbo70s-theme . [(20141122 642) ((emacs (24 0))) "70s style palette, with similarities to mbo theme" single ((:commit . "d50414697760896dbe6b06d2a00c271c16e0e4a2") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (mbe . [(20151126 334) ((emacs (24)) (cl-lib (0 5))) "Macros by Example" single ((:commit . "bb10aa8f26bb7e9b1d5746934c94edb00402940c") (:url . "https://github.com/ijp/mbe.el") (:keywords "tools" "macros"))]) (mb-url . [(20161224 1806) ((cl-lib (0))) "Multiple Backends for Emacs URL package." tar ((:commit . "129a0bb6a684be76fb9f09010e710065d0e5baaa") (:url . "https://github.com/dochang/mb-url") (:keywords "url"))]) (mb-depth+ . [(20170307 844) nil "Indicate minibuffer-depth in prompt" single ((:url . "https://www.emacswiki.org/emacs/download/mb-depth%2b.el") (:keywords "convenience"))]) (maxframe . [(20170120 905) nil "maximize the emacs frame based on display size" single ((:commit . "13bda6dd9f1d96aa4b9dd9957a26cefd399a7772") (:keywords "display" "frame" "window" "maximize"))]) (maven-test-mode . [(20141219 2157) ((s (1 9)) (emacs (24))) "Utilities for navigating test files and running maven test tasks." single ((:commit . "a19151861df2ad8ae4880a2e7c86ddf848cb569a") (:url . "http://github.com/rranelli/maven-test-mode") (:keywords "java" "maven" "test"))]) (maude-mode . [(20160222 807) nil "Emacs mode for the programming language Maude" single ((:commit . "c9543bb8a172fa77af592388e7f520a4a6d38987") (:keywords "maude"))]) (matlab-mode . [(20160902 459) nil "Major mode for MATLAB(R) dot-m files" tar ((:commit . "3b3c48ac0c27039e0bef89c643f0ee4c0b53d3d0") (:url . "http://sourceforge.net/projects/matlab-emacs/") (:keywords "matlab" "programming" "language" "(X)emacs"))]) (math-symbols . [(20151121 1642) ((helm (1 0))) "Math Symbol Input methods and conversion tools" tar ((:commit . "666b1f00d9e106cf2a3a7d58c2262fe9a1404764") (:url . "https://github.com/kawabata/math-symbols") (:keywords "math symbols" "tex" "latex"))]) (math-symbol-lists . [(20170221 553) nil "Lists of Unicode math symbols and latex commands" tar ((:commit . "1af8fdcab7941a62287c2d04b8876e1538f39c60") (:url . "https://github.com/vspinu/math-symbol-lists") (:keywords "unicode" "symbols" "mathematics"))]) (material-theme . [(20160908 1538) ((emacs (24 1))) "A Theme based on the colors of the Google Material Design" tar ((:commit . "0890ff69a0fa1f908e79d0f68b1bb3cf0d55af40") (:url . "http://github.com/cpaulik/emacs-material-theme") (:keywords "themes"))]) (mastodon . [(20170619 1050) ((emacs (24 4))) "Client for Mastodon" tar ((:commit . "e08bb5794762d22f90e85fd65cef7c143e6b9318") (:url . "https://github.com/jdenen/mastodon.el"))]) (maruo-macro-mode . [(20160616 649) ((emacs (24 3))) "Major mode for editing Hidemaru/Maruo macro script" single ((:commit . "8fc9a38ad051eafa8eb94038711acc52c5d1d8d5") (:keywords "programming" "editor" "macro"))]) (marshal . [(20160807 1954) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" single ((:commit . "d5b6fdd97159b22d5a9dbc3b0db18a04089b3f2f") (:url . "https://github.com/sigma/marshal.el") (:keywords "eieio"))]) (marmalade-client . [(20141231 1207) ((web (0 5 2)) (kv (0 0 19)) (gh (0 8 0))) "client for marmalade API from emacs" tar ((:commit . "f315dea57e4fbebd9ee0668c0bafd4c45c7b754a") (:url . "https://github.com/nicferrier/emacs-marmalade-upload") (:keywords "lisp"))]) (markup-faces . [(20141110 17) nil "collection of faces for markup language modes" single ((:commit . "98a807ed82473eb41c6a201ed7ef816d6bcd67b0") (:url . "https://github.com/sensorflo/markup-faces") (:keywords "wp" "faces"))]) (markup . [(20170420 429) ((cl-lib (0 5))) "Simple markup generation helpers." single ((:commit . "876da2d3f23473475bb0fd0a1480ae11d2671291") (:url . "http://github.com/leoc/markup.el") (:keywords "convenience" "markup" "html"))]) (markdownfmt . [(20160609 541) ((emacs (24))) "Format markdown using markdownfmt" single ((:commit . "187a74eb4fd9e8520ce08da42d1d292b9af7f2b7") (:url . "https://github.com/nlamirault/emacs-markdownfmt") (:keywords "markdown"))]) (markdown-toc . [(20170224 2350) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar ((:commit . "0edc303871517da67483119f2b1969055e6e0608"))]) (markdown-preview-mode . [(20161211 1443) ((emacs (24 3)) (websocket (1 6)) (markdown-mode (2 0)) (cl-lib (0 5)) (web-server (0 1 1)) (uuidgen (0 3))) "markdown realtime preview minor mode." tar ((:commit . "50e5baed5ca3a1d2fed08f32802976a5ed358fed") (:url . "https://github.com/ancane/markdown-preview-mode") (:keywords "markdown" "gfm" "convenience"))]) (markdown-preview-eww . [(20160111 702) ((emacs (24 4))) "Realtime preview by eww" single ((:commit . "5853f836425c877c8a956501f0adda137ef1d3b7") (:url . "https://github.com/niku/markdown-preview-eww"))]) (markdown-mode . [(20170702 738) ((emacs (24)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single ((:commit . "2c8d0e537ea7a2e823b7768b603f7194beebe565") (:url . "http://jblevins.org/projects/markdown-mode/") (:keywords "markdown" "github flavored markdown" "itex"))]) (markdown-mode+ . [(20170320 1404) ((markdown-mode (20111229))) "extra functions for markdown-mode" tar ((:commit . "411d079f4430a33c34ec0bbcb1535fe1145a2509") (:url . "http://github.com/milkypostman/markdown-mode-plus") (:keywords "markdown" "latex" "osx" "rtf"))]) (markdown-edit-indirect . [(20170607 1244) ((emacs (24 3)) (markdown-mode (2 2)) (edit-indirect (0 1 4))) "Edit markdown code block in a separate buffer" single ((:commit . "a789320354eab2b2275a308c38b1390e6d2cc41b") (:url . "https://github.com/emacs-pe/markdown-edit-indirect.el") (:keywords "convenience"))]) (mark-tools . [(20130614 325) nil "Some simple tools to access the mark-ring in Emacs" single ((:commit . "a11b61effa90bd0abc876d12573674d36fc17f0c") (:url . "https://github.com/stsquad/emacs-mark-tools"))]) (mark-multiple . [(20121118 754) nil "Sorta lets you mark several regions at once." tar ((:commit . "f6a53c7c5283d640ae718f4548b0fda78877a375"))]) (marcopolo . [(20160421 304) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client to the Docker HUB/Registry API" tar ((:commit . "9193aabdf12223087b5ed58f1507d5d8a24a4381") (:url . "https://github.com/nlamirault/marcopolo") (:keywords "docker"))]) (map-regexp . [(20130522 1403) ((cl-lib (0 2))) "map over matches of a regular expression" single ((:commit . "b8e06284ec1c593d7d2bda5f35597a63de46333f") (:url . "https://github.com/tarsius/map-regexp") (:keywords "convenience"))]) (map-progress . [(20140310 1432) nil "mapping macros that report progress" single ((:commit . "3167eb218510953fb97e7d50948a625eaa3f0005") (:url . "https://github.com/tarsius/map-progress/") (:keywords "convenience"))]) (mandoku-tls . [(20170611 6) ((emacs (24 4)) (mandoku (20170301)) (github-clone (0 2)) (hydra (0 13 6)) (helm (1 7 0)) (org (9 0)) (helm-charinfo (20170601))) "A tool to access the TLS database" single ((:commit . "e21205ca9c1c053801190f291d6583ce057e8a65") (:url . "https://github.com/krp-zinbun/tls") (:keywords "convenience"))]) (mandoku . [(20170614 306) ((org (8 0)) (magit (20151028)) (github-clone (20150705)) (git (20140128))) "A tool to access repositories of premodern Chinese texts" tar ((:commit . "e6dd2ec56d6bd92d082b02b500e9f75e5a790443"))]) (mandm-theme . [(20170304 1401) nil "An M&M color theme." single ((:commit . "cd1505c8bcff0a3de821f0b419f897f4b0378b01") (:url . "https://github.com/choppsv1/emacs-mandm-theme.git"))]) (manage-minor-mode . [(20140310 900) ((emacs (24 3))) "Manage your minor-modes easily" single ((:commit . "1bed33b0752380b548b822fe72e6858c5fe70c8e") (:url . "https://github.com/ShingoFukuyama/manage-minor-mode") (:keywords "minor-mode" "manage" "emacs"))]) (man-commands . [(20151221 1421) ((cl-lib (0 5))) "Add interactive commands for every manpages installed in your computer." single ((:commit . "f4ba0c3790855d7544dff92d470d212f24de1d9d") (:url . "http://github.com/nflath/man-commands"))]) (malyon . [(20161208 1325) ((cl-lib (0 5))) "mode to execute Z-code files version 3, 5, 8" single ((:commit . "0d9882650720b4a791556f5e2d917388965d6fc0") (:url . "https://github.com/speedenator/malyon") (:keywords "games" "emulations"))]) (mallard-snippets . [(20131023 1151) ((yasnippet (0 8 0)) (mallard-mode (0 1 1))) "Yasnippets for Mallard" tar ((:commit . "70c5293f10722f2ace73bdf74d9a18f95b040edc") (:url . "https://github.com/jhradilek/emacs-mallard-snippets") (:keywords "snippets" "mallard"))]) (mallard-mode . [(20131203 2025) nil "Major mode for editing Mallard files" tar ((:commit . "c48170c1ace4959abcc5fb1df0d4cb149cff44c1") (:url . "https://github.com/jhradilek/emacs-mallard-mode") (:keywords "xml" "mallard"))]) (malinka . [(20170628 151) ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (cl-lib (0 3)) (rtags (0 0)) (projectile (0 11 0))) "A C/C++ project configuration package for Emacs" single ((:commit . "b8ec090cb57a78265650586f71f00c4c9e054e27") (:url . "https://github.com/LefterisJP/malinka") (:keywords "c" "c++" "project-management"))]) (makey . [(20131231 630) ((cl-lib (0 2))) "interactive commandline mode" single ((:commit . "a61781e69d3b451551e269446e1c5f624ab81137"))]) (maker-mode . [(20150116 354) ((s (1 3 0)) (dash (2 8 0))) "Emacs mode for maker (scala build tool)" single ((:commit . "335c43b08eff589040129dae1ea13c88793b069e") (:url . "https://github.com/fommil/maker-mode") (:keywords "processes" "tools"))]) (make-it-so . [(20170328 216) ((swiper (0 8 0)) (emacs (24))) "Transform files with Makefile recipes." tar ((:commit . "1f2015cb131d69ffd7994dcc153abef969999027") (:url . "https://github.com/abo-abo/make-it-so") (:keywords "make" "dired"))]) (make-color . [(20140625 450) nil "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" single ((:commit . "5ca1383ca9228bca82120b238bdc119f302b75c0") (:url . "https://github.com/alezost/make-color.el") (:keywords "color"))]) (major-mode-icons . [(20170228 2314) ((emacs (24 3)) (powerline (2 4)) (all-the-icons (2 3 0))) "display icon for major-mode on mode-line." tar ((:commit . "e6117a236b2ad52e948576550b183053321dfc91") (:url . "http://github.com/stardiviner/major-mode-icons") (:keywords "frames" "multimedia"))]) (majapahit-theme . [(20160817 1148) nil "Color theme with a dark and light versions" tar ((:commit . "77c96df7619666b2102d90d452eeadf04adc89a6") (:keywords "color" "theme") (:url . "https://gitlab.com/franksn/majapahit-theme"))]) (main-line . [(20151120 1806) ((cl-lib (0 5))) "modeline replacement forked from an early version of powerline.el" single ((:commit . "0e88f91e49ef27cb77d74f6a8d8140063549d67f") (:url . "https://github.com/jasonm23/emacs-mainline") (:keywords "statusline" "/" "modeline"))]) (magnatune . [(20151030 1235) ((dash (2 9 0)) (s (1 9 0))) "browse magnatune's music catalog" tar ((:commit . "605b01505ba30589c77ebb4c96834b5072ccbdd4"))]) (magma-mode . [(20160304 408) ((cl-lib (0 3)) (dash (2 6 0)) (f (0 17 1))) "Magma mode for Emacs" tar ((:commit . "528c96a269980dcc6b65e2e973510ff07e6b9fc4") (:url . "https://github.com/ThibautVerron/magma-mode"))]) (magithub . [(20170516 612) ((emacs (25)) (magit (2 8 0)) (s (20170428 1026)) (ghub+ (0 1 4))) "Magit interfaces for GitHub" tar ((:commit . "7fd7343c3c87df56c7c7dd6c41a80b14291b1ac4") (:url . "https://github.com/vermiculus/magithub") (:keywords "git" "tools" "vc"))]) (magit-topgit . [(20160313 1254) ((emacs (24 4)) (magit (2 1 0))) "TopGit extension for Magit" single ((:commit . "11489ea798bc88d0ea5244bbf725285eedfefbef") (:keywords "vc" "tools"))]) (magit-tbdiff . [(20170627 2023) ((emacs (24 4)) (magit (2 10 0))) "Magit extension for git-tbdiff" single ((:commit . "2e7d54d290260e5834cca06863d78fc563d7373c") (:url . "https://github.com/magit/magit-tbdiff") (:keywords "vc" "tools"))]) (magit-svn . [(20170213 433) ((emacs (24 4)) (magit (2 1 0))) "Git-Svn extension for Magit" single ((:commit . "c833903732a14478f5c4cfc561bae7c50671b36c") (:keywords "vc" "tools"))]) (magit-stgit . [(20160224 703) ((emacs (24 4)) (magit (2 1 0))) "StGit extension for Magit" single ((:commit . "1b064485d512ab547d606dcea9ad4298f355095c") (:keywords "vc" "tools"))]) (magit-rockstar . [(20161013 544) ((dash (2 12 1)) (magit (2 6 1))) "commit like a rockstar" single ((:commit . "bccce1ac8e012f52e29470c1c7d815f9bb1a192b") (:url . "https://github.com/tarsius/magit-rockstar") (:keywords "convenience"))]) (magit-popup . [(20170701 1313) ((emacs (24 4)) (async (20170219 942)) (dash (20170207 2056))) "Define prefix-infix-suffix command combos" tar ((:commit . "f14ba16e0bed071b45f9384d12f10f0c11be90c0") (:url . "https://github.com/magit/magit") (:keywords "bindings"))]) (magit-p4 . [(20170414 546) ((magit (2 1)) (magit-popup (2 1)) (p4 (12 0)) (cl-lib (0 5))) "git-p4 plug-in for Magit" single ((:commit . "ef23e89dc504970e78ac9b158731a3eda7d6d7ee") (:url . "https://github.com/qoocku/magit-p4") (:keywords "vc" "tools"))]) (magit-lfs . [(20170312 1524) ((emacs (24 4)) (magit (2 10 3)) (dash (2 13 0))) "Magit plugin for Git LFS" single ((:commit . "799282fce73b668d2cf6e4fa87f889fec8e25333") (:url . "https://github.com/ailrun/magit-lfs") (:keywords "magit" "git" "lfs" "tools" "vc"))]) (magit-gitflow . [(20170425 128) ((magit (2 1 0)) (magit-popup (2 2 0))) "gitflow extension for magit" single ((:commit . "5bdcfe0a7bf4f5bb9a927baa4880233bf11a4a6b") (:url . "https://github.com/jtatarik/magit-gitflow") (:keywords "vc" "tools"))]) (magit-gh-pulls . [(20161020 249) ((emacs (24)) (gh (0 9 1)) (magit (2 1 0)) (pcache (0 2 3)) (s (1 6 1))) "GitHub pull requests extension for Magit" single ((:commit . "7eb4491d889c4de2e3169b91d34e7d863edf94b7") (:url . "https://github.com/sigma/magit-gh-pulls") (:keywords "git" "tools"))]) (magit-gerrit . [(20160226 130) ((magit (2 3 1))) "Magit plugin for Gerrit Code Review" single ((:commit . "ece6f369694aca17f3ac166ed2801b432acfe20d") (:url . "https://github.com/terranpro/magit-gerrit"))]) (magit-find-file . [(20150702 130) ((magit (2 1 0)) (dash (2 8 0))) "completing-read over all files in Git" single ((:commit . "c3ea91bab37d10a814a829728ec972811f728d60") (:url . "https://github.com/bradleywright/magit-find-file.el") (:keywords "git"))]) (magit-filenotify . [(20151116 1540) ((magit (1 3 0)) (emacs (24 4))) "Refresh status buffer when git tree changes" single ((:commit . "c0865b3c41af20b6cd89de23d3b0beb54c8401a4") (:keywords "tools"))]) (magit-annex . [(20170702 832) ((cl-lib (0 3)) (magit (2 3 0))) "Control git-annex from Magit" single ((:commit . "85b860cb53d6f0088255013ef849af9a882110f9") (:url . "https://github.com/magit/magit-annex") (:keywords "vc" "tools"))]) (magit . [(20170702 858) ((emacs (24 4)) (async (20170219 942)) (dash (20170207 2056)) (with-editor (20170111 609)) (git-commit (20170214 347)) (magit-popup (20170214 347))) "A Git porcelain inside Emacs" tar ((:commit . "456a77d36915cc2ead3799d8a5ec2fbf7f2a17ed") (:url . "https://github.com/magit/magit") (:keywords "git" "tools" "vc"))]) (magic-latex-buffer . [(20170530 1705) ((cl-lib (0 5)) (emacs (24 3))) "Magically enhance LaTeX-mode font-locking for semi-WYSIWYG editing" single ((:commit . "c03277d5619d9adcd871f3e6480a1a27985810cb") (:url . "http://hins11.yu-yake.com/"))]) (magic-filetype . [(20161214 1017) ((emacs (24)) (s (1 9 0))) "Enhance filetype major mode" single ((:commit . "9a20137474697063898902b43a40423daa4eb64d") (:url . "https://github.com/zonuexe/magic-filetype.el") (:keywords "emulations" "vim" "ft" "file" "magic-mode"))]) (mag-menu . [(20150505 1150) ((splitter (0 1 0))) "Intuitive keyboard-centric menu system" single ((:commit . "9b9277021cd09fb1dba64b1d2a00705d20914bd6") (:url . "https://github.com/chumpage/mag-menu") (:keywords "convenience"))]) (madhat2r-theme . [(20170202 1630) ((emacs (24))) "dark color theme that is easy on the eyes" single ((:commit . "6b387f09de055cfcc15d74981cd4f32f8f9a7323") (:url . "https://github.com/madhat2r/madhat2r-theme") (:keywords "color" "theme"))]) (macrostep . [(20161120 1306) ((cl-lib (0 5))) "interactive macro expander" tar ((:commit . "424e3734a1ee526a1bd7b5c3cd1d3ef19d184267") (:url . "https://github.com/joddie/macrostep") (:keywords "lisp" "languages" "macro" "debugging"))]) (macros+ . [(20170307 842) nil "Extensions to `macros.el'." single ((:url . "http://www.emacswiki.org/emacs/download/macros%2b.el") (:keywords "abbrev" "local"))]) (macro-math . [(20130328 904) nil "in-buffer mathematical operations" single ((:commit . "216e59371e9ee39c34117ba79b9acd78bb415750") (:url . "http://nschum.de/src/emacs/macro-math/") (:keywords "convenience"))]) (m-buffer . [(20170407 1441) ((seq (2 14))) "List-Oriented, Functional Buffer Manipulation" tar ((:commit . "e2d5a416ce47b36da10a9815ff5702f28c716d57"))]) (lyrics . [(20160920 1945) ((emacs (25 1)) (seq (2 15))) "Show lyrics" single ((:commit . "1378d534614793a51ebbed661c59eb8818299182") (:url . "https://github.com/emacs-pe/lyrics.el") (:keywords "convenience"))]) (lxc . [(20140410 1322) nil "lxc integration with Emacs" single ((:commit . "88bed56c954d1edd9ff5ce0ced2c02dcf9f71835") (:url . "https://github.com/nicferrier/emacs-lxc") (:keywords "processes"))]) (lusty-explorer . [(20150508 1557) nil "Dynamic filesystem explorer and buffer switcher" single ((:commit . "a6e78cafc193050a493d16d07eae107a2436c293") (:keywords "convenience" "files" "matching"))]) (lush-theme . [(20141107 806) ((emacs (24))) "A dark theme with strong colors" single ((:commit . "3b80004f33cdce9f4db69e9ccf2041561e98985d") (:url . "https://github.com/andre-richter/emacs-lush-theme") (:keywords "theme" "dark" "strong colors"))]) (luarocks . [(20170430 1605) ((emacs (24)) (cl-lib (0 5))) "luarocks tools" single ((:commit . "cee27ba0716edf338077387969883226dd2b7484") (:url . "https://github.com/emacs-pe/luarocks.el") (:keywords "convenience"))]) (lua-mode . [(20170130 435) nil "a major-mode for editing Lua scripts" tar ((:commit . "652e299cb967fccca827dda381d61a9c144d97de") (:url . "http://immerrr.github.com/lua-mode") (:keywords "languages" "processes" "tools"))]) (lsp-rust . [(20170421 326) ((lsp-mode (2 0)) (rust-mode (0 3 0))) "Rust support for lsp-mode" single ((:commit . "bd9b1f5d9195067decc496e61ad383d615b7f054") (:url . "https://github.com/emacs-lsp/lsp-rust") (:keywords "rust"))]) (lsp-python . [(20170430 443) ((lsp-mode (2 0))) "Python support for lsp-mode" single ((:commit . "5e032b39d74e63dee9157bf967f3902caa8524fa") (:url . "https://github.com/emacs-lsp/lsp-python") (:keywords "python"))]) (lsp-mode . [(20170629 33) ((emacs (25 1)) (flycheck (30))) "Minor mode for interacting with Language Servers" tar ((:commit . "3e93b3fd754931cfd122855659afbd070d844bac") (:url . "https://github.com/emacs-lsp/lsp-mode"))]) (lsp-java . [(20170522 633) ((emacs (25 1)) (lsp-mode (2 0))) "Java support for lsp-mode" single ((:commit . "5c58fc74872e318b2894f11331bec8f699f34c77") (:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "java"))]) (lsp-haskell . [(20170421 328) ((lsp-mode (2 0)) (haskell-mode (1 0))) "Haskell support for lsp-mode" single ((:commit . "c22e6f4a70156e615e303d623e75362d3b14bcf4") (:url . "https://github.com/emacs-lsp/lsp-haskell") (:keywords "haskell"))]) (lsp-go . [(20170419 605) ((lsp-mode (2 0)) (go-mode (1 0 0))) "Go support for lsp-mode" single ((:commit . "3ef571cc8c534e305a3ad6831a0b244a30ca57fe") (:url . "https://github.com/emacs-lsp/lsp-go") (:keywords "go" "golang"))]) (love-minor-mode . [(20130429 1459) ((lua-mode (20130419))) "Minor mode for working on LÖVE projects" single ((:commit . "31c3fc1ecd31f72f0f736014a4ff905eb3742e74") (:url . "https://github.com/ejmr/love-minor-mode"))]) (lorem-ipsum . [(20140911 1408) nil "Insert dummy pseudo Latin text." single ((:commit . "4b39f6fed455d67f635b3837cf5668bf74d0f6cd") (:keywords "tools" "language" "convenience"))]) (loop . [(20160813 707) nil "friendly imperative loop structures" single ((:commit . "e22807f83a0890dc8a904c51ee0742c34efccc6c") (:keywords "loop" "while" "for each" "break" "continue"))]) (look-mode . [(20151211 1026) nil "quick file viewer for image and text file browsing" single ((:commit . "d65f75e8ea24eff2ac31c53b4835b45127eedd56"))]) (look-dired . [(20160729 1623) ((look-mode (1 0))) "Extensions to look-mode for dired buffers" single ((:commit . "9bfa4e5e6f3810705b6426c88493ea0bf6b15640") (:url . "https://github.com/vapniks/look-dired") (:keywords "convenience"))]) (lolcode-mode . [(20111002 147) nil "Major mode for editing LOLCODE" single ((:commit . "1914f1ba87587ecf5f175eeb2144c28e9f039317") (:url . "http://github.com/bodil/lolcode-mode") (:keywords "lolcode" "major" "mode"))]) (logview . [(20170518 428) ((emacs (24 1)) (datetime (0 2))) "Major mode for viewing log files" single ((:commit . "c85f0527664538ac9d59bbac9bea40c207c8b9d5") (:url . "https://github.com/doublep/logview") (:keywords "files" "tools"))]) (logstash-conf . [(20170524 1229) nil "basic mode for editing logstash configuration" single ((:commit . "4e127f9aec190786613445aa88efa307ff7c6748"))]) (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" single ((:commit . "824acb89d2cc18cb47281a4fbddd81ad244a2052") (:keywords "lisp" "tool"))]) (logalimacs . [(20131021 1129) ((popwin (0 6 2)) (popup (0 5 0)) (stem (20130120))) "Front-end to logaling-command for Ruby gems" single ((:commit . "8286e39502250fc6c3c6656a7f46a8eee8e9a713") (:url . "https://github.com/logaling/logalimacs") (:keywords "translation" "logaling-command"))]) (log4j-mode . [(20160108 1118) nil "major mode for viewing log files" single ((:commit . "26171b1e723502055e085393b0ecdcb6db406010") (:url . "http://log4j-mode.sourceforge.net") (:keywords "tools"))]) (log4e . [(20170401 604) nil "provide logging framework for elisp" single ((:commit . "34309972ad02abcebbcff6b1682731978aef030c") (:url . "https://github.com/aki2o/log4e") (:keywords "log"))]) (lodgeit . [(20150312 649) nil "Paste to a lodgeit powered pastebin" single ((:commit . "ec9b8e5cbb17bcf8ac4bdddd1d361cb60e59384c") (:url . "https://github.com/ionrock/lodgeit-el") (:keywords "pastebin" "lodgeit"))]) (lockfile-mode . [(20170624 2207) nil "Major mode for .lock files" single ((:commit . "496b6035716df0582f879f9488f296947cabead2") (:url . "https://github.com/preetpalS/emacs-lockfile-mode"))]) (loccur . [(20161227 251) ((emacs (24 3))) "Perform an occur-like folding in current buffer" single ((:commit . "650d91dda0d313c8f445a0803c07809d857dee0f") (:url . "https://github.com/fourier/loccur") (:keywords "matching"))]) (loc-changes . [(20160801 1008) nil "keep track of positions even after buffer changes" single ((:commit . "4d1dcdf7631c23b1259ad4f72bf9686cf95fb46c") (:url . "http://github.com/rocky/emacs-loc-changes"))]) (load-theme-buffer-local . [(20120702 1336) nil "Install emacs24 color themes by buffer." single ((:commit . "e606dec66f16a06140b9aad625a4fd52bca4f936") (:url . "http://github.com/vic/color-theme-buffer-local") (:keywords "faces"))]) (load-relative . [(20170526 310) nil "relative file load (within a multi-file Emacs package)" tar ((:commit . "738896e3da491b35399178ed2c6bc92cc728d119") (:url . "http://github.com/rocky/emacs-load-relative") (:keywords "internal"))]) (llvm-mode . [(20160617 2215) nil "Major mode for the LLVM assembler language." tar ((:commit . "8582763b6572004bcd65b569e7e462c56fc32e96"))]) (livid-mode . [(20131116 544) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single ((:commit . "dfe5212fa64738bc4138bfebf349fbc8bc237c26") (:url . "https://github.com/pandeiro/livid-mode"))]) (livescript-mode . [(20140612 2121) nil "Major mode for editing LiveScript files" single ((:commit . "90a918d9686e256e6d4d439cc20f24dad8d3b804") (:url . "https://github.com/yhisamatsu/livescript-mode") (:keywords "languages" "livescript"))]) (livereload . [(20170628 2350) ((emacs (25)) (websocket (1 8))) "Livereload server" tar ((:commit . "1e501d7e46dbd476c2c7cc9d20b5ac9d41fb1955") (:keywords "convenience"))]) (lively . [(20160208 1035) nil "interactively updating text" single ((:commit . "12df5ccaec03670de87c01b0b4cd3e2b96e0738a"))]) (live-py-mode . [(20170528 2030) ((emacs (24 3))) "Live Coding in Python" tar ((:commit . "5a04d426b33566027fdf5fd3090dfd315fda7314") (:url . "http://donkirkby.github.io/live-py-plugin/") (:keywords "live" "coding"))]) (live-code-talks . [(20150115 1423) ((emacs (24)) (cl-lib (0 5)) (narrowed-page-navigation (0 1))) "Support for slides with live code in them" single ((:commit . "fece58108939a53104f88d348298c9e122f25b75") (:keywords "docs" "multimedia"))]) (literate-starter-kit . [(20150730 1154) ((emacs (24 3))) "A literate starter kit to configure Emacs using Org-mode files." tar ((:commit . "6dce1d01781966c14558aa553cfc85008c06e115"))]) (literate-coffee-mode . [(20170211 715) ((coffee-mode (0 5 0))) "major-mode for Literate CoffeeScript" single ((:commit . "55ce0305495f4a38c8063c4bd63deb1e1252373d") (:url . "https://github.com/syohex/emacs-literate-coffee-mode"))]) (literal-string . [(20170301 730) ((markdown-mode (2 0)) (emacs (25))) "edit string literals in a dedicated buffer" single ((:commit . "2ca4fc08b8e19e6183b1f1db747bb0a4aa4f98eb") (:url . "https://github.com/joodie/literal-string-mode/") (:keywords "lisp" "tools" "docs"))]) (litecoin-ticker . [(20160611 1711) ((json (1 2))) "litecoin price in modeline" single ((:commit . "3d8047c736e4ee0b8638953f8cc63eaefad34106"))]) (litable . [(20160922 859) ((dash (2 6 0))) "dynamic evaluation replacement with emacs" single ((:commit . "4a57d7aeddca76448e4df2a46b42d49253e5e625") (:keywords "lisp"))]) (lit-mode . [(20141123 936) nil "Major mode for lit" single ((:commit . "c61c403afc8333a5649c5421ab1a6341dc1c7d92") (:keywords "languages" "tools"))]) (list-utils . [(20160414 702) nil "List-manipulation utility functions" single ((:commit . "acf18aca1131a90f8d673974673e3c5d8fdc6a86") (:url . "http://github.com/rolandwalker/list-utils") (:keywords "extensions"))]) (list-unicode-display . [(20150219 101) ((cl-lib (0 5))) "Search for and list unicode characters by name" single ((:commit . "1719e7e90035c78dcc8a780c34cd18e6b3dcc6b1") (:keywords "convenience"))]) (list-register . [(20091203 1015) nil "List register" single ((:commit . "f8bec5dc3765174de1089549947d9ca9a1cdbe5f"))]) (list-processes+ . [(20131117 1135) nil "Add process management to `list-processes'" single ((:url . "not distributed yet"))]) (list-packages-ext . [(20151115 916) ((s (1 6 0)) (ht (1 5 0)) (persistent-soft (0 8 6))) "Extras for list-packages" single ((:commit . "b4dd644e4369c9aa66f5bb8895ea49ebbfd0a27a") (:keywords "convenience" "tools"))]) (list-environment . [(20151226 1856) nil "A tabulated process environment editor" single ((:commit . "b7ca30b05905047be2e55199a6475f8d98ce318b") (:keywords "processes" "unix"))]) (lispyville . [(20170515 807) ((lispy (0)) (evil (1 2 12)) (cl-lib (0 5)) (emacs (24 4))) "A minor mode for integrating evil with lispy." single ((:commit . "92e22ed9f70e0ae2c68736fc8d91240af36102e1") (:url . "https://github.com/noctuid/lispyville") (:keywords "vim" "evil" "lispy" "lisp" "parentheses"))]) (lispyscript-mode . [(20130828 719) nil "Major mode for LispyScript code." single ((:commit . "d0e67ee734919d7ff14c72712e909149cb9604bd") (:url . "https://github.com/krisajenkins/lispyscript-mode") (:keywords "lisp" "languages"))]) (lispy . [(20170623 1046) ((emacs (24 1)) (ace-window (0 9 0)) (iedit (0 9 9)) (swiper (0 7 0)) (hydra (0 13 4)) (zoutline (0 1 0))) "vi-like Paredit" tar ((:commit . "5aab7fa4fcd42d2f73d226843b4247d61ad917ba"))]) (lispxmp . [(20170110 1508) nil "Automagic emacs lisp code annotation" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/lispxmp.el") (:keywords "lisp" "convenience"))]) (lisp-extra-font-lock . [(20160930 1227) nil "Highlight bound variables and quoted exprs." single ((:commit . "092f5a6e75ddfc8051b252f10e182723a17980e4") (:url . "https://github.com/Lindydancer/lisp-extra-font-lock") (:keywords "languages" "faces"))]) (liso-theme . [(20160410 1329) nil "Eclectic Dark Theme for GNU Emacs" single ((:commit . "844688245eb860d23043455e165ee24503454c81") (:url . "https://github.com/caisah/liso-theme") (:keywords "theme" "themes"))]) (liquid-types . [(20151201 2335) ((flycheck (0 13)) (dash (1 2)) (emacs (24 1)) (popup (0 5 2)) (pos-tip (0 5 0)) (flycheck-liquidhs (0 0 1)) (button-lock (1 0 2))) "show inferred liquid-types" single ((:commit . "cc4bacbbf204ef9cf0756f78dfebee2c6ae14d7b"))]) (linum-relative . [(20160510 118) nil "display relative line number in emacs." single ((:commit . "b8a99dcfe38a491172a8193053fb7849634b43c0") (:url . "http://github.com/coldnew/linum-relative") (:keywords "converience"))]) (linum-off . [(20160217 1337) nil "Provides an interface for turning line-numbering off" single ((:commit . "116e66ac259b183e0763b85616888316ab196822") (:url . "http://www.emacswiki.org/emacs/auto-indent-mode.el ") (:keywords "line" "numbering"))]) (linphone . [(20130524 409) nil "Emacs interface to Linphone" tar ((:commit . "99af3db941b7f4e5272bb48bff96c1ce4ceac302") (:url . "https://github.com/zabbal/emacs-linphone") (:keywords "comm"))]) (link-hint . [(20170313 1945) ((avy (0 3 0)) (emacs (24 1)) (cl-lib (0 5))) "Use avy to open or copy visible urls." single ((:commit . "6b926a6fbb7288eb062b28747a32644c5c8fea4f") (:url . "https://github.com/noctuid/link-hint.el") (:keywords "url"))]) (link . [(20140717 2029) nil "Hypertext links in text buffers" single ((:commit . "a23b8f4a422d0de69a006ed010eff5795319db98") (:keywords "interface" "hypermedia"))]) (lingr . [(20100807 1031) nil "Lingr Client for GNU Emacs" single ((:commit . "4215a8704492d3c860097cbe2649936c22c196df") (:url . "http://github.com/lugecy/lingr-el") (:keywords "chat" "client" "internet"))]) (light-soap-theme . [(20150607 745) ((emacs (24))) "Emacs 24 theme with a light background." single ((:commit . "76a787bd40c6b567ae68ced7f5d9f9f10725e00d"))]) (lice . [(20170220 143) nil "License And Header Template" tar ((:commit . "4339929927c62bd636f89bb39ea999d18d269250") (:url . "https://github.com/buzztaiki/lice-el") (:keywords "template" "license" "tools"))]) (libmpdee . [(20160117 1501) nil "Client end library for mpd, a music playing daemon" single ((:commit . "a6ca3b7d6687f3ba60996b9b5044ad1d3b228290") (:keywords "music" "mpd"))]) (lib-requires . [(20170307 855) nil "Commands to list Emacs Lisp library dependencies." single ((:url . "https://www.emacswiki.org/emacs/download/lib-requires.el") (:keywords "libraries" "files"))]) (lfe-mode . [(20170121 454) nil "Lisp Flavoured Erlang mode" tar ((:commit . "69a2d1d410220a688ad169366d0d20e138e264f6"))]) (lexbind-mode . [(20141027 729) nil "Puts the value of lexical-binding in the mode line" single ((:commit . "fa0a6848c1cfd3fbf45db43dc2deef16377d887d") (:url . "https://github.com/spacebat/lexbind-mode") (:keywords "convenience" "lisp"))]) (levenshtein . [(20090830 340) nil "Edit distance between two strings." single ((:commit . "070925197ebf6b704e6e00c4f2d2ec783f3df38c") (:keywords "lisp"))]) (leuven-theme . [(20170508 1319) nil "Awesome Emacs color theme on white background" tar ((:commit . "185e19f49ad05e9d813c10d24381f3e35b8c719e") (:url . "https://github.com/fniessen/emacs-leuven-theme") (:keywords "color" "theme"))]) (letcheck . [(20160202 1148) nil "Check the erroneous assignments in let forms" single ((:commit . "edf188ca2f85349e971b83f164c6484264e79426") (:url . "https://github.com/Fuco1/letcheck") (:keywords "convenience"))]) (less-css-mode . [(20160930 2153) nil "Major mode for editing LESS CSS files (lesscss.org)" single ((:commit . "59bf174c4e9f053ec2a7ef8c8a8198490390f6fb") (:url . "https://github.com/purcell/less-css-mode") (:keywords "less" "css" "mode"))]) (lentic-server . [(20160717 1352) ((lentic (0 8)) (web-server (0 1 1))) "Web Server for Emacs Literate Source" single ((:commit . "8e809fafbb27a98f815b544d9d9ee15843eb6a36"))]) (lentic . [(20161202 1352) ((emacs (24 4)) (m-buffer (0 13)) (dash (2 5 0)) (f (0 17 2)) (s (1 9 0))) "One buffer as a view of another" tar ((:commit . "678db9327209a1e6200c9272f4080595dc68f8a5"))]) (lenlen-theme . [(20170328 1945) ((color-theme-solarized (20150110))) "a solarized-based kawaii light theme" single ((:commit . "b8a6412c81633b10fb98ba0930f55b25071c084a") (:url . "http://hins11.yu-yake.com/"))]) (lemon-mode . [(20130216 504) nil "A major mode for editing lemon grammar files" single ((:commit . "155bfced6c9afc8072a0133d3d1baa54c6d67430") (:keywords "lemon"))]) (legalese . [(20150820 1024) nil "Add legalese to your program files" single ((:commit . "ec23e69d18329456beed9546a1d6c72f96db91cf") (:url . "https://github.com/jorgenschaefer/legalese") (:keywords "convenience"))]) (leerzeichen . [(20170422 613) nil "Minor mode to display whitespace characters." single ((:commit . "5acf9855ecb2b2cd5da4402bb48df149e7525cc5") (:url . "http://github.com/fgeller/leerzeichen.el") (:keywords "whitespace" "characters"))]) (ledger-mode . [(20170702 200) ((emacs (24 3))) "Helper code for use with the \"ledger\" command-line tool" tar ((:commit . "9dca096255f7ca92ff887d70b6c4c67ce3374ff1"))]) (leanote . [(20161222 1739) ((emacs (24 4)) (cl-lib (0 5)) (request (0 2)) (let-alist (1 0 3)) (pcache (0 4 0)) (s (1 10 0)) (async (1 9))) "A minor mode writing markdown leanote" single ((:commit . "d499e7b59bb1f1a2fabc0e4c26fb101ed62ebc7b") (:url . "https://github.com/aborn/leanote-emacs") (:keywords "leanote" "note" "markdown"))]) (ldap-mode . [(20091203 1015) nil "major modes for editing LDAP schema and LDIF files" single ((:commit . "8761a835e90b990fb5fe70173ecdcd6f4b776cb0") (:url . "http://www.loveshack.ukfsn.org/emacs") (:keywords "data"))]) (lcb-mode . [(20160815 2240) ((emacs (24))) "LiveCode Builder major mode" single ((:commit . "be0768e9aa6f9b8e76f2230f4f7f4d152a766b9a") (:url . "https://github.com/peter-b/lcb-mode") (:keywords "languages"))]) (lavender-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on Lavender (tmTheme)" single ((:commit . "d9e4d7838167a0e07fb5d04877a7b34c4b4cc1ee") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (launchctl . [(20150518 609) ((emacs (24 1))) "Interface to launchctl on Mac OS X." single ((:commit . "73f8f52a5aa9a0be9bdcf68c29ad0fa2b4a115a4") (:url . "http://github.com/pekingduck/launchctl-el") (:keywords "tools" "convenience"))]) (launch-mode . [(20170105 2112) ((emacs (24 4))) "Major mode for launch-formatted text" tar ((:commit . "25ebd4ba77afcbe729901eb74923dbe9ae81c313") (:url . "https://github.com/iory/launch-mode"))]) (launch . [(20130619 1504) nil "launch files with OS-standard associated applications." single ((:commit . "e7c3b573fc05fe4d3d322389079909311542e799") (:url . "https://github.com/sfllaw/emacs-launch") (:keywords "convenience" "processes"))]) (latex-unicode-math-mode . [(20170123 1016) nil "Input method for Unicode math symbols" tar ((:commit . "e8931e68214ca94e6a04080ebc629693d5881884") (:url . "https://github.com/Christoph-D/latex-unicode-math-mode"))]) (latex-preview-pane . [(20151023 1303) nil "Makes LaTeX editing less painful by providing a updatable preview pane" tar ((:commit . "1a0539ab70eaf5dd31c2c94773dddd6f437fed41"))]) (latex-pretty-symbols . [(20151112 244) nil "Display many latex symbols as their unicode counterparts" single ((:url . "https://bitbucket.org/mortiferus/latex-pretty-symbols.el") (:keywords "convenience" "display"))]) (latex-math-preview . [(20170522 1455) nil "preview LaTeX mathematical expressions." single ((:commit . "775887a89447dd19541b121161cc02e9799d0d3a") (:url . "https://gitlab.com/latex-math-preview/latex-math-preview") (:keywords "latex" "tex"))]) (latex-extra . [(20160328 1721) ((auctex (11 86 1)) (cl-lib (0 5))) "Adds several useful functionalities to LaTeX-mode." single ((:commit . "9e89c5548298394aa47a5087a8e79655105a6f3d") (:url . "http://github.com/Malabarba/latex-extra") (:keywords "tex"))]) (lastpass . [(20170418 1102) ((emacs (24 4)) (seq (1 9)) (cl-lib (0 5))) "LastPass command wrapper" single ((:commit . "ff05ae82b1073759989616caf362c85575fdfc58") (:url . "https://github.com/storvik/lastpass") (:keywords "extensions" "processes" "lpass" "lastpass"))]) (language-detection . [(20161123 1013) ((emacs (24)) (cl-lib (0 5))) "Automatic language detection from code snippets" single ((:commit . "54a6ecf55304fba7d215ef38a4ec96daff2f35a4") (:url . "https://github.com/andreasjansson/language-detection.el"))]) (langtool . [(20170606 432) ((cl-lib (0 3))) "Grammar check utility using LanguageTool" single ((:commit . "d976e4f0cadb2309b798540429558936f8f45889") (:url . "https://github.com/mhayashi1120/Emacs-langtool") (:keywords "docs"))]) (langdoc . [(20150217 2245) ((cl-lib (0 2))) "Help to define help document mode for various languages" single ((:commit . "2c7223bacb116992d700ecb19a60df5c09c63424") (:url . "https://github.com/tom-tan/langdoc/") (:keywords "convenience" "eldoc"))]) (lang-refactor-perl . [(20131122 1327) nil "Simple refactorings, primarily for Perl" single ((:commit . "691bd69639de6b7af357e3b7143563ececd9c497") (:url . "https://github.com/jplindstrom/emacs-lang-refactor-perl") (:keywords "languages" "refactoring" "perl"))]) (lacarte . [(20170307 837) nil "Execute menu items as commands, with completion." single ((:url . "https://www.emacswiki.org/emacs/download/lacarte.el") (:keywords "menu-bar" "menu" "command" "help" "abbrev" "minibuffer" "keys" "completion" "matching" "local" "internal" "extensions"))]) (labburn-theme . [(20170502 207) nil "A lab color space zenburn theme." single ((:commit . "e95334acd8a73fbe8e156f70e047014a87e92e66") (:url . "https://github.com/ksjogo/labburn-theme") (:keywords "theme" "zenburn"))]) (kwin . [(20150308 1112) nil "communicatewith the KWin window manager" single ((:commit . "d4f8f3593598b71ee596e0a87b2c1d6a912a9566") (:url . "http://github.com/reactormonk/kwin-minor-mode"))]) (kv . [(20140108 734) nil "key/value data structure functions" single ((:commit . "721148475bce38a70e0b678ba8aa923652e8900e") (:keywords "lisp"))]) (kurecolor . [(20161016 1827) ((emacs (24 1)) (s (1 0))) "color editing goodies for Emacs" single ((:commit . "2b2c6778d75ef90f42fdffbe3ba7e58fa661946a"))]) (kubernetes-evil . [(20170523 1517) ((kubernetes (0 11 3)) (evil (1 2 12))) "Kubernetes keybindings for evil-mode." single ((:commit . "560b65baef1c4f2bedffd8e767774b55dfc35594"))]) (kubernetes . [(20170523 1517) ((emacs (25 1)) (dash (2 12 0)) (magit (2 8 0))) "Magit-like porcelain for Kubernetes." tar ((:commit . "560b65baef1c4f2bedffd8e767774b55dfc35594"))]) (ksp-cfg-mode . [(20160521 1333) ((cl-lib (0 5))) "major mode for editing KSP CFG files" single ((:commit . "07a957512e66030e1b9f8ac0f259051386acb5b5") (:url . "http://github.com/lashtear/ksp-cfg-mode") (:keywords "data"))]) (kroman . [(20150827 1640) nil "Korean hangul romanization" single ((:commit . "90402b6ae40383e75d8ba97d66eee93eebf40f70") (:keywords "korean" "roman"))]) (kpm-list . [(20160310 1050) nil "An emacs buffer list that tries to intelligently group together buffers." single ((:commit . "6fb7db35f7dac7fb8f956c67ee2eea9d3fa54034") (:url . "https://github.com/KMahoney/kpm-list/"))]) (kotlin-mode . [(20170522 1524) ((emacs (24 3))) "Major mode for kotlin" single ((:commit . "e5ee4c4bd25a61e0f5067ca8939d1a3185909471") (:keywords "languages"))]) (kosmos-theme . [(20170502 1150) ((emacs (24))) "Black and lightgray theme with not so much syntax highlighting." single ((:commit . "616456d2376a75dc31190ad65137d179fbad4336") (:url . "https://github.com/habamax/kosmos-theme"))]) (korean-holidays . [(20170228 2045) nil "Korean holidays for calendar." single ((:commit . "6e94c2e071069aee9ed12ebbfd9b0ad863b8c78e") (:url . "https://github.com/tttuuu888/korean-holidays") (:keywords "calendar"))]) (kooten-theme . [(20161023 205) ((emacs (24 1))) "Dark color theme" single ((:commit . "d10197b4dd7af02cd14aeab2573c273a294798c3") (:url . "http://github.com/kootenpv/emacs-kooten-theme") (:keywords "themes"))]) (kolon-mode . [(20140122 334) nil "Syntax highlighting for Text::Xslate's Kolon syntax" single ((:commit . "5af0955e280ae991862189ebecd3937c5fc8fb9f") (:url . "https://github.com/samvtran/kolon-mode") (:keywords "xslate" "perl"))]) (kodi-remote . [(20170512 950) ((request (0 2 0)) (let-alist (1 0 4)) (json (1 4)) (elnode (20140203 1506))) "Remote Control for Kodi" single ((:commit . "fe750b9f71e9970e2f1331aabc31d7b6dc8a41d2") (:url . "http://github.com/spiderbit/kodi-remote.el") (:keywords "kodi" "tools" "convinience"))]) (know-your-http-well . [(20160208 1504) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar ((:commit . "3cc5ab6d2764ab7aacb1b6e026abaccbeb6c37f2"))]) (kixtart-mode . [(20150611 904) ((emacs (24))) "major mode for Kixtart scripting files" single ((:commit . "1c2356797e7b766bbaaa2b341176a8b10499cd79") (:url . "https://github.com/ryrun/kixtart-mode") (:keywords "languages"))]) (kiwix . [(20170508 1802) ((emacs (24 3)) (cl-lib (0 5))) "Kiwix interface and support." single ((:commit . "a62f9e7c17ab34b183b36ae63408123a75689a5b") (:url . "https://github.com/stardiviner/kiwix.el") (:keywords "kiwix" "wikipedia"))]) (kivy-mode . [(20160902 1041) nil "Emacs major mode for editing Kivy files" single ((:commit . "24647bd9cf7f9beb76fd92c1c8e0f15b3022243c"))]) (kite-mini . [(20160508 406) ((dash (2 11 0)) (websocket (1 5))) "Remotely evaluate JavaScript in the WebKit debugger" tar ((:commit . "48734092e735033ad7664a9933acd4556e095f79") (:url . "https://github.com/tungd/kite-mini.el") (:keywords "webkit"))]) (kite . [(20130201 1138) ((json (1 2)) (websocket (0 93 1))) "WebKit inspector front-end" tar ((:commit . "7ed74d1147a6ddd152d3da65dc30df3517d53144") (:keywords "tools"))]) (killer . [(20120808 422) nil "kill and delete text" single ((:commit . "7bbb223f875402a7b2abee4baa5a54f10bd97212") (:url . "http://github.com/tarsius/killer") (:keywords "convenience"))]) (kill-ring-search . [(20140422 855) nil "incremental search for the kill ring" single ((:commit . "23535b4a01a1cb1574604e36c49614e84e85c883") (:url . "http://nschum.de/src/emacs/kill-ring-search/") (:keywords "convenience" "matching"))]) (kill-or-bury-alive . [(20170518 2358) ((emacs (24 4)) (cl-lib (0 5))) "Precise control over buffer killing in Emacs" single ((:commit . "51daf55565034b8cb6aa3ca2aa0a827e31751041") (:url . "https://github.com/mrkkrp/kill-or-bury-alive") (:keywords "buffer" "killing" "convenience"))]) (kibit-helper . [(20150508 833) ((s (0 8)) (emacs (24))) "Conveniently use the Kibit Leiningen plugin from Emacs" single ((:commit . "16bdfff785ee05d8e74a5780f6808506d990cef7") (:url . "http://www.github.com/brunchboy/kibit-helper") (:keywords "languages" "clojure" "kibit"))]) (kfg . [(20140908 2238) ((f (0 17 1))) "an emacs configuration system" single ((:commit . "d2c9dd26618fb2f7bf1e7b6eae193b1cceba3c97") (:url . "https://github.com/abingham/kfg"))]) (keyword-search . [(20170309 2247) nil "browser keyword search from Emacs" tar ((:commit . "33682e93429027805ee7c51c5f6f608872b6f5dc") (:url . "https://github.com/juhp/keyword-search") (:keywords "web" "search" "keyword"))]) (keyswap . [(20160813 257) ((emacs (24 3))) "swap bindings between key pairs" single ((:commit . "cd682a7c4a8d64d6bae6a005db5045232e5e7b95") (:url . "http://github.com/hardenedapple/keyswap.el") (:keywords "convenience"))]) (keyset . [(20150219 2130) ((dash (2 8 0)) (cl-lib (0 5))) "A small library for structuring key bindings." single ((:commit . "41bbfc4dbed5de6ecf3ec1dba634c7c26241ca84") (:url . "https://github.com/HKey/keyset"))]) (keymap-utils . [(20170614 1134) ((cl-lib (0 3))) "keymap utilities" single ((:commit . "0130f32e5ade649dd2738206a80570e450906ef6") (:url . "https://github.com/tarsius/keymap-utils") (:keywords "convenience" "extensions"))]) (keyfreq . [(20160516 716) ((cl-lib (0 5))) "track command frequencies" single ((:commit . "9c665c8c219d18866403897936427bb408e3d6b9"))]) (keydef . [(20090428 1231) nil "a simpler way to define keys, with kbd syntax" single ((:commit . "dff2be9f58d12d8c6a490ad0c1b2b10b55528dc0") (:keywords "convenience" "lisp" "customization" "keyboard" "keys"))]) (keychain-environment . [(20170118 626) nil "load keychain environment variables" single ((:commit . "7c08e8c4c3ea4d6eaee12d710a56793771f837c5") (:url . "https://github.com/tarsius/keychain-environment") (:keywords "gnupg" "pgp" "ssh"))]) (key-seq . [(20150907 56) ((key-chord (0 6))) "map pairs of sequentially pressed keys to commands" single ((:commit . "e29b083a6427d061638749194fc249ef69ad2cc0") (:url . "http://github.com/vlevit/key-seq.el") (:keywords "convenience" "keyboard" "keybindings"))]) (key-leap . [(20160831 747) ((emacs (24 3))) "Leap between lines by typing keywords" single ((:commit . "b3f6ef15c8a13870475d5af159fa24b30f97dea0") (:url . "https://github.com/MartinRykfors/key-leap") (:keywords "point" "convenience"))]) (key-intercept . [(20140210 2349) nil "Intercept prefix keys" single ((:commit . "d9a60edb4ce893f2d3d94f242164fdcc62d43cf2") (:url . "http://github.com/tarao/key-intercept-el") (:keywords "keyboard"))]) (key-combo . [(20150324 739) nil "map key sequence to commands" single ((:commit . "2fb5c65bc82d5bd2964e2b163822429ab45d90a1") (:url . "https://github.com/uk-ar/key-combo") (:keywords "keyboard" "input"))]) (key-chord . [(20160227 438) nil "map pairs of simultaneously pressed keys to commands" single ((:commit . "72443e9ff3c4f1c3ccaced3130236801efde3d83") (:keywords "keyboard" "chord" "input"))]) (kerl . [(20150424 1305) nil "Emacs integration for kerl" single ((:commit . "1732ee26213f021bf040919c45ad276aafcaae14") (:url . "http://github.com/correl/kerl.el/") (:keywords "tools"))]) (kdeconnect . [(20161022 700) nil "An interface for KDE Connect" single ((:commit . "a91a045cd4aabd671b689361efa10f2e01ad8e8e") (:keywords "kdeconnect" "android"))]) (karma . [(20160220 445) ((pkg-info (0 4)) (emacs (24))) "Karma Test Runner Emacs Integration" single ((:commit . "31d3e7708246183d7ed0686be92bf23140af348c") (:url . "http://github.com/tonini/karma.el") (:keywords "language" "javascript" "js" "karma" "testing"))]) (kaomoji . [(20170311 2151) ((emacs (24 3)) (helm-core (1 9 1))) "Input kaomoji superb easily" tar ((:commit . "91ab93cc7455486182d5e7f88e03d0de44c9953e") (:url . "https://github.com/kuanyui/kaomoji.el") (:keywords "tools" "fun"))]) (kaolin-theme . [(20170618 919) ((emacs (24))) "A dark jade theme inspired by Sierra.vim" single ((:commit . "06ab7e6c00d6a176712f27b583fea3823c6c360e") (:url . "https://github.com/0rdy/kaolin-theme"))]) (kanji-mode . [(20160826 439) nil "View stroke order for kanji characters at cursor" tar ((:commit . "eda4f8666486689d36317db7dbda54fb73d3e3d2") (:url . "http://github.com/wsgac/kanji-mode "))]) (kanban . [(20170418 110) nil "Parse org-todo headlines to use org-tables as Kanban tables" single ((:keywords "outlines" "convenience"))]) (kakapo-mode . [(20160727 2136) ((cl-lib (0 5))) "TABS (hard or soft) for indentation (leading whitespace), and SPACES for alignment." single ((:commit . "bb6de027fb578df31652e58daa92522884ecc274") (:url . "https://github.com/listx/kakapo-mode") (:keywords "indentation"))]) (kaesar-mode . [(20160128 208) ((kaesar (0 1 4)) (cl-lib (0 3))) "Encrypt/Decrypt buffer by AES with password." single ((:commit . "d087075cb1a46c2c85cd075220e09b2eaef9b86e") (:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:keywords "data" "convenience"))]) (kaesar-file . [(20160128 208) ((kaesar (0 1 1))) "Encrypt/Decrypt file by AES with password." single ((:commit . "d087075cb1a46c2c85cd075220e09b2eaef9b86e") (:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:keywords "data" "files"))]) (kaesar . [(20160128 208) ((cl-lib (0 3))) "Another AES algorithm encrypt/decrypt string with password." single ((:commit . "d087075cb1a46c2c85cd075220e09b2eaef9b86e") (:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:keywords "data"))]) (jvm-mode . [(20150422 8) ((dash (2 6 0)) (emacs (24))) "Monitor and manage your JVMs" single ((:commit . "3355dbaf5b0185aadfbad24160399abb32c5bea0") (:url . "https://github.com/martintrojer/jvm-mode.el") (:keywords "convenience"))]) (jumplist . [(20151119 1945) ((cl-lib (0 5))) "Jump like vim jumplist or ex jumplist" single ((:commit . "c482d137d95bc5e1bcd790cdbde25b7f729b2502") (:url . "https://github.com/ganmacs/jumplist") (:keywords "jumplist" "vim"))]) (jump-to-line . [(20130122 853) nil "Jump to line number at point." single ((:commit . "01ef8c3529d85e6c59cc20840acbc4a8e8325bc8") (:keywords "jump" "line" "back" "file" "ruby" "csharp" "python" "perl"))]) (jump-char . [(20160505 851) nil "navigation by char" single ((:commit . "9c1c3618662e7b43d5937342816fd63b5a31e861") (:url . "https://github.com/lewang/jump-char"))]) (jump . [(20161126 1728) ((findr (0 7)) (inflections (2 4)) (cl-lib (0 5))) "build functions which contextually jump between files" single ((:commit . "95a9559bd301ff86fa3b72b15126dc4851ce4a69") (:url . "http://github.com/eschulte/jump.el") (:keywords "project" "convenience" "navigation"))]) (jumblr . [(20140908 1352) ((s (1 8 0)) (dash (2 2 0))) "an anagram game for emacs" tar ((:commit . "705c7286e09a307b2b7f60072a12ed45325657c0") (:url . "https://github.com/mkmcc/jumblr") (:keywords "anagram" "word game" "games"))]) (julia-shell . [(20161125 1110) ((julia-mode (0 3))) "Major mode for an inferior Julia shell" tar ((:commit . "583a0b2ca20461ab4356929fd0f2212c22341b69"))]) (julia-mode . [(20170607 537) nil "Major mode for editing Julia source code" single ((:commit . "f591c6d42e493d51f1522fd0449d6a62881adfad") (:url . "https://github.com/JuliaLang/julia") (:keywords "languages"))]) (judge-indent . [(20160609 622) nil "detect indent style (indent and tab widths) and change behavior of Emacs" single ((:keywords "indent" "tab"))]) (jtags . [(20160211 1229) nil "enhanced tags functionality for Java development" tar ((:commit . "b50daa48510f71e74ce0ec2eb85030896a79cf96") (:url . "http://jtags.sourceforge.net") (:keywords "languages" "tools"))]) (jsx-mode . [(20130908 1024) nil "major mode for JSX" single ((:commit . "47213429c09259126cddb5742482cfc444c70d50") (:url . "https://github.com/jsx/jsx-mode.el"))]) (jst . [(20150604 438) ((s (1 9)) (f (0 17)) (dash (2 10)) (pcache (0 3)) (emacs (24 4))) "JS test mode" single ((:commit . "2a3fd16c992f7790dc67134ef06a814c3d20579c") (:url . "https://github.com/cheunghy/jst-mode") (:keywords "js" "javascript" "jasmine" "coffee" "coffeescript"))]) (jss . [(20130508 723) ((emacs (24 1)) (websocket (0)) (js2-mode (0))) "An emacs interface to webkit and mozilla debuggers" tar ((:commit . "41749257aecf13c7bd6ed489b5ab3304d06e40bc") (:keywords "languages"))]) (json-snatcher . [(20150511 2047) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single ((:commit . "c4cecc0a5051bd364373aa499c47a1bb7a5ac51c") (:url . "http://github.com/sterlingg/json-snatcher"))]) (json-rpc . [(20170402 955) ((emacs (24 1)) (cl-lib (0 5))) "JSON-RPC library" single ((:commit . "e77a62012e4d6c946666eed3a17454d5c6f83367") (:url . "https://github.com/skeeto/elisp-json-rpc"))]) (json-reformat . [(20160212 53) nil "Reformatting tool for JSON" single ((:commit . "8eb6668ed447988aea06467ba8f42e1f2178246f") (:url . "https://github.com/gongo/json-reformat") (:keywords "json"))]) (json-navigator . [(20170606 34) ((emacs (24 3)) (hierarchy (0 6 0))) "View and navigate JSON structures" single ((:commit . "bc5634fc78d2e43ebd3c255350829877f3e4549c"))]) (json-mode . [(20170619 1701) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files." single ((:commit . "39ba450ba5dcc72e317e679a0b61d8aa94383966") (:url . "https://github.com/joshwnj/json-mode"))]) (jsfmt . [(20150727 1525) nil "Interface to jsfmt command for javascript files" single ((:commit . "68109120f553fbc651fafb6fc35ed83c3e79f8a6") (:url . "https://github.com/brettlangdon/jsfmt.el"))]) (jscs . [(20151015 1049) ((emacs (24 1)) (cl-lib (0 5))) "Consistent JavaScript editing using JSCS" single ((:commit . "9d39d0f2355e69a020bf76242504f3a33e013ccf") (:url . "https://github.com/papaeye/emacs-jscs") (:keywords "languages" "convenience"))]) (js3-mode . [(20160515 850) nil "An improved JavaScript editing mode" tar ((:commit . "229aeb374f1b1f3ee5c59b8ba3eebb6385c232cb") (:keywords "javascript" "languages"))]) (js2-refactor . [(20170525 544) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar ((:commit . "6ee315825b6f0424f15a8520733dc145c85ccd83"))]) (js2-mode . [(20170624 1249) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar ((:commit . "558f53f6b6749b09b03b858b0b1dfaeffbba4042") (:url . "https://github.com/mooz/js2-mode/") (:keywords "languages" "javascript"))]) (js2-highlight-vars . [(20170418 1129) ((emacs (24 4)) (js2-mode (20150908))) "highlight occurrences of the variable under cursor" single ((:commit . "e3bb177e50f76b272e8073a94d4f46be6512a163") (:url . "http://mihai.bazon.net/projects/editing-javascript-with-emacs-js2-mode/js2-highlight-vars-mode"))]) (js2-closure . [(20160715 1536) ((js2-mode (20150909))) "Google Closure dependency manager" single ((:commit . "2b99540f43ddae123014d0fe20c66f5b536312cd") (:url . "http://github.com/jart/js2-closure"))]) (js-import . [(20170115 853) ((emacs (24 4)) (f (0 19 0)) (projectile (0 14 0)) (dash (2 13 0))) "Import Javascript files from your current project or dependencies" single ((:commit . "7b1b7c963e3df9c76ed6cfb66c908c80775c6cfb") (:url . "https://github.com/jakoblind/js-import") (:keywords "tools"))]) (js-format . [(20170118 1702) ((emacs (24 1)) (js2-mode (20101228))) "Format or transform code style using NodeJS server with different javascript formatter" tar ((:commit . "544bda9be72b74ec2d442543ba60cff727d96669") (:url . "http://github.com/futurist/js-format.el") (:keywords "js" "javascript" "format" "standard" "jsbeautify" "esformatter" "airbnb"))]) (js-doc . [(20160714 2134) nil "Insert JsDoc style comment easily" single ((:commit . "f0606e89d5aa89146f96edb38cf69af0068a9d1e") (:url . "https://github.com/mooz/js-doc") (:keywords "document" "comment"))]) (js-comint . [(20170627 1952) nil "Run a JavaScript interpreter in an inferior process window." single ((:commit . "2c19fafed953ea0972ff086614f86614f4d5dc13") (:url . "https://github.com/redguardtoo/js-comint") (:keywords "javascript" "node" "inferior-mode" "convenience"))]) (js-auto-beautify . [(20161030 2209) ((web-beautify (0 3 1)) (web-mode (14 0 27))) "auto format you js/jsx file" single ((:commit . "180d15af7b5dfaab4ee1954cca2fdc797932f9de"))]) (jquery-doc . [(20150812 58) nil "jQuery api documentation interface for emacs" tar ((:commit . "24032284919b942ec27707d929bdd8bf48420062") (:keywords "docs" "jquery"))]) (jq-mode . [(20161128 748) ((emacs (24 3))) "Edit jq scripts." tar ((:commit . "f2dc70af890694828b8227b2727240e82780d7e5") (:url . "https://github.com/ljos/jq-mode"))]) (jpop . [(20170410 550) ((emacs (24)) (dash (2 11 0)) (cl-lib (0 5))) "Lightweight project caching and navigation framework" tar ((:commit . "7628b03260be96576b34459d45959ee77d8b2110") (:url . "https://github.com/domtronn/jpop.el") (:keywords "project" "convenience"))]) (jonprl-mode . [(20160818 1759) ((emacs (24 3)) (cl-lib (0 5)) (yasnippet (0 8 0))) "A major mode for editing JonPRL files" tar ((:commit . "6059bb64891fae45827174e044d6a87ac07172d8") (:keywords "languages"))]) (jknav . [(20121006 1325) nil "Automatically enable j/k keys for line-based navigation" single ((:commit . "861245715c728503dad6573278fdd75c271dbf8b") (:keywords "keyboard" "navigation"))]) (jist . [(20161229 921) ((emacs (24 4)) (dash (2 12 0)) (seq (1 11)) (let-alist (1 0 4)) (magit (2 1 0)) (request (0 2 0))) "Gist integration" single ((:commit . "da0692452e312a99bb27d8708504b521798aca48") (:url . "https://github.com/emacs-pe/jist.el") (:keywords "convenience"))]) (jira-markup-mode . [(20150601 1409) nil "Emacs Major mode for JIRA-markup-formatted text files" single ((:commit . "4fc534c47df26a2f402bf835ebe2ed89474a4062") (:url . "https://github.com/mnuessler/jira-markup-mode") (:keywords "jira" "markup"))]) (jira . [(20131210 1022) nil "Connect to JIRA issue tracking software" single nil]) (jinja2-mode . [(20141128 207) nil "A major mode for jinja2" single ((:commit . "cfaa7bbe7bb290cc500440124ce89686f3e26f86"))]) (jg-quicknav . [(20160216 2035) ((s (1 9 0)) (cl-lib (0 5))) "Quickly navigate the file system to find a file." single ((:commit . "1b598ee3d691b68dc64f1727a959eab538893d07") (:url . "https://github.com/jeffgran/jg-quicknav") (:keywords "navigation"))]) (jenkins-watch . [(20121004 1626) nil "Watch continuous integration build status" single ((:commit . "37b84dfbd98240a57ff798e1ff8bc7dba2913577") (:url . "https://github.com/ataylor284/jenkins-watch"))]) (jenkins . [(20160903 1556) ((dash (2 12)) (emacs (24 3)) (json (1 4))) "Minimalistic Jenkins client for Emacs" single ((:commit . "8a3c1849fcbac379ea88ba1c14f3a63bb9dd3244") (:keywords "jenkins" "convenience"))]) (jemdoc-mode . [(20170611 1536) ((emacs (24 3))) "Major mode for editing jemdoc files" single ((:commit . "0b09b0368acf3b90c9b58274ff8c2a1e77d1d5e1") (:url . "https://github.com/drdv/jemdoc-mode") (:keywords "convenience" "usability"))]) (jekyll-modes . [(20141117 514) ((polymode (0 2))) "Major modes (markdown and HTML) for authoring Jekyll content" single ((:commit . "7cb10b50fd2883e3f7b10fdfd98f19f2f0b2381c") (:url . "https://github.com/fred-o/jekyll-modes") (:keywords "docs"))]) (jedi-direx . [(20140310 236) ((jedi (0 1 2)) (direx (0 1 -3))) "Tree style source code viewer for Python buffer" single ((:commit . "7a2e677400717ed12b959cb5988e7b3fb1c12117"))]) (jedi-core . [(20170121 610) ((emacs (24)) (epc (0 1 0)) (python-environment (0 0 2)) (cl-lib (0 5))) "Common code of jedi.el and company-jedi.el" tar ((:commit . "b0764f425766786dfb1bff910ed1d1670f11eb9c"))]) (jedi . [(20160425 2156) ((emacs (24)) (jedi-core (0 2 2)) (auto-complete (1 4))) "a Python auto-completion for Emacs" single ((:commit . "b0764f425766786dfb1bff910ed1d1670f11eb9c"))]) (jdee . [(20170506 1514) ((emacs (24 3)) (flycheck (30)) (memoize (1 0 1)) (dash (2 13 0))) "Java Development Environment for Emacs" tar ((:commit . "5b0bcf6db09d6f6d4ec68c1f3d748d91f189b5ea") (:url . "http://github.com/jdee-emacs/jdee") (:keywords "java" "tools"))]) (jdecomp . [(20170224 1400) ((emacs (24 5))) "Interface to Java decompilers" single ((:commit . "692866abc83deedce62be8d6040cf24dda7fb7a8") (:url . "https://github.com/xiongtx/jdecomp") (:keywords "decompile" "java" "languages" "tools"))]) (jbeans-theme . [(20170413 901) ((emacs (24))) "Jbeans theme for GNU Emacs 24 (deftheme)" single ((:commit . "ee3c3b95e4a8697438d48757c604f9491b395417") (:url . "https://github.com/synic/jbeans-emacs"))]) (jazz-theme . [(20170411 711) nil "A warm color theme for Emacs 24+." single ((:commit . "b1cb78a97cc4050f19d88a89e455c3e52d98240e") (:url . "https://github.com/donderom/jazz-theme"))]) (jaword . [(20170425 2327) ((tinysegmenter (0 1))) "Minor-mode for handling Japanese words better" single ((:commit . "ac062b0e5ab4bd3270497e80aa0f3ac033a0493f") (:url . "http://hins11.yu-yake.com/"))]) (javap-mode . [(20120223 1408) nil "Javap major mode" single ((:commit . "864c1130e204b2072e1d19cd027b6fce8ebe6629") (:url . "http://github.com/hiredman/javap-mode"))]) (javadoc-lookup . [(20160213 1631) ((cl-lib (0 3))) "Javadoc Emacs integration with Maven" tar ((:commit . "507a2dd443d60b537b8f779c1847e2cd0ccd1382") (:url . "https://github.com/skeeto/javadoc-lookup"))]) (java-snippets . [(20160626 1952) ((yasnippet (0 8 0))) "Yasnippets for Java" tar ((:commit . "738523debb1018439bda0ce70e00248154a600ac") (:url . "https://github.com/nekop/yasnippet-java-mode"))]) (java-imports . [(20160311 1515) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Java imports" single ((:commit . "f1631adacdd9fcb7a92ee4fdfb9e592a1a9c3b0b") (:url . "http://www.github.com/dakrone/emacs-java-imports") (:keywords "java"))]) (jaunte . [(20130413 219) nil "Emacs Hit a Hint" single ((:commit . "b719c2d4d5d70640d70978b661863d10d6be06fc"))]) (jastadd-ast-mode . [(20161219 126) ((emacs (24))) "Major mode for editing JastAdd AST files" single ((:commit . "a29fdb470cbf0a398164950a3b0d2217de48e0c0") (:url . "https://github.com/rudi/jastadd-ast-mode") (:keywords "languages"))]) (jasminejs-mode . [(20150526 1705) nil "A minor mode for manipulating jasmine test files" tar ((:commit . "9f8044bf81ab5b4841a30b0bd099916e1b7ff54a") (:url . "https://github.com/stoltene2/jasminejs-mode") (:keywords "javascript" "jasmine"))]) (jar-manifest-mode . [(20160430 1726) nil "Major mode to edit JAR manifest files" single ((:commit . "270dae14c481300f75ed96dad3a5ae42ca928a1d") (:url . "http://github.com/omajid/jar-manifest-mode") (:keywords "convenience" "languages"))]) (jape-mode . [(20140903 806) nil "An Emacs editing mode mode for GATE's JAPE files" single ((:commit . "85b9182850707b5d107391f6caee5bd401507a7d") (:url . "http://github.com/tanzoniteblack/jape-mode") (:keywords "languages" "jape" "gate"))]) (japanlaw . [(20160129 20) ((cl-lib (0 5))) "Japan law from law.e-gov.go.jp" single ((:commit . "c160e195cda0e02a709a2d39c62bc2a1ed39a09a") (:keywords "docs" "help"))]) (japanese-holidays . [(20160927 2318) ((cl-lib (0 3))) "calendar functions for the Japanese calendar" single ((:commit . "0bccfac342d6ebda1c1a35c3babca0c800ff0c9b") (:url . "https://github.com/emacs-jp/japanese-holidays") (:keywords "calendar"))]) (jammer . [(20160310 59) nil "Punish yourself for using Emacs inefficiently" single ((:commit . "48aa795df6df7ae6484518bcd0398293ca49d7c6") (:url . "https://github.com/wasamasa/jammer") (:keywords "games"))]) (jade-mode . [(20160525 741) nil "Major mode for editing .jade files" single ((:commit . "4dbde92542fc7ad61df38776980905a4721d642e") (:url . "https://github.com/brianc/jade-mode"))]) (jack-connect . [(20141207 407) nil "Manage jack connections within Emacs" single ((:commit . "b00658dfe3d5d67431c18ffa693d5a3705067ba0"))]) (jabber-otr . [(20150918 444) ((emacs (24)) (jabber (0 8 92))) "Off-The-Record messaging for jabber.el" tar ((:commit . "2692b1530234e0ba9a0d6c1eaa1cbe8679f193c0") (:url . "https://github.com/legoscia/emacs-jabber-otr/") (:keywords "comm"))]) (jabber . [(20170106 1603) ((fsm (0 2))) "A Jabber client for Emacs." tar ((:commit . "2ef76cff4a5a932cf17dc6107a0c5adee806081e"))]) (j-mode . [(20140702 809) nil "Major mode for editing J programs" tar ((:commit . "caa55dfaae01d1875380929826952c2b3ef8a653") (:url . "http://github.com/zellio/j-mode") (:keywords "j" "langauges"))]) (iy-go-to-char . [(20141029 846) nil "Go to next CHAR which is similar to \"f\" and \"t\" in vim" single ((:commit . "04ab4f5f3a241cbbc9b8c178a22b412a62f632f9") (:url . "https://github.com/doitian/iy-go-to-char") (:keywords "navigation" "search"))]) (ix . [(20131027 929) ((grapnel (0 5 3))) "Emacs client for http://ix.io pastebin" single ((:commit . "aea4c54a5cc5a6f26637353c16a3a0e70fc76963") (:url . "http://www.github.com/theanalyst/ix.el"))]) (ivy-youtube . [(20170217 404) ((request (0 2 0)) (ivy (0 8 0)) (cl-lib (0 5))) "Query YouTube and play videos in your browser" single ((:commit . "7e916dd531c52a2809188a99716aeff8446056cc") (:url . "https://github.com/squiter/ivy-youtube") (:keywords "youtube" "multimedia" "mpv" "vlc"))]) (ivy-xcdoc . [(20160917 355) ((ivy (0 8 0)) (emacs (24 4))) "Search Xcode documents with ivy interface." single ((:commit . "5ea22af36c4c2737fb0bec53432c233482d8b314") (:url . "https://github.com/hex2010/emacs-ivy-xcdoc") (:keywords "ivy" "xcode" "xcdoc"))]) (ivy-todo . [(20170315 334) ((ivy (0 8 0)) (emacs (24 3))) "Manage org-mode TODOs with ivy" single ((:commit . "7c72deff0ffa15c7d9a3389bd4386aec2dec9372") (:url . "http://github.com/Kungsgeten/ivy-todo") (:keywords "convenience"))]) (ivy-rtags . [(20170522 2154) ((ivy (0 7 0)) (rtags (2 10))) "RTags completion back-end for ivy" single ((:commit . "7e6b6f21935eedbe4678ba91c5531ac162b51a5a") (:url . "http://rtags.net"))]) (ivy-rich . [(20170517 554) ((emacs (24 4)) (ivy (0 8 0))) "More friendly display transformer for ivy." single ((:commit . "9c36765a941b88c3aa0f4739ad2cb7207c453575") (:keywords "ivy"))]) (ivy-purpose . [(20160724 303) ((emacs (24)) (ivy (0 8)) (window-purpose (1 5))) "Ivy Interface for Purpose" single ((:commit . "0495f2f3aed64d7e0028125e76a9a68f8fc4107e") (:url . "https://github.com/bmag/ivy-purpose"))]) (ivy-pages . [(20160728 1220) ((emacs (24 1)) (ivy (0 8 0))) "Complete current buffer's pages with Ivy" single ((:commit . "47b03a1f9384502cf22369ff31a2898c863d3aff") (:url . "https://github.com/igorepst/ivy-pages") (:keywords "convenience" "matching"))]) (ivy-hydra . [(20170609 938) ((emacs (24 1)) (ivy (0 9 0)) (hydra (0 13 4))) "Additional key bindings for Ivy" single ((:commit . "203bfb1f95b43f0448ee6225e58930ccb333547f") (:url . "https://github.com/abo-abo/swiper") (:keywords "completion" "matching" "bindings"))]) (ivy-historian . [(20170416 2154) ((emacs (24 4)) (historian (20170111)) (ivy (0 8 0)) (flx (0 6 1))) "Persistently store selected minibuffer candidates" single ((:commit . "99e282bdd8994cb4e23185d9004b2cb42a214927") (:url . "https://github.com/PythonNut/historian.el") (:keywords "convenience" "ivy"))]) (ivy-gitlab . [(20160519 312) ((s (1 9 0)) (dash (2 9 0)) (ivy (0 8 0)) (gitlab (0 8))) "Ivy interface to Gitlab" single ((:commit . "730a86b770b0838c86e7080d8d502528e0c26792") (:url . "https://github.com/nlamirault/emacs-gitlab") (:keywords "gitlab" "ivy"))]) (ivy-erlang-complete . [(20170605 2046) ((async (1 9)) (counsel (0 8 0)) (ivy (0 8 0)) (erlang (19 2)) (emacs (24 4))) "Erlang context sensitive completion at point using ivy. It also support xref and eldoc." tar ((:commit . "117369f882f81fb9cc88459a4072a2789138c136"))]) (ivy-dired-history . [(20170625 2256) ((ivy (0 9 0)) (counsel (0 9 0)) (cl-lib (0 5))) "use ivy to open recent directories" single ((:commit . "c9c67ea1ee5e68443f0e6006ba162d6c8d868b69") (:url . "https://github.com/jixiuf/ivy-dired-history"))]) (ivy-bibtex . [(20170321 1306) ((swiper (0 7 0)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A bibliography manager based on Ivy" tar ((:commit . "13f27f3cfdf137bdb22addfc0c832ba1c8572c25"))]) (ivy . [(20170702 240) ((emacs (24 1))) "Incremental Vertical completYon" tar ((:commit . "bda5146b9c1badea1bf792b1a3ae5cd2a65519db") (:url . "https://github.com/abo-abo/swiper") (:keywords "matching"))]) (ivs-edit . [(20140720 346) ((emacs (24 3)) (dash (2 6 0)) (cl-lib (1 0))) "IVS (Ideographic Variation Sequence) editing tool" tar ((:commit . "c496e85f93f6f00e723d9df0ea0703f6c672826b") (:url . "http://github.com/kawabata/ivs-edit") (:keywords "text"))]) (ivariants . [(20140720 2127) ((emacs (24 3)) (ivs-edit (1 0))) "Ideographic variants editor and browser" tar ((:commit . "f9deff2e6fba5647f69771546fb2283136d0fb0d") (:url . "http://github.com/kawabata/ivariants") (:keywords "i18n" "languages"))]) (iterator . [(20170207 38) ((emacs (24)) (cl-lib (0 5))) "A library to create and use elisp iterators objects." single ((:commit . "9da54f9aed945b46866782cdf962c9e530419297") (:url . "https://github.com/thierryvolpiatto/iterator"))]) (itasca . [(20170601 922) ((emacs (24 3))) "Major modes for Itasca software data files." tar ((:commit . "3d15dd1b70d6db69b0f4758a3e28b8b506cc84ca") (:url . "http://github.com/jkfurtney/itasca-emacs/") (:keywords "itasca" "flac" "3dec" "udec" "flac3d" "pfc" "pfc2d" "pfc3d" "fish"))]) (itail . [(20161022 1431) nil "An interactive tail mode" single ((:commit . "129d7089fcf712c296706841afc5918955a83f19") (:url . "https://github.com/re5et/itail") (:keywords "tail"))]) (iss-mode . [(20141001 1213) nil "Mode for InnoSetup install scripts" single ((:commit . "3b517aff31529bab33f8d7b562bd17aff0107fd1"))]) (isgd . [(20150414 236) nil "Shorten URLs using the isgd.com shortener service" single ((:commit . "764306dadd5a9213799081a48aba22f7c75cca9a") (:url . "https://github.com/chmouel/isgd.el"))]) (isend-mode . [(20170208 110) nil "Interactively send parts of an Emacs buffer to an interpreter" single ((:commit . "95ba9e71390858bf706b148276f37428dd2774d2") (:url . "https://github.com/ffevotte/isend-mode.el"))]) (isearch-symbol-at-point . [(20130728 1521) nil "Use isearch to search for the symbol at point" single ((:commit . "51a1029bec1ec414885f9edb7e5947603dffdab2") (:url . "https://github.com/re5et/isearch-symbol-at-point") (:keywords "isearch"))]) (isearch-prop . [(20170303 1504) nil "Search text-property or overlay-property contexts." single ((:url . "https://www.emacswiki.org/emacs/download/isearch-prop.el") (:keywords "search" "matching" "invisible" "thing" "help"))]) (isearch-dabbrev . [(20141223 2222) ((cl-lib (0 5))) "Use dabbrev in isearch" single ((:commit . "1efe7abba4923015cbc2462395deaec5446a9cc8") (:url . "https://github.com/Dewdrops/isearch-dabbrev") (:keywords "dabbrev" "isearch"))]) (isearch+ . [(20170614 928) nil "Extensions to `isearch.el' (incremental search)." single ((:url . "https://www.emacswiki.org/emacs/download/isearch%2b.el") (:keywords "help" "matching" "internal" "local"))]) (irony-eldoc . [(20170502 1208) ((emacs (24)) (cl-lib (0 5)) (irony (0 1))) "irony-mode support for eldoc-mode" single ((:commit . "0df5831eaae264a25422b061eb2792aadde8b3f2") (:url . "https://github.com/ikirill/irony-eldoc") (:keywords "c" "c++" "objc" "convenience" "tools"))]) (irony . [(20170627 1045) ((cl-lib (0 5)) (json (1 2))) "C/C++ minor mode powered by libclang" tar ((:commit . "bf21cf4c442a930e6007b3ff5bd8af094318991f") (:url . "https://github.com/Sarcasm/irony-mode") (:keywords "c" "convenience" "tools"))]) (irfc . [(20130824 507) nil "Interface for IETF RFC document." single ((:url . "http://www.emacswiki.org/emacs/download/irfc.el") (:keywords "rfc" "ietf"))]) (iregister . [(20150515 1407) nil "Interactive register commands for Emacs." tar ((:commit . "6a48c66187289de5f300492be11c83e98410c018") (:url . "https://github.com/atykhonov/iregister.el") (:keywords "convenience"))]) (ir-black-theme . [(20130302 2355) nil "Port of ir-black theme" single ((:commit . "36e930d107604b5763c80294a6f92aaa02e6c272") (:keywords "faces"))]) (ipretty . [(20140406 2220) nil "Interactive Emacs Lisp pretty-printing" single ((:commit . "6f6da8907abea53d6d246d61e1a0f4ebeb0b9f38") (:url . "https://github.com/steckerhalter/ipretty") (:keywords "pretty-print" "elisp" "buffer"))]) (iplayer . [(20161120 1320) nil "Browse and download BBC TV/radio shows" single ((:commit . "b788fffa4b36bbd558047ffa6be51b1f0f462f23") (:url . "https://github.com/csrhodes/iplayer-el") (:keywords "multimedia" "bbc"))]) (ipcalc . [(20160927 220) ((cl-lib (0 5))) "IP subnet calculator" single ((:commit . "e92afd8b96592b6e2d65ba073bf87c9dd2408e91") (:url . "http://github.org/dotemacs/ipcalc.el") (:keywords "networking" "tools"))]) (iodine-theme . [(20151031 939) ((emacs (24))) "A light emacs color theme" single ((:commit . "02fb780e1d8d8a6b9c709bfac399abe1665c6999") (:url . "https://github.com/srdja/iodine-theme") (:keywords "themes"))]) (ioccur . [(20130821 2248) nil "Incremental occur" single ((:commit . "4c0ef992a6fcd2aed62e3866d56650463108ab5a") (:url . "https://github.com/thierryvolpiatto/ioccur"))]) (io-mode-inf . [(20140128 1134) nil "Interaction with an Io interpreter." single ((:commit . "6dd2bac3fd87484bb7d97e135b06c29d70b444b6") (:url . "https://github.com/slackorama/io-emacs") (:keywords "io" "languages"))]) (io-mode . [(20161004 56) nil "Major mode to edit Io language files in Emacs" single ((:commit . "fd65ae769093defcf554d6d637eba6e6dfc29f56") (:url . "https://github.com/superbobry/io-mode") (:keywords "languages" "io"))]) (interval-tree . [(20130325 707) ((dash (1 1 0))) "Interval tree data structure for 1D range queries" single ((:commit . "301302f480617091cf3ab6989caac385d52543dc") (:url . "https://github.com/Fuco1/interval-tree") (:keywords "extensions" "data structure"))]) (interval-list . [(20150327 1018) ((dash (2 4 0)) (cl-lib (0 5)) (emacs (24 4))) "Interval list data structure for 1D selections" single ((:commit . "38af7ecf0a493ad8f487074938a2a115f3531177") (:url . "https://github.com/Fuco1/interval-list") (:keywords "extensions" "data structure"))]) (intero . [(20170615 104) ((flycheck (0 25)) (company (0 8)) (emacs (24 4)) (haskell-mode (13 0))) "Complete development mode for Haskell" single ((:commit . "fe791fbefa4689c944a00a356b331ed0516c5cfe") (:url . "https://github.com/commercialhaskell/intero") (:keywords "haskell" "tools"))]) (interleave . [(20170630 22) nil "Interleaving text books since 2015" single ((:commit . "2c0458038bf0440f271f6e000039027be411eba7") (:url . "https://github.com/rudolfochrist/interleave"))]) (interaction-log . [(20160305 501) ((cl-lib (0))) "exhaustive log of interactions with Emacs" single ((:commit . "a49a06746d4df6bcfceec3c48dece065d635f9f9") (:url . "https://github.com/michael-heerdegen/interaction-log.el") (:keywords "convenience"))]) (intellij-theme . [(20170416 359) nil "Inspired by IntelliJ's default theme" single ((:commit . "ad207c8c3d266d566fb1e4862df154096c059171") (:keywords "faces"))]) (instapaper . [(20130104 621) nil "add URLs to instapaper from emacs" single ((:url . "htts://bitbucket.org/jfm/emacs-instapaper"))]) (insfactor . [(20141116 1602) nil "Client for a Clojure project with insfactor in it" single ((:commit . "7ef5446cebb08a17d4106d2e6f3c053e49e1e829") (:url . "http://github.com/duelinmarkers/insfactor.el") (:keywords "clojure"))]) (insert-shebang . [(20160626 409) nil "Insert shebang line automatically." single ((:commit . "d5a827ce9ee1bdabb7561203a3e774ca599514c1") (:url . "http://github.com/psachin/insert-shebang") (:keywords "shebang" "tool" "convenience"))]) (inlineR . [(20120520 732) nil "insert Tag for inline image of R graphics" single ((:commit . "29357186beca825e3d0451b700ec09b9ed65e37b") (:url . "https://github.com/myuhe/inlineR.el") (:keywords "convenience" "iimage.el" "cacoo.el"))]) (inline-docs . [(20170522 2150) ((emacs (24 3))) "Show inline contextual docs." single ((:commit . "b57f1681be6147f999cdc12abff414a0442e8897") (:url . "https://github.com/stardiviner/inline-docs.el") (:keywords "inline" "docs" "overlay"))]) (inline-crypt . [(20130409 507) nil "Simple inline encryption via openssl" tar ((:commit . "497ce9dc29a8ccac0b6dd6854f5d120514350282"))]) (inkpot-theme . [(20170602 1000) nil "port of vim's inkpot theme" single ((:commit . "d9e97a2b95a7740c8eb72fa795fface8b1500fd0") (:url . "https://github.com/ideasman42/emacs-inkpot-theme") (:keywords "color" "theme"))]) (ink-mode . [(20160814 416) ((emacs (24 3))) "Major mode for writing interactive fiction in Ink" single ((:commit . "e35f26abbaf8ea23c5aa0a0c7ef15334cdfb7b48") (:url . "http://github.com/Kungsgeten/ink-mode") (:keywords "languages"))]) (initsplit . [(20160919 1118) nil "code to split customizations into different files" single ((:commit . "c941d436eb2b10b01c76a582c5a2b23fb30751aa") (:url . "http://www.gci-net.com/users/j/johnw/emacs.html") (:keywords "lisp"))]) (init-open-recentf . [(20161206 645) ((emacs (24 4))) "Open recentf immediately after Emacs is started" single ((:commit . "7d8fb124806291f7f6ef2ec3a664ea25899b6d68") (:url . "https://github.com/zonuexe/init-open-recentf.el") (:keywords "files" "recentf" "after-init-hook"))]) (init-loader . [(20160528 615) nil "Loader for configuration files" single ((:commit . "287da99eadfa3dd85492506db43d68324069b593") (:url . "https://github.com/emacs-jp/init-loader/"))]) (ini-mode . [(20170424 209) nil "Major mode for Windows-style ini files." single ((:commit . "2194cfa2fd13196a37350ec20b3f00dcf6162b7c") (:url . "https://github.com/Lindydancer/ini-mode") (:keywords "languages" "faces"))]) (inherit-local . [(20170409 949) ((emacs (24 3))) "Inherited buffer-local variables" single ((:commit . "b1f4ff9c41f9d64e4adaf5adcc280b82f084cdc7") (:url . "https://github.com/shlevy/inherit-local/tree-master/"))]) (inform7-mode . [(20131009 2354) ((sws-mode (0 1))) "Major mode for editing Inform 7 source files" single ((:commit . "42458733947f2fbd44bc78f7264be247a5d8980b") (:keywords "inform" "inform7" "interactive fiction"))]) (info-buffer . [(20170112 622) nil "Display info topics in separate buffers" single ((:commit . "d35dad6e766c6e2ddb8dc6acb4ce5b6e10fbcaa7") (:url . "http://www.github.com/llvilanova/info-buffer") (:keywords "docs" "info"))]) (info+ . [(20170303 1500) nil "Extensions to `info.el'." single ((:url . "https://www.emacswiki.org/emacs/download/info%2b.el") (:keywords "help" "docs" "internal"))]) (inflections . [(20161126 1727) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" single ((:commit . "95a9559bd301ff86fa3b72b15126dc4851ce4a69") (:url . "https://github.com/eschulte/jump.el") (:keywords "languages" "tools" "wp"))]) (inferior-spim . [(20160826 646) nil "inferior mode for spim." single ((:commit . "fb9aa091f6058bf320793f1a608c1ed7322c1f47") (:keywords "spim" "inferior" "mips"))]) (inf-ruby . [(20170615 335) nil "Run a Ruby process in a buffer" single ((:commit . "c14a68d1643ac3f439234da6a8275b48cae970d3") (:url . "http://github.com/nonsequitur/inf-ruby") (:keywords "languages" "ruby"))]) (inf-php . [(20130414 21) ((php-mode (1 5 0))) "Run a php interactive shell in a buffer" single ((:commit . "4396022d6e169f0cf30cd9f68ca575d8b30c418a") (:url . "https://github.com/taksatou/inf-php") (:keywords "languages" "php"))]) (inf-mongo . [(20160815 216) nil "Run a MongoDB shell process in a buffer" single ((:commit . "649dc6ea8e468f1d8109568548eb222c71486dbf") (:url . "http://github.com/endofunky/inf-mongo") (:keywords "databases" "mongodb"))]) (inf-clojure . [(20170620 808) ((emacs (24 4)) (clojure-mode (5 6))) "Run an external Clojure process in an Emacs buffer" single ((:commit . "74e84231ec9565c4420019b913e3f16521dea542") (:url . "http://github.com/clojure-emacs/inf-clojure") (:keywords "processes" "clojure"))]) (indy . [(20150610 1006) nil "A minor mode and EDSL to manage your mode's indentation rules." single ((:commit . "4604867d8111f0e186a5351e68e054a77cb14abf") (:keywords "convenience" "matching" "tools"))]) (indium . [(20170626 312) ((emacs (25)) (seq (2 16)) (js2-mode (20140114)) (company (0 9 0)) (websocket (1 6))) "JavaScript Awesome Development Environment" tar ((:commit . "4747a94cf823deb5623368f71f2012f8c5fdc156") (:url . "https://github.com/NicolasPetton/indium") (:keywords "tools" "javascript"))]) (indicators . [(20161211 326) ((dash (2 13 0)) (cl-lib (0 5 0))) "Display the buffer relative location of line in the fringe." single ((:commit . "f62a1201f21453e3aca93f48483e65ae8251432e") (:url . "https://github.com/Fuco1/indicators.el") (:keywords "fringe" "frames"))]) (indent-tools . [(20170608 647) ((s (0)) (hydra (0)) (yafolding (0))) "Indent, navigate (and more) by blocks of indentation: yaml, python etc." tar ((:commit . "8d2072eef1fdc87e35f7495adfbfa0beb9faf6b7") (:url . "https://gitlab.com/emacs-stuff/indent-tools/") (:keywords "indentation" "movements" "navigation" "kill" "fold" "yaml" "python"))]) (indent-guide . [(20170221 327) nil "show vertical lines to guide indentation" single ((:commit . "d64f43011c72068e008621e620009ec592b35913") (:url . "http://hins11.yu-yake.com/"))]) (importmagic . [(20170702 1844) ((f (0 11 0)) (epc (0 1 0)) (emacs (24 3))) "Fix Python imports using importmagic." tar ((:commit . "ab9e5c260a2044578597a467eff59e5598a7ef1c") (:url . "https://github.com/anachronic/importmagic.el") (:keywords "languages" "convenience"))]) (import-popwin . [(20170218 607) ((emacs (24 3)) (popwin (0 6))) "popwin buffer near by import statements with popwin" single ((:commit . "bb05a9e226f8c63fe7b18a3e92010357049ab5ba") (:url . "https://github.com/syohex/emacs-import-popwin"))]) (import-js . [(20161220 508) ((grizzl (0 1 0)) (emacs (24))) "Import Javascript dependencies" single ((:commit . "15d395126f57408d770a72db2e5f43271f90fa52") (:url . "http://github.com/Galooshi/emacs-import-js/") (:keywords "javascript"))]) (impatient-mode . [(20170505 1921) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar ((:commit . "11600a8441a1c0339252b0c19f151ccac3ee96c7") (:url . "https://github.com/netguy204/imp.el"))]) (immutant-server . [(20140311 1508) nil "Run your Immutant server in Emacs" single ((:commit . "2a21e65588acb6a976f2998e30b21fdabdba4dbb") (:url . "http://www.github.com/leathekd/immutant-server.el"))]) (immortal-scratch . [(20160517 1418) nil "respawn the scratch buffer when it's killed" single nil]) (imgur . [(20120307 225) ((anything (1 287))) "imgur client for Emacs" single ((:commit . "ed952eb8f556c6fc0d982e2a689083504558cffb") (:keywords "multimedia" "convenience"))]) (imgix . [(20141226 1332) ((json (1 2)) (ht (2 0)) (s (1 9 0)) (dash (2 9 0)) (cl-lib (0 5))) "Major mode for editing images in emacs via imgix" tar ((:commit . "4906ff0b4f7c9e84a5beb81630fe6d522ec91eaa") (:keywords "images" "image processing" "image editing" "sepia" "blur"))]) (imenus . [(20170217 47) ((cl-lib (0 5))) "Imenu for multiple buffers and without subgroups" single ((:commit . "7eea33f0aeca0737b3d7d87aeb67073ef4b5d978") (:url . "https://github.com/alezost/imenus.el") (:keywords "tools" "convenience"))]) (imenu-list . [(20170215 125) ((cl-lib (0 5))) "Show imenu entries in a seperate buffer" single ((:commit . "999fc0ec7f03b56be8e2a6e673d9473f51e5a92f") (:url . "https://github.com/bmag/imenu-list"))]) (imenu-anywhere . [(20160831 356) ((cl-lib (0 5))) "ido/ivy/helm imenu across same mode/project/etc buffers" single ((:commit . "94bab9136e1264e98a10d9325ad53d735307f8f3") (:url . "https://github.com/vitoshka/imenu-anywhere") (:keywords "ido" "imenu" "tags"))]) (imenu+ . [(20170303 1457) nil "Extensions to `imenu.el'." single ((:url . "https://www.emacswiki.org/emacs/download/imenu%2b.el") (:keywords "tools" "menus"))]) (imapfilter . [(20161008 1357) nil "run the imapfilter executable" single ((:commit . "a879ddc36fedc30311693f308f414c520fdfc370") (:url . "https://github.com/tarsius/imapfilter") (:keywords "mail"))]) (imakado . [(20141024 223) nil "imakado's usefull macros and functions" single ((:commit . "00a1e7eea2cb9e9066343a23927d6c747707902f") (:url . "https://github.com/imakado/emacs-imakado") (:keywords "convenience"))]) (image-dired+ . [(20150429 2244) ((cl-lib (0 3))) "Image-dired extensions" single ((:commit . "b68094625d963056ad64e0e44af0e2266b2eadc7") (:url . "https://github.com/mhayashi1120/Emacs-image-diredx") (:keywords "extensions" "multimedia"))]) (image-archive . [(20150620 1832) ((emacs (24)) (cl-lib (0 5))) "Image thumbnails in archive file with non-blocking" single ((:commit . "8d29535bd832329ffeeac780aae7aa8919af1175") (:url . "https://github.com/mhayashi1120/Emacs-image-archive") (:keywords "multimedia"))]) (image+ . [(20150707 916) ((cl-lib (0 3))) "Image manipulate extensions for Emacs" single ((:commit . "6834d0c09bb4df9ecc0d7a559bd7827fed48fffc") (:url . "https://github.com/mhayashi1120/Emacs-imagex") (:keywords "multimedia" "extensions"))]) (igv . [(20141210 427) nil "Control Integrative Genomic Viewer within Emacs" single ((:commit . "47ac6ceede252f451348a2c696398c0cb5279555"))]) (igrep . [(20130824 507) nil "An improved interface to `grep` and `find`" single ((:keywords "tools" "processes" "search"))]) (ignoramus . [(20160414 709) nil "Ignore backups, build files, et al." single ((:commit . "b37dc7c07edd9d152436f9019c14df158b599be3") (:url . "http://github.com/rolandwalker/ignoramus") (:keywords "convenience" "tools"))]) (iflipb . [(20170527 839) nil "interactively flip between recently visited buffers" single ((:commit . "e19229473be70e55c56a26ccc26c4e11e8be6389") (:url . "https://github.com/jrosdahl/iflipb"))]) (ietf-docs . [(20150928 257) nil "Fetch, Cache and Load IETF documents" single ((:commit . "ede30d6d26044069e1731fd20c0ab2324552c0b4") (:url . "https://github.com/choppsv1/ietf-docs") (:keywords "ietf" "rfc"))]) (iedit . [(20161228 2111) nil "Edit multiple regions in the same way simultaneously." tar ((:commit . "03b647be8bd35ca82916f2ace27a95d5b85e8ecf") (:url . "http://www.emacswiki.org/emacs/Iedit") (:keywords "occurrence" "region" "simultaneous" "refactoring"))]) (ids-edit . [(20170628 810) ((emacs (24 3))) "IDS (Ideographic Description Sequence) editing tool" tar ((:commit . "3c133ce0074274bb6cf70566ba68a14047cdd61e") (:url . "http://github.com/kawabata/ids-edit") (:keywords "text"))]) (idris-mode . [(20170628 1231) ((emacs (24)) (prop-menu (0 1)) (cl-lib (0 5))) "Major mode for editing Idris code" tar ((:commit . "e4347cfb75e4efdb43b52b01bd759c84aba84804") (:url . "https://github.com/idris-hackers/idris-mode") (:keywords "languages"))]) (idomenu . [(20141123 1320) nil "imenu tag selection a la ido" single ((:commit . "4b0152d606360c70204fb4c27f68de79ca885386"))]) (ido-yes-or-no . [(20161108 1551) ((ido-completing-read+ (0))) "Use Ido to answer yes-or-no questions" single ((:commit . "c55383b1fce5879e87e7ca6809fc60534508e182") (:url . "https://github.com/DarwinAwardWinner/ido-yes-or-no") (:keywords "convenience" "completion" "ido"))]) (ido-vertical-mode . [(20160429 1037) nil "Makes ido-mode display vertically." single ((:commit . "b42e4227ed5d37b5d840a9d9d1cdaabf50e189b1") (:url . "https://github.com/creichert/ido-vertical-mode.el") (:keywords "convenience"))]) (ido-ubiquitous . [(20170530 1839) ((emacs (24 1)) (ido-completing-read+ (3 17)) (cl-lib (0 5))) "Use ido (nearly) everywhere." single ((:commit . "595ca2ecb33a300640dc6a7b420a6f51c51a9d40") (:url . "https://github.com/DarwinAwardWinner/ido-ubiquitous") (:keywords "convenience" "completion" "ido"))]) (ido-springboard . [(20170105 2355) nil "Temporarily change default-directory for one command" single ((:commit . "263a8cd4582c81bfc29d7db37d5267e2488b148c") (:url . "https://github.com/jwiegley/springboard") (:keywords "ido"))]) (ido-sort-mtime . [(20131117 530) nil "Sort Ido's file list by modification time" single ((:commit . "7b7c77f6856125a59aff99ba0ff8d2b369896b5e") (:keywords "convenience" "files"))]) (ido-skk . [(20151111 150) ((emacs (24 4)) (ddskk (20150912 1820))) "ido interface for skk henkan" single ((:commit . "89a2e62799bff2841ff634517c86084c4ce69246") (:url . "https://github.com/tsukimizake/ido-skk") (:keywords "languages"))]) (ido-select-window . [(20131220 1247) ((emacs (24 1))) "Select a window using ido and buffer names" single ((:commit . "a64707d8d154664d50d12e26417d586e4c3dd78b") (:url . "https://github.com/pjones/ido-select-window"))]) (ido-occur . [(20160820 740) ((dash (2 13 0))) "Yet another `occur' with `ido'." single ((:commit . "522af5d55b3d4cd6885f3b4100913566c202cec4") (:url . "https://github.com/danil/ido-occur") (:keywords "inner" "buffer" "search"))]) (ido-occasional . [(20150214 448) ((emacs (24 1))) "Use ido where you choose." single ((:commit . "d405f1795e1e0c63be411ee2825184738d29c33a") (:url . "https://github.com/abo-abo/ido-occasional") (:keywords "completion"))]) (ido-migemo . [(20150921 1544) ((migemo (1 9 1))) "Migemo plug-in for Ido" single ((:commit . "e71114a92dd69cb46abf3fb71a09ce27506fcf77") (:url . "https://github.com/myuhe/ido-migemo.el") (:keywords "files"))]) (ido-load-library . [(20140611 900) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Load-library alternative using ido-completing-read" single ((:commit . "e03b55957c93aa1a7dd190e173e16ec59dbb2ba7") (:url . "http://github.com/rolandwalker/ido-load-library") (:keywords "maint" "completion"))]) (ido-hacks . [(20150331 1209) nil "Put more IDO in your IDO" single ((:commit . "b7e7514a0e011e4d767d1f5755c5eae9d85f83dc") (:keywords "convenience"))]) (ido-grid-mode . [(20160122 339) ((emacs (24 4))) "Display ido-prospects in the minibuffer in a grid." single ((:commit . "7cfca3988a6dc3ad18e28abe114218095ff2366f") (:url . "https://github.com/larkery/ido-grid-mode.el") (:keywords "convenience"))]) (ido-gnus . [(20140216 846) ((gnus (5 13))) "Access gnus groups or servers using ido" single ((:commit . "f5fe3f6aa8086f675ba216abace9e3d5f2e3a089") (:url . "https://github.com/vapniks/ido-gnus") (:keywords "comm"))]) (ido-flex-with-migemo . [(20170319 431) ((flx-ido (0 6 1)) (migemo (1 9 1)) (emacs (24 4))) "use ido with flex and migemo" single ((:commit . "c620934f50b9713693eba8e23f88c2aaa8510708") (:url . "https://github.com/ROCKTAKEY/ido-flex-with-migemo") (:keywords "matching"))]) (ido-exit-target . [(20150904 737) ((emacs (24 4))) "Commands and keys for selecting other window and frame targets within ido" single ((:commit . "322520c665284ce6547eb9dcd3aa888a02a51489") (:url . "https://github.com/waymondo/ido-exit-target") (:keywords "convenience" "tools" "extensions"))]) (ido-describe-bindings . [(20161023 402) ((dash (2 13 0))) "Yet another `describe-bindings' with `ido'." single ((:commit . "a142ff1c33df23ed9665497d0dcae2943b3c706a") (:url . "https://github.com/danil/ido-describe-bindings") (:keywords "help"))]) (ido-completing-read+ . [(20170601 559) ((emacs (24 1)) (cl-lib (0 5))) "A completing-read-function using ido" single ((:commit . "595ca2ecb33a300640dc6a7b420a6f51c51a9d40") (:url . "https://github.com/DarwinAwardWinner/ido-ubiquitous") (:keywords "ido" "completion" "convenience"))]) (ido-complete-space-or-hyphen . [(20130228 208) nil "Complete SPACE or HYPHEN when type SPACE in ido" single ((:commit . "3fe1fe1e1a743f8deb8f4025977647afecd58f14") (:url . "https://github.com/doitian/ido-complete-space-or-hyphen") (:keywords "ido" "completion"))]) (ido-clever-match . [(20151011 1026) ((emacs (24 4)) (cl-lib (0 5))) "Alternative matcher for ido." single ((:commit . "f173473e99c8b0756f12e4cc8f67e68fa59eadd3") (:url . "https://github.com/Bogdanp/ido-clever-match") (:keywords "ido" "flex"))]) (ido-at-point . [(20151021 57) ((emacs (24))) "ido-style completion-at-point" single ((:commit . "e5907bbe8a3d148d07698b76bd994dc3076e16ee") (:url . "https://github.com/katspaugh/ido-at-point") (:keywords "convenience" "abbrev"))]) (idle-require . [(20090715 1503) nil "load elisp libraries while Emacs is idle" single ((:commit . "33592bb098223b4432d7a35a1d65ab83f47c1ec1") (:url . "http://nschum.de/src/emacs/idle-require/") (:keywords "internal"))]) (idle-highlight-mode . [(20120920 948) nil "highlight the word the point is on" single ((:commit . "c466f2a9e291f9da1167dc879577b2e1a7880482") (:url . "http://www.emacswiki.org/cgi-bin/wiki/IdleHighlight") (:keywords "convenience"))]) (identica-mode . [(20130204 1453) nil "Major mode API client for status.net open microblogging" tar ((:commit . "cf9183ee11ac922e85c7c908f04e2d00b03111b3") (:url . "http://blog.gabrielsaldana.org/identica-mode-for-emacs/") (:keywords "identica" "web"))]) (idea-darkula-theme . [(20160416 1603) ((emacs (24 1))) "Color theme based on IntelliJ IDEA Darkula color theme" single ((:commit . "52602d9b91883e1f297d000951aeed48bf60176e") (:url . "http://github.com/fourier/idea-darkula-theme") (:keywords "themes"))]) (id-manager . [(20170320 546) nil "id-password management" single ((:commit . "14ebc35db298aac4dedc8aa188bc46bacab81f3b") (:keywords "password" "convenience"))]) (icomplete+ . [(20170303 1456) nil "Extensions to `icomplete.el'." single ((:url . "https://www.emacswiki.org/emacs/download/icomplete%2b.el") (:keywords "help" "abbrev" "internal" "extensions" "local" "completion" "matching"))]) (icicles . [(20170625 1911) nil "Minibuffer input completion and cycling." tar ((:url . "https://www.emacswiki.org/emacs/download/icicles.el") (:keywords "extensions" "help" "abbrev" "local" "minibuffer" "projects" "keys" "apropos" "completion" "matching" "regexp" "command"))]) (ibuffer-vc . [(20161103 2358) ((cl-lib (0 2))) "Group ibuffer's list by VC project, or show VC status" single ((:commit . "de75fb3345384fe13d0500435241ca4a056f5fc7") (:url . "http://github.com/purcell/ibuffer-vc") (:keywords "themes"))]) (ibuffer-tramp . [(20151118 939) nil "Group ibuffer's list by TRAMP connection" single ((:commit . "41fab2ad174f53a4cf5ef7d2ebef518dede82ab4") (:url . "http://github.com/svend/ibuffer-tramp") (:keywords "convenience"))]) (ibuffer-rcirc . [(20150215 1318) ((cl-lib (0 2))) "Ibuffer integration for rcirc" single ((:commit . "8a4409b1c679d65c819dee4085faf929840e79f8") (:url . "https://github.com/fgallina/ibuffer-rcirc") (:keywords "buffer" "convenience" "comm"))]) (ibuffer-projectile . [(20170410 1452) ((projectile (0 11 0))) "Group ibuffer's list by projectile root" single ((:commit . "a004cd0121ab15a00311631289fc6a8c7a86a897") (:url . "http://github.com/purcell/ibuffer-projectile") (:keywords "themes"))]) (ibuffer-git . [(20110508 31) nil "show git status in ibuffer column" single ((:commit . "d326319c05ddb8280885b31f9094040c1b365876") (:keywords "convenience"))]) (iasm-mode . [(20131004 1644) nil "interactive assembly major mode." single ((:commit . "6b404ff94bbfe971b3614007c8e5dcd5757c5727") (:url . "https://github.com/RAttab/iasm-mode") (:keywords ":" "tools"))]) (i3wm . [(20170116 1825) nil "i3wm integration library" single ((:commit . "7daad9bcbb545ed5cd75706eef56172cef1498cf") (:url . "https://git.flintfam.org/swf-projects/emacs-i3") (:keywords "convenience" "extensions"))]) (i2b2-mode . [(20140709 1804) nil "Highlights corresponding PHI data in the text portion of an i2b2 XML Document." single ((:commit . "db10efcfc8bed369a516bbf7526ede41f98cb95a") (:keywords "xml" "phi" "i2b2" "deidi2b2"))]) (hydra . [(20170325 815) ((cl-lib (0 5))) "Make bindings that stick around." tar ((:commit . "38ce88a9c3be11b0431080078095159b2211ca7a") (:url . "https://github.com/abo-abo/hydra") (:keywords "bindings"))]) (hyde . [(20160507 2008) nil "Major mode to help create and manage Jekyll blogs" tar ((:commit . "a8cd6ed00ecd8d7de0ded2f4867015b412b15b76"))]) (hydandata-light-theme . [(20160815 2118) nil "A light color theme that is easy on your eyes" single ((:commit . "0fbc91678ef65e1f65d7ec6792ff0b2f104d16a9") (:keywords "color-theme" "theme"))]) (hyai . [(20170301 647) ((cl-lib (0 5)) (emacs (24))) "Haskell Yet Another Indentation" single ((:commit . "e9a7e945fed12d8e664e898cf8b434b0376d5d80") (:url . "https://github.com/iquiw/hyai"))]) (hy-mode . [(20170621 1354) nil "Major mode for Hy code" single ((:commit . "f34bc19e9a58c7014c1f672d0655d2edee997ad2") (:url . "http://github.com/hylang/hy-mode") (:keywords "languages" "lisp"))]) (hungry-delete . [(20170411 1802) nil "hungry delete minor mode" single ((:commit . "0434458d3f6b2b585f332271feaa054bf4ec96d7") (:url . "http://github.com/nflath/hungry-delete"))]) (hungarian-holidays . [(20161020 438) nil "Adds a list of Hungarian public holidays to Emacs calendar" single ((:commit . "653108769279499d84a79267c90e640d98823872") (:keywords "calendar"))]) (hugsql-ghosts . [(20170612 1223) ((s (1 9 0)) (dash (2 10 0)) (cider (0 14 0))) "Display ghostly hugsql defqueries inline" single ((:commit . "9d76acb41333c6377c7fe79e936008d10fe55420") (:url . "https://github.com/rkaercher/hugsql-ghosts"))]) (httprepl . [(20141101 1034) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "An HTTP REPL" single ((:commit . "cfa3693267a8ed1c96a86a126823f37dbfe077d8") (:url . "https://github.com/gregsexton/httprepl.el") (:keywords "http" "repl"))]) (httpcode . [(20121001 2045) nil "explains the meaning of an HTTP status code" single ((:commit . "a45e735082b09477cd704a99294d336cdbeb12ba") (:url . "http://github.com/rspivak/httpcode.el"))]) (http-twiddle . [(20160801 1211) nil "send & twiddle & resend HTTP requests" single ((:commit . "4d0c73b7dcbde8b483d4f3a75c49c74d2fe3ca45") (:url . "https://github.com/hassy/http-twiddle/blob/master/http-twiddle.el") (:keywords "http" "rest" "soap"))]) (http-post-simple . [(20131010 2058) nil "HTTP POST requests using the url library" single ((:commit . "1c7b06cb0d6930aaaf3f319d9836786d40f1595f") (:keywords "comm" "data" "processes" "hypermedia"))]) (http . [(20170603 1107) ((emacs (24 4)) (request (0 2 0)) (edit-indirect (0 1 4))) "Yet another HTTP client" single ((:commit . "19317fcc928bb75e0464e39032af1627b7961a0c") (:url . "https://github.com/emacs-pe/http.el") (:keywords "convenience"))]) (htmlize . [(20161211 1019) nil "Convert buffer text and decorations to HTML." single ((:commit . "88e2cb6588827893d7bc619529393887c264d15a") (:keywords "hypermedia" "extensions"))]) (html2org . [(20170417 2201) ((emacs (24 4))) "Convert html to org format text" single ((:commit . "6904aed40259ad8afccff079ebd8a07bff319ebc") (:url . "http://github.com/lujun9972/html2org.el") (:keywords "convenience" "html" "org"))]) (html-to-markdown . [(20151105 40) ((cl-lib (0 5))) "HTML to Markdown converter written in Emacs-lisp." single ((:commit . "60c5498c801be186478cf7c05be05b4430c4a144") (:url . "http://github.com/Bruce-Connor/html-to-markdown") (:keywords "tools" "wp" "languages"))]) (html-to-hiccup . [(20161028 701) ((emacs (25 1)) (dash (2 13 0)) (s (1 10 0))) "Convert HTML to Hiccup syntax" single ((:commit . "99217a5058626d253ed8ada51a7642071fe54ba5") (:url . "https://github.com/plexus/html-to-hiccup") (:keywords "html" "hiccup" "clojure"))]) (html-script-src . [(20120403 1115) nil "Insert <script src=\"..\"> for popular JavaScript libraries" single ((:commit . "66460f8ab1b24656e6f3ce5bd50cff6a81be8422") (:url . "http://github.com/rejeep/html-script-src") (:keywords "tools" "convenience"))]) (html-check-frag . [(20160130 2135) ((emacs (24 3))) "Check html-fragments" single ((:commit . "feb89765eafd69dfcf07afeebded8985dc456e7c") (:keywords "html"))]) (ht . [(20161015 1945) ((dash (2 12 0))) "The missing hash table library for Emacs" single ((:commit . "8b9281611c49335e97f2b644e34aa07a47dc4b2a") (:keywords "hash table" "hash map" "hash"))]) (howm . [(20160928 439) ((cl-lib (0 5))) "Wiki-like note-taking tool" tar ((:commit . "e0237b07f60011a1926b36848c73340ae46cdb3e") (:url . "http://howm.osdn.jp"))]) (howdoi . [(20150203 1643) nil "Instant coding answers via Emacs." tar ((:commit . "5fbf7069ee160c597a328e5ce5fb32920e1ca88f"))]) (how-many-lines-in-project . [(20140806 2142) nil "Calculate how many lines are there in your project." single ((:commit . "8a37ef885d004fe2ce231bfe05ed4867c6192d9b") (:keywords "project" "convenience"))]) (hound . [(20170627 1259) ((request (0 2 0)) (cl-lib (0 5))) "Display hound search results in a compilation window" single ((:commit . "0c5a250ef82870dca737a429b6e9b9db93874ed3"))]) (hookify . [(20141216 1409) ((s (1 9 0)) (dash (1 5 0))) "Interactive commands to create temporary hooks" single ((:commit . "21baae7393b07257de5796402fde0ca72fb00d77") (:url . "https://github.com/Silex/hookify") (:keywords "hook" "convenience"))]) (homebrew-mode . [(20160615 620) ((emacs (24 4)) (inf-ruby (2 4 0)) (dash (1 2 0))) "minor mode for editing Homebrew formulae" single ((:commit . "d422307aee2f897d1a92e3b959c3214bc54cbe38") (:url . "https://github.com/dunn/homebrew-mode") (:keywords "homebrew" "brew" "ruby"))]) (holiday-pascha-etc . [(20160821 1758) nil "Eastern Christian analog to holiday-easter-etc" single ((:commit . "eb198656f63cb8679fb0e3a8248782df071a0f3c") (:url . "http://github.com/hexmode/holiday-pascha-etc"))]) (hoa-pp-mode . [(20151027 36) ((emacs (24 1)) (names (20150723 0))) "Major mode for Hoa PP grammars" single ((:commit . "925b79930a3f4377b0fb2a36b3c6d5566d4b9a8e") (:url . "https://github.com/hoaproject/Contributions-Emacs-Pp") (:keywords "php" "hoa"))]) (hoa-mode . [(20151203 850) nil "Major mode for the Hanoi Omega Automata format" single ((:commit . "3c608e15b655d2375c5f81323ac561c7848dc029") (:url . "https://gitlab.lrde.epita.fr/spot/emacs-modes") (:keywords "major-mode" "automata" "convenience"))]) (hlinum . [(20170507 2227) ((cl-lib (0 2))) "Extension for linum.el to highlight current line number" single ((:commit . "2b4a08db4ff361ac8eeee1ed94eca7e26c614595") (:url . "https://github.com/tom-tan/hlinum-mode/") (:keywords "convenience" "extensions"))]) (hlint-refactor . [(20151124 1241) nil "Apply HLint suggestions" single ((:commit . "695d39b3434a5e35fab70aa5251f824ffaa30d6b") (:url . "https://github.com/mpickering/hlint-refactor-mode") (:keywords "haskell" "refactor"))]) (hledger-mode . [(20170701 239) ((emacs (24 4)) (popup (0 5 3)) (async (1 9)) (htmlize (1 47))) "A mode for writing journal entries for hledger." tar ((:commit . "f120d17f1601b603775c1606af066f1d118192fe") (:url . "https://github.com/narendraj9/hledger-mode.git") (:keywords "data"))]) (hl-todo . [(20170621 1257) nil "highlight TODO and similar keywords" single ((:commit . "961db3116f1396dc4f903e3a59824a40e0bbb6a2") (:url . "https://github.com/tarsius/hl-todo") (:keywords "convenience"))]) (hl-spotlight . [(20170223 746) nil "Extension of hl-line.el to spotlight current few lines." single ((:url . "https://www.emacswiki.org/emacs/download/hl-spotlight.el") (:keywords "highlight" "cursor" "accessibility"))]) (hl-sexp . [(20101130 443) nil "highlight the current sexp" single ((:commit . "0606100422321c18db51ceda80f25cd7717c2e01") (:keywords "faces" "frames" "emulation"))]) (hl-sentence . [(20140802 920) nil "highlight a sentence based on customizable face" single ((:commit . "45e3cc525ba636c0f22baa6d0938d9808622bc89") (:url . "http://github.com/milkypostman/hl-sentence") (:keywords "highlighting"))]) (hl-line+ . [(20170621 734) nil "Extensions to hl-line.el." single ((:url . "https://www.emacswiki.org/emacs/download/hl-line%2b.el") (:keywords "highlight" "cursor" "accessibility"))]) (hl-indent . [(20170429 1404) ((emacs (24)) (cl-lib (0 5))) "Highlight irregular indentation." single ((:commit . "bdb2e0177a7c8b29af26998e688b856adc6ded93") (:url . "https://github.com/ikirill/hl-indent") (:keywords "convenience" "faces"))]) (hl-defined . [(20170223 744) nil "Highlight defined or undefined symbols in Emacs-Lisp." single ((:url . "https://www.emacswiki.org/emacs/download/hl-defined.el") (:keywords "highlight" "lisp" "functions"))]) (hl-anything . [(20160422 1008) ((emacs (24 3))) "Highlight symbols, selections, enclosing parens and more." tar ((:commit . "8696bc55a8cba408f0fc83a907a9ec529d79e558"))]) (hiwin . [(20150825 127) nil "Visible active window mode." single ((:commit . "6ee8ed051405653bd9b7332d7e9fbb591d954051") (:keywords "faces" "editing" "emulating"))]) (hive . [(20131217 712) ((sql (3 0))) "Hive SQL mode extension" single ((:commit . "11b5172e081ad8079fc78758bef6f306f82ae32b") (:keywords "sql" "hive"))]) (historyf . [(20151123 1759) nil "file history library like browser" single ((:commit . "196c058ceb092fdd56b0e4ce85b7e714d6f72224") (:url . "https://github.com/k1LoW/emacs-historyf"))]) (history . [(20160821 902) ((emacs (24 3))) "History utility for source code navigation" tar ((:commit . "5317663fb45bbd5e96d258cb0807dcc266ce67ff") (:url . "https://github.com/boyw165/history"))]) (historian . [(20170630 1054) ((emacs (24 4))) "Persistently store selected minibuffer candidates" single ((:commit . "99e282bdd8994cb4e23185d9004b2cb42a214927") (:url . "https://github.com/PythonNut/historian.el") (:keywords "convenience"))]) (hippie-namespace . [(20140508 1341) nil "Special treatment for namespace prefixes in hippie-expand" single ((:commit . "d0d0f15c67ab8bef5e9d1e29a89ecd3613a60b49") (:url . "http://github.com/rolandwalker/hippie-namespace") (:keywords "convenience" "lisp" "tools" "completion"))]) (hippie-expand-slime . [(20170317 0) nil "Hook slime's completion into hippie-expand" single ((:commit . "ed6c91a0600550788dc78a3ab32040ac28f7c8d4") (:url . "https://github.com/purcell/hippie-expand-slime"))]) (hippie-exp-ext . [(20160502 1626) nil "Extension of hippie-expand" single ((:commit . "4eda13f90da51ab217d024701f4c30f91ffcb90e") (:url . "http://www.emacswiki.org/emacs/download/hippie-exp-ext.el") (:keywords "abbrev" "convenience" "completions" "hippie-expand"))]) (hindent . [(20170609 126) ((cl-lib (0 5))) "Indent haskell code using the \"hindent\" program" single ((:commit . "b858104fab63257de4b172b085b28e24ecacfed0") (:url . "https://github.com/chrisdone/hindent"))]) (highlight2clipboard . [(20151020 1140) ((htmlize (1 47))) "Copy text to clipboard with highlighting." tar ((:commit . "6ce58a060d9c5843ccb8c79ec2bba7858c68ac15") (:keywords "tools"))]) (highlight-unique-symbol . [(20130611 2242) ((deferred (0 3 2))) "highlight symbols which not appear in the repository" single ((:commit . "4141bf86a94e30d94d9af9c29d40b16886226e1c") (:url . "https://github.com/hitode909/emacs-highlight-unique-symbol"))]) (highlight-thing . [(20170207 2239) nil "Minimalistic minor mode to highlight current thing under point." single ((:commit . "c998172704ac4b96147d862a0eb4a0f97deb5e0a") (:url . "https://github.com/fgeller/highlight-thing.el") (:keywords "highlight" "thing" "symbol"))]) (highlight-tail . [(20140415 1841) nil "draw a colourful \"tail\" while you write" single ((:keywords "highlight" "tail" "eye-candy" "visual-effect" "light" "color" "burn"))]) (highlight-symbol . [(20160102 1209) nil "automatic and manual symbol highlighting" single ((:commit . "7a789c779648c55b16e43278e51be5898c121b3a") (:url . "http://nschum.de/src/emacs/highlight-symbol/") (:keywords "faces" "matching"))]) (highlight-stages . [(20161212 657) nil "highlight staged (quasi-quoted) expressions" single ((:commit . "29cbc5b78261916da042ddb107420083da49b271") (:url . "http://hins11.yu-yake.com/"))]) (highlight-refontification . [(20170211 1224) nil "Visualize font-lock refontification." single ((:commit . "32632897d88c4611fadb08517ca00ef5cbc989b6") (:url . "https://github.com/Lindydancer/highlight-refontification") (:keywords "faces" "tools"))]) (highlight-quoted . [(20140916 1122) ((emacs (24))) "Highlight Lisp quotes and quoted symbols" single ((:commit . "24103478158cd19fbcfb4339a3f1fa1f054f1469") (:url . "https://github.com/Fanael/highlight-quoted"))]) (highlight-parentheses . [(20151107 2316) nil "highlight surrounding parentheses" single ((:commit . "a821a314942f409cd69660d816cd9a0aebd1ae8f") (:url . "https://github.com/tsdh/highlight-parentheses.el") (:keywords "faces" "matching"))]) (highlight-operators . [(20170213 1420) nil "a face for operators in programming modes" single nil]) (highlight-numbers . [(20160717 1228) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" single ((:commit . "b7adef0286aaa5bca8e98a12d0ffed3a880e25aa") (:url . "https://github.com/Fanael/highlight-numbers"))]) (highlight-leading-spaces . [(20151216 422) ((emacs (24 4))) "Highlight leading spaces" single ((:commit . "840db19d863dd97993fd9f893f5be501627b6354") (:url . "https://github.com/mrBliss/highlight-leading-spaces"))]) (highlight-indentation . [(20170502 43) nil "Minor modes for highlighting indentation" single ((:commit . "5c7717a2224372f7113d13640515df3650388a37") (:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs"))]) (highlight-indent-guides . [(20170516 1355) ((emacs (24))) "Minor mode to highlight indentation" single ((:commit . "b51744bde1287979f2d948f46501bd6ed0897f69") (:url . "https://github.com/DarthFennec/highlight-indent-guides"))]) (highlight-escape-sequences . [(20161028 1617) nil "Highlight escape sequences" single ((:commit . "c3f28f2003638e88e5cf0b03835412af7814f3b0") (:url . "https://github.com/dgutov/highlight-escape-sequences") (:keywords "convenience"))]) (highlight-defined . [(20141225 730) ((emacs (24))) "Syntax highlighting of known Elisp symbols" single ((:commit . "243478cc204ab42d29805ed610961cbb260c1dfd") (:url . "https://github.com/Fanael/highlight-defined"))]) (highlight-current-line . [(20051013 1056) nil "highlight line where the cursor is." single ((:keywords "faces"))]) (highlight-context-line . [(20170319 1442) nil "Improve orientation when scrolling" single ((:commit . "716e10a0c7b703b5f1d9c6ca1481524a4d06b7b8") (:url . "https://github.com/ska2342/highlight-context-line/") (:keywords "faces" "services" "user"))]) (highlight-cl . [(20091012 1030) nil "Highlighting `cl' functions." single ((:url . "http://www.emacswiki.org/emacs/highlight-cl.el") (:keywords "faces"))]) (highlight-chars . [(20170223 740) nil "Highlight specified sets of characters, including whitespace." single ((:url . "https://www.emacswiki.org/emacs/download/highlight-chars.el") (:keywords "highlight" "whitespace" "characters" "unicode"))]) (highlight-blocks . [(20151201 815) ((emacs (24))) "Highlight the blocks point is in" single ((:commit . "9c4240a5d16008db430d1a81c76dad474d3deb0c") (:url . "https://github.com/Fanael/highlight-blocks"))]) (highlight . [(20170702 732) nil "Highlighting commands." single ((:url . "https://www.emacswiki.org/emacs/download/highlight.el") (:keywords "faces" "help" "local"))]) (hierarchy . [(20170617 1126) ((emacs (25 1))) "Library to create and display hierarchy structures" single ((:commit . "e71c2970dc4eb90e5473f7a038e7ccba4dac6c36"))]) (hideshowvis . [(20170227 1250) nil "Add markers to the fringe for regions foldable by hideshow.el" single nil]) (hideshow-org . [(20120223 1450) nil "Provides org-mode like hide and show for hideshow.el" single ((:commit . "16419e52e6cdd2f46f755144c0ab11ce00d1a626") (:keywords "c" "c++" "java" "lisp" "tools" "editing" "comments" "blocks" "hiding" "outlines" "org-mode"))]) (hide-region . [(20140201 314) nil "hide regions of text using overlays" single ((:url . "http://mathias.dahl.net/pgm/emacs/elisp/hide-region.el") (:keywords "hide" "region"))]) (hide-lines . [(20151127 1040) nil "Commands for hiding lines based on a regexp" single ((:commit . "331122bf19361130351cfe55968c2a7820329eb3") (:url . "https://github.com/vapniks/hide-lines") (:keywords "convenience"))]) (hide-comnt . [(20170223 739) nil "Hide/show comments in code." single ((:url . "https://www.emacswiki.org/emacs/download/hide-comnt.el") (:keywords "comment" "hide" "show"))]) (hi2 . [(20141005 1231) nil "indentation module for Haskell Mode" single ((:commit . "c9d199727b5cdcb9e36a972b38131ce4611fd6c8") (:url . "https://github.com/errge/hi2") (:keywords "indentation" "haskell"))]) (hgrc-mode . [(20150409 1343) nil "major mode for editing hgrc files" single ((:commit . "314e8320b82cc1ce74b1bd372f296252e7a23090") (:url . "http://github.com/omajid/hgrc-mode") (:keywords "convenience" "vc" "hg"))]) (hgignore-mode . [(20160430 1707) nil "a major mode for editing hgignore files" single ((:commit . "7aa9f3b8a9c610dbd80b952061b40194e1d9c5bd") (:url . "http://github.com/omajid/hgignore-mode") (:keywords "convenience" "vc" "hg"))]) (hfst-mode . [(20160708 502) nil "major mode for editing HFST files" single ((:commit . "ac1bb9dd92545d3e7fdc05c83996c227cc15c6b8") (:url . "http://wiki.apertium.org/wiki/Emacs") (:keywords "languages"))]) (hexrgb . [(20170304 1213) nil "Functions to manipulate colors, including RGB hex strings." single ((:url . "https://www.emacswiki.org/emacs/download/hexrgb.el") (:keywords "number" "hex" "rgb" "color" "background" "frames" "display"))]) (hexo . [(20170702 1915) ((emacs (24 3))) "Major mode & tools for Hexo" single ((:commit . "201c795ded01d96690ceadc1dd068744aceaeda8") (:url . "https://github.com/kuanyui/hexo.el") (:keywords "tools" "hexo"))]) (heroku-theme . [(20150522 1919) nil "Heroku color theme" single ((:commit . "8083643fe92ec3a1c3eb82f1b8dc2236c9c9691d") (:url . "https://github.com/jonathanchu/color-theme-heroku"))]) (heroku . [(20120629 1113) nil "Interface to Heroku apps." single ((:commit . "92af1c073b593c4def99c8777c869992aa4d0b3a") (:url . "https://github.com/technomancy/heroku.el") (:keywords "convenience" "api" "database"))]) (hemisu-theme . [(20130508 1144) nil "Hemisu for Emacs." tar ((:commit . "5c206561aa2c844ecdf3e3b672c3235e559ddd7f") (:url . "http://github/anrzejsliwa/django-theme"))]) (helpful . [(20170625 1441) ((emacs (24 4)) (dash (2 12 0)) (s (1 11 0)) (elisp-refs (1 2))) "a better *help* buffer" single ((:commit . "792e340352b3ddc579e34d8d6ffb4219bac5cbeb") (:keywords "help" "lisp"))]) (help-mode+ . [(20170223 737) nil "Extensions to `help-mode.el'" single ((:url . "https://www.emacswiki.org/emacs/download/help-mode%2b.el") (:keywords "help"))]) (help-fns+ . [(20170223 733) nil "Extensions to `help-fns.el'." single ((:url . "https://www.emacswiki.org/emacs/download/help-fns%2b.el") (:keywords "help" "faces" "characters" "packages" "description"))]) (help+ . [(20170223 731) nil "Extensions to `help.el'." single ((:url . "https://www.emacswiki.org/emacs/download/help%2b.el") (:keywords "help"))]) (helm-zhihu-daily . [(20160625 445) ((helm (1 0)) (cl-lib (0 5)) (emacs (24 4))) "Helm interface for 知乎日报 (http://daily.zhihu.com)" single ((:commit . "be27dcc6be1eb97663b65581a9a5c0fc81cfaba7") (:url . "https://github.com/xuchunyang/helm-zhihu-daily"))]) (helm-youtube . [(20161113 1848) ((request (0 2 0)) (helm (2 3 1)) (cl-lib (0 5))) "Query YouTube and play videos in your browser" single ((:commit . "202c27fc3b54927611e9d9c764465e1b42ef7e41") (:url . "https://github.com/maximus12793/helm-youtube") (:keywords "youtube" "multimedia"))]) (helm-xref . [(20170425 1440) ((emacs (25 1)) (helm (1 9 4))) "Helm interface for xref results" single ((:commit . "cd458044be2cec95f31f0ac318b0f80f4b92785b") (:url . "https://github.com/brotzeitmacher/helm-xref"))]) (helm-xcdoc . [(20160116 218) ((helm (1 5)) (emacs (24 4))) "Search Xcode Document by docsetutil and eww with helm interface" single ((:commit . "a85612149a6d8e18ab309b3db2d222ce39c42049") (:url . "https://github.com/fujimisakari/emacs-helm-xcdoc"))]) (helm-words . [(20150413 1318) nil "No description available." single ((:commit . "637aa3a7e9cfd34e0127472c5b1f993a4da26185"))]) (helm-wordnet . [(20160128 707) ((emacs (24)) (helm (1 7 0)) (cl-lib (0 5))) "Helm interface to local wordnet dictionary" single ((:commit . "a36dbc6fcb570b812870bc1e190f203e0a0042fc") (:url . "https://github.com/raghavgautam/helm-wordnet") (:keywords "dictionary" "wordnet" "emacs" "elisp" "helm"))]) (helm-w3m . [(20150722 824) ((helm (1 5)) (w3m (0 0)) (cl-lib (0 5)) (emacs (24 1))) "W3m bookmark - helm interface." single ((:commit . "280673470672c9fbc57fd6a91defeb9f6641fc8a"))]) (helm-w32-launcher . [(20141223 1214) ((emacs (24)) (helm (1 6 5)) (cl-lib (0 5))) "Start Menu entry launcher using Helm" tar ((:commit . "3e59ad62b89dd21d334af0203d445a83eb25dc5b") (:url . "https://github.com/Fanael/helm-w32-launcher"))]) (helm-unicode . [(20160715 533) ((helm (1 9 8)) (emacs (24 4))) "Helm command for unicode characters." single ((:commit . "1ad1fcca7a83c163ae74eb72a443cfc102128e33"))]) (helm-tramp . [(20170616 1725) ((emacs (24 3)) (helm (2 0))) "Tramp helm interface for ssh, docker, vagrant" single ((:commit . "89a7564edc6b23ffba52b02353528b9b6285c729") (:url . "https://github.com/masasam/emacs-helm-tramp"))]) (helm-themes . [(20160917 2245) ((helm-core (2 0)) (emacs (24 4))) "Color theme selection with helm interface" single ((:commit . "1160af42590b0d845a55e65e1e782d9e4027fd6e") (:url . "https://github.com/syohex/emacs-helm-themes"))]) (helm-systemd . [(20160517 2333) ((emacs (24 4)) (helm (1 9 2)) (with-editor (2 5 0))) "helm's systemd interface" single ((:commit . "0892535baa405a2778be2f0f013bac768e72b1f9") (:keywords "convenience"))]) (helm-swoop . [(20160619 953) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" single ((:commit . "6d3fdcfb6dea06242efc8ff4cafff9917e558bfc") (:url . "https://github.com/ShingoFukuyama/helm-swoop") (:keywords "helm" "swoop" "inner" "buffer" "search"))]) (helm-sql-connect . [(20170319 551) ((helm (0 0 0))) "Choose a database to connect to via Helm." single ((:commit . "5aead55b6f8636140945714d8c332b287ab9ef10") (:url . "https://github.com/eric-hansen/helm-sql-connect") (:keywords "tools" "convenience" "comm"))]) (helm-spotify-plus . [(20170320 609) ((emacs (24 4)) (helm (2 0 0)) (multi (2 0 1))) "Control Spotify search and select music with Helm." single ((:commit . "847dfafbb5e5d65a44464b0ec8e2b7d88864a9aa"))]) (helm-spotify . [(20160905 1447) ((helm (0 0 0)) (multi (2 0 0))) "Control Spotify with Helm." single ((:commit . "f7a62d1ff88e3127de9be7cd3e818b0a92268ab3") (:url . "https://github.com/krisajenkins/helm-spotify") (:keywords "helm" "spotify"))]) (helm-spaces . [(20161001 709) ((helm-core (2 2)) (spaces (0 1 0))) "helm sources for spaces" single ((:commit . "877e2b5178926308d6a7c2a37477bb12c33a96d4") (:url . "https://github.com/yasuyk/helm-spaces") (:keywords "helm" "frames" "convenience"))]) (helm-smex . [(20161202 1252) ((emacs (24)) (smex (3 0)) (helm (1 7 7))) "Helm interface for smex" single ((:commit . "7af4e4b44671f739b39584fc50c20084700701ac") (:keywords "convenience"))]) (helm-sheet . [(20130630 539) ((helm (1 0))) "helm sources for sheet" single ((:commit . "d360b68d0ddb09aa1854e7b2f3cb39caeee26463") (:url . "https://github.com/yasuyk/helm-sheet") (:keywords "helm" "sheet"))]) (helm-sage . [(20160514 45) ((cl-lib (0 5)) (helm (1 5 6)) (sage-shell-mode (0 1 0))) "A helm extension for sage-shell-mode." single ((:commit . "f14e9281d8f2162df7d8f9c2ad9ad1248a24803b") (:url . "https://github.com/stakemori/helm-sage") (:keywords "sage" "math" "helm"))]) (helm-safari . [(20160403 2024) ((helm (1 9 1)) (emacs (24))) "Browse your Safari bookmarks and history" single ((:commit . "664c7f4488829228eed7e90cd53002e14bec555b") (:url . "https://github.com/xuchunyang/helm-safari") (:keywords "tools"))]) (helm-rubygems-org . [(20140826 456) ((emacs (24)) (helm (1 6 3)) (cl-lib (0 5))) "Use helm to search rubygems.org" single ((:commit . "6aaed984f698cbdf9f9aceb0221404563e28764d") (:url . "https://github.com/neomantic/helm-rubygems-org") (:keywords "ruby" "rubygems" "gemfile" "helm"))]) (helm-rubygems-local . [(20130711 1811) ((helm (1 5 3))) "Installed local rubygems find-file for helm" single ((:commit . "289cb33d41c703af9791d6da46b55f070013c2e3") (:url . "https://github.com/f-kubotar/helm-rubygems-local"))]) (helm-rtags . [(20170522 2154) ((helm (2 0)) (rtags (2 10))) "A front-end for rtags" single ((:commit . "7e6b6f21935eedbe4678ba91c5531ac162b51a5a") (:url . "http://rtags.net"))]) (helm-ros . [(20160812 1052) ((helm (1 9 9)) (xterm-color (1 0)) (cl-lib (0 5))) "Interfaces ROS with helm" single ((:commit . "92b0b215f6a017f0f57f1af15466cc0b2a5a0135") (:url . "https://www.github.com/davidlandry93/helm-ros") (:keywords "helm" "ros"))]) (helm-robe . [(20151208 1955) ((helm (1 7 7))) "completing read function for robe" single ((:commit . "6e69543b4ee76c5f8f3f2510c76e6d9aed17a370") (:url . "https://github.com/syohex/emacs-helm-robe"))]) (helm-rhythmbox . [(20160524 458) ((helm (1 5 0)) (cl-lib (0 5))) "control Rhythmbox's play queue via Helm" single ((:commit . "c92e1ded34ddd4e62e7e9a558259c232e05193fa") (:url . "https://github.com/mrBliss/helm-rhythmbox"))]) (helm-recoll . [(20160731 221) ((helm (1 9 9))) "helm interface for the recoll desktop search tool." single ((:commit . "cc4c4fa9c8f4f99383647baa8512b60523dc8b36") (:url . "https://github.com/emacs-helm/helm-recoll") (:keywords "convenience"))]) (helm-rdefs . [(20161129 2136) ((emacs (24)) (helm (1 6 4))) "rdefs with helm interface" single ((:commit . "cd3a6b3af3015ee58ef30cb7c81c79ebe5fc867b") (:url . "https://github.com/saidie/helm-rdefs") (:keywords "matching" "tools"))]) (helm-rb . [(20131123 839) ((helm (1 0)) (helm-ag-r (20131123))) "Search Ruby's method by ag and display helm" tar ((:commit . "4949d646420a9849af234dacdd8eb34a77c662fd") (:url . "https://github.com/yuutayamada/helm-rb") (:keywords "searching" "ruby"))]) (helm-rails . [(20130424 819) ((helm (1 5 1)) (inflections (1 1))) "Helm extension for Rails projects." single ((:commit . "506d9948d45dfbc575c9c4c0d102c1ad2f511e82") (:url . "https://github.com/asok/helm-rails") (:keywords "helm" "rails" "git"))]) (helm-rage . [(20170422 510) ((helm (1 9 8)) (emacs (24 4)) (dash (2 13 0)) (s (1 11 0))) "Helm command for rage characters." tar ((:commit . "dc51371265acea60ac0691016f6ce84597bcace1") (:url . "https://github.com/bomgar/helm-rage") (:keywords "helm" "rage" "meme"))]) (helm-qiita . [(20160528 611) ((helm (1 9 5))) "Qiita with helm interface" single ((:commit . "45e38ae7b816da5db38412b2992c6d1c7a6cc30a") (:url . "https://github.com/masutaka/emacs-helm-qiita"))]) (helm-pydoc . [(20160917 2242) ((helm-core (2 0)) (emacs (24 4))) "pydoc with helm interface" tar ((:commit . "85480a29b56dacde425655bc8f5a597c785afdf5") (:url . "https://github.com/syohex/emacs-helm-pydoc"))]) (helm-purpose . [(20170114 836) ((emacs (24)) (helm (1 9 2)) (window-purpose (1 4))) "Helm Interface for Purpose" single ((:commit . "9ff4c21c1e9ebc7afb851b738f815df7343bb287") (:url . "https://github.com/bmag/helm-purpose"))]) (helm-pt . [(20160214 1542) ((helm (1 5 6))) "Helm interface to the platinum searcher" tar ((:commit . "8acc52911dad1ed0c3975f134a468762afe0b76b") (:keywords "helm" "platinum searcher"))]) (helm-prosjekt . [(20140128 2317) ((prosjekt (0 3)) (helm (1 5 9))) "Helm integration for prosjekt." single ((:commit . "a864a8be5842223043702395f311e3350c28e9db") (:url . "https://github.com/abingham/prosjekt"))]) (helm-projectile . [(20170613 14) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" single ((:commit . "0e9ba276b3fbc420b8cbdc1b99262ccd5c750db7") (:url . "https://github.com/bbatsov/helm-projectile") (:keywords "project" "convenience"))]) (helm-project-persist . [(20151210 743) ((helm (1 5 2)) (project-persist (0 1 4))) "Helm integration for project-persist package" single ((:commit . "357950fbac18090985a750e40d5d8b10ee9dcd53") (:keywords "project-persist" "project" "helm"))]) (helm-proc . [(20161005 2005) ((helm (1 6 0))) "Helm interface for managing system processes" tar ((:commit . "576d31c2d74ba3897d56e2acd2b0993f52c2547c"))]) (helm-phpunit . [(20160513 153) ((helm (1 9 5)) (phpunit (0 7 0))) "Helm integration for phpunit.el" single ((:commit . "739f26204ad2ba76c25f45e8eab1e5216f7c3518") (:url . "https://github.com/eric-hansen/phpunit-helm") (:keywords "phpunit" "helm" "php"))]) (helm-perspeen . [(20170228 545) ((perspeen (0 1 0)) (helm (2 5 0))) "Helm interface for perspeen." single ((:commit . "7fe2922d85608bfa9e18269fc44181428b8849ff") (:url . "https://github.com/jimo1001/helm-perspeen") (:keywords "projects" "lisp"))]) (helm-perldoc . [(20160917 2256) ((helm-core (2 0)) (deferred (0 3 1)) (emacs (24 4))) "perldoc with helm interface" tar ((:commit . "1979f9f67814c11ec9498502237c89a5e1153100") (:url . "https://github.com/syohex/emacs-helm-perldoc"))]) (helm-pass . [(20170627 1124) ((helm (0)) (password-store (0)) (auth-password-store (0))) "helm interface of pass, the standard Unix password manager" single ((:commit . "bf5e1ea85ca531f07372eb8e7b9a8812ff3d3a5e") (:url . "https://github.com/jabranham/helm-pass"))]) (helm-pages . [(20161120 1826) ((helm (1 6 5)) (emacs (24)) (cl-lib (0 5))) "Pages in current buffer as Helm datasource" single ((:commit . "51dcb9374d1df9feaae85e60cfb39b970554ecba") (:keywords "convenience" "helm" "outlines"))]) (helm-package . [(20170216 2002) ((helm (2 0)) (emacs (24 4))) "Listing ELPA packages with helm interface" single ((:commit . "0f3ac5623cc6220a65f3c9ec0f587225101e96d5") (:url . "https://github.com/syohex/emacs-helm-package"))]) (helm-orgcard . [(20151001 824) ((helm-core (1 7 7))) "browse the orgcard by helm" single ((:commit . "9655ac340d1ccc5f3d1c0f7c49be8dd3556d4d0d") (:url . "https://github.com/emacs-jp/helm-orgcard") (:keywords "convenience" "helm" "org"))]) (helm-org-rifle . [(20170518 312) ((emacs (24 4)) (dash (2 12)) (f (0 18 1)) (helm (1 9 4)) (s (1 10 0))) "Rifle through your Org files" single ((:commit . "61adb8ec3af0b7b87b2f9245510dc8b014d026ed") (:url . "http://github.com/alphapapa/helm-org-rifle") (:keywords "hypermedia" "outlines"))]) (helm-open-github . [(20170219 1759) ((emacs (24 4)) (helm-core (1 7 7)) (gh (0 8 2))) "Utilities of Opening Github Page" single ((:commit . "2f03d97552a1233db7694116d5f80ecde7612756") (:url . "https://github.com/syohex/emacs-helm-open-github"))]) (helm-notmuch . [(20170221 1208) ((helm (1 9 3)) (notmuch (0 21))) "Search emails with Notmuch and Helm" single ((:commit . "aac6b3ee2142515dc3f4b59f242cdfa2b012118c") (:url . "https://github.com/xuchunyang/helm-notmuch") (:keywords "mail"))]) (helm-nixos-options . [(20151013 1609) ((nixos-options (0 0 1)) (helm (1 5 6))) "Helm Interface for nixos-options" single ((:commit . "ace629f7645d12778c96ff7b5cf4b1e41a98af29") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (helm-navi . [(20170402 752) ((emacs (24 4)) (helm (1 9 4)) (navi-mode (2 0)) (s (1 10 0))) "Helm for navi-mode" single ((:commit . "2256591174ff79f889450fdc10822316819d6476") (:url . "http://github.com/emacs-helm/helm-navi") (:keywords "navigation" "outlines"))]) (helm-mu . [(20161010 102) ((helm (1 5 5))) "Helm sources for searching emails and contacts" single ((:commit . "1f9a6b0f8217c0c6359f53b724d9da4c3c3f896c") (:url . "https://github.com/emacs-helm/helm-mu"))]) (helm-mt . [(20160917 2152) ((emacs (24)) (helm (0 0)) (multi-term (0 0)) (cl-lib (0 5))) "helm multi-term management" single ((:commit . "d2bff4100118483bc398c56d0ff095294209265b") (:url . "https://github.com/dfdeshom/helm-mt") (:keywords "helm" "multi-term"))]) (helm-mode-manager . [(20151124 138) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" single ((:commit . "5d9c3ca4f8205d07ff4e03c4c3e88f596751c1fc") (:url . "https://github.com/istib/helm-mode-manager"))]) (helm-migemo . [(20151009 2056) ((emacs (24 4)) (helm-core (1 7 8)) (migemo (1 9)) (cl-lib (0 5))) "Migemo plug-in for helm" single ((:commit . "66c6a19d07c6a385daefd2090d0709d26b608b4e") (:url . "https://github.com/emacs-jp/helm-migemo") (:keywords "matching" "convenience" "tools" "i18n"))]) (helm-make . [(20170430 1053) ((helm (1 5 3)) (projectile (0 11 0))) "Select a Makefile target with helm" single ((:commit . "8bb531fa77fe1259cccdc2fa7629d65989684f16") (:url . "https://github.com/abo-abo/helm-make") (:keywords "makefile"))]) (helm-ls-svn . [(20150717 39) ((emacs (24 1)) (helm (1 7 0)) (cl-lib (0 5))) "helm extension to list svn files" single ((:url . "https://svn.macports.org/repository/macports/users/chunyang/helm-ls-svn.el/helm-ls-svn.el") (:keywords "helm" "svn"))]) (helm-ls-hg . [(20150908 2243) ((helm (1 7 8))) "List hg files in hg project." single ((:commit . "61b91a22fcfb62d0fc56e361ec01ce96973c7165"))]) (helm-ls-git . [(20170601 2200) ((helm (1 7 8))) "list git files." single ((:commit . "1253c7615da055a95548b4f92a8a503fe249884e"))]) (helm-lobsters . [(20150213 746) ((helm (1 0)) (cl-lib (0 5))) "helm front-end for lobste.rs" single ((:commit . "4121b232aeded2f82ad2c8a85c7dda17ef9d97bb") (:url . "https://github.com/julienXX/helm-lobste.rs"))]) (helm-jstack . [(20150602 2122) ((emacs (24)) (helm (1 7 0)) (cl-lib (0 5))) "Helm interface to Jps & Jstack for Java/JVM processes" single ((:commit . "2064f7215dcf4ccbd6a7b8784223251507746da4") (:keywords "java" "jps" "jstack" "jvm" "emacs" "elisp" "helm"))]) (helm-j-cheatsheet . [(20170217 29) ((helm (1 5 3))) "Quick J reference for Emacs" single ((:commit . "6c47e7162b9ba2de4b41221d01180146973d860b") (:url . "https://github.com/abo-abo/helm-j-cheatsheet"))]) (helm-itunes . [(20151012 2348) ((helm (1 6 1))) "Play local iTunes and Spotify tracks" single ((:commit . "966de755a5aadbe02311a6cef77bd4790e84c263") (:url . "https://github.com/daschwa/helm-itunes"))]) (helm-ispell . [(20151231 53) ((helm-core (1 7 7))) "ispell-complete-word with helm interface" single ((:commit . "cb735695ab3a0e66c123c2f3f3e8911fb1c2d5fc") (:url . "https://github.com/syohex/emacs-helm-ispell"))]) (helm-img-tiqav . [(20151224 1522) ((helm-img (0 0 1))) "An helm-source for joking." single ((:commit . "33a7e9508bc8f37d53320b56c92b53d321a57bb0") (:url . "https://github.com/l3msh0/helm-img") (:keywords "convenience"))]) (helm-img . [(20151224 1521) ((helm (1 7 7)) (cl-lib (0 5))) "Utilities for making image sources for helm." tar ((:commit . "aa3f8a5dce8d0413bf07584f07153a39015c2bfc") (:url . "https://github.com/l3msh0/helm-img") (:keywords "convenience"))]) (helm-idris . [(20141202 957) ((helm (0 0 0)) (idris-mode (0 9 14))) "A Helm datasource for Idris documentation, queried from the compiler" single ((:commit . "a2f45d6817974f318b55ad9b7fd19d5df132d47e") (:keywords "languages" "helm"))]) (helm-hunks . [(20170625 1523) ((emacs (24 4)) (helm (1 9 8))) "A helm interface for git hunks - browsing, staging, unstaging and killing" single ((:commit . "56731db3968a57fbb2473529227c2998b7f404b0") (:keywords "helm" "git" "hunks" "vc"))]) (helm-hoogle . [(20161026 2234) ((helm (1 6 2)) (emacs (24 4))) "Use helm to navigate query results from Hoogle" single ((:commit . "73969a9d46d2121a849a01a9f7ed3636d01f7bbc") (:url . "https://github.com/jwiegley/haskell-config") (:keywords "haskell" "programming" "hoogle"))]) (helm-helm-commands . [(20130902 1048) ((helm (1 5 4))) "List all helm commands with helm" single ((:commit . "3a05aa19c976501343ad9ae630a36810921a85f6") (:url . "https://github.com/vapniks/helm-helm-commands") (:keywords "convenience"))]) (helm-hayoo . [(20151013 2351) ((helm (1 6 0)) (json (1 2)) (haskell-mode (13 7))) "Source and configured helm for searching hayoo" single ((:commit . "dd4c0c8c87521026edf1b808c4de01fa19b7c693") (:keywords "helm"))]) (helm-hatena-bookmark . [(20160528 614) ((helm (1 9 5))) "Hatena::Bookmark with helm interface" single ((:commit . "8350a600d3e03f1ec7dc899cc0b2e323b12518bb") (:url . "https://github.com/masutaka/emacs-helm-hatena-bookmark"))]) (helm-gtags . [(20170115 2129) ((emacs (24 4)) (helm (2 0))) "GNU GLOBAL helm interface" single ((:commit . "108e93d0d099ebb7b98847388f368311cf177033") (:url . "https://github.com/syohex/emacs-helm-gtags"))]) (helm-growthforecast . [(20140119 1944) ((helm (1 5 9))) "helm extensions for growthforecast." single ((:commit . "0f94ac090d6c354058ad89a86e5c18385c136d9b") (:url . "https://github.com/daic-h/helm-growthforecast"))]) (helm-grepint . [(20161001 713) ((helm (1 0)) (emacs (24))) "Generic helm interface to grep" single ((:commit . "a62ca27515ff6a366b89b420500eb16d380cc653") (:url . "https://github.com/kopoli/helm-grepint") (:keywords "grep" "grepping" "searching" "helm"))]) (helm-google . [(20170509 244) ((helm (0)) (google (0))) "Emacs Helm Interface for quick Google searches" single ((:commit . "b24de3240b2a46fdf6124e91aa4f684b2370454b") (:url . "https://github.com/steckerhalter/helm-google") (:keywords "helm" "google" "search" "browse"))]) (helm-go-package . [(20161102 1853) ((emacs (24 4)) (helm-core (2 2 1)) (go-mode (1 4 0)) (deferred (0 4 0))) "helm sources for Go programming language's package" single ((:commit . "e42c563936c205ceedb930a687c11b4bb56447bc") (:url . "https://github.com/yasuyk/helm-go-package"))]) (helm-gitlab . [(20160519 303) ((s (1 9 0)) (dash (2 9 0)) (helm (1 0)) (gitlab (0 8 0))) "Helm interface to Gitlab" single ((:commit . "730a86b770b0838c86e7080d8d502528e0c26792") (:url . "https://github.com/nlamirault/emacs-gitlab") (:keywords "gitlab" "helm"))]) (helm-gitignore . [(20170210 1608) ((gitignore-mode (1 1 0)) (helm (1 7 0)) (request (0 1 0)) (cl-lib (0 5))) "Generate .gitignore files with gitignore.io." single ((:commit . "2a2e7da7855a6db0ab3bb6a6a087863d7abd4391") (:url . "https://github.com/jupl/helm-gitignore") (:keywords "helm" "gitignore" "gitignore.io"))]) (helm-github-stars . [(20150625 1523) ((helm (1 6 8)) (emacs (24 4))) "Helm integration for your starred repositories on github" single ((:commit . "9211be3fbb65ca8819e0d1a54524ed8abbfaa4fa") (:url . "https://github.com/Sliim/helm-github-stars") (:keywords "helm" "github" "stars"))]) (helm-git-grep . [(20170614 711) ((helm-core (2 2 0))) "helm for git grep, an incremental git-grep(1)" single ((:commit . "744cea07dba6e6a5effbdba83f1b786c78fd86d3") (:url . "https://github.com/yasuyk/helm-git-grep"))]) (helm-git-files . [(20141212 517) ((helm (1 5 9))) "helm for git files" single ((:commit . "43193960774069369ac6964bbf7c026900206fa8") (:keywords "helm" "git"))]) (helm-git . [(20120630 1403) nil "Helm extension for Git." single ((:commit . "cb96a52b5aecadd3c27aba7749d14e43ab128d55") (:url . "https://github.com/maio/helm-git") (:keywords "helm" "git"))]) (helm-ghq . [(20161015 117) ((helm (2 2 0))) "ghq with helm interface" single ((:commit . "21ccdb537a3be3d9351e01c6365df8e804e8bc56") (:url . "https://github.com/masutaka/emacs-helm-ghq"))]) (helm-ghc . [(20141105 659) ((emacs (24)) (cl-lib (0 5)) (helm (1 6 4)) (ghc (5 2 1 0))) "A Helm datasource for ghc-mod errors" single ((:commit . "e5ee7b8d3b745d162553aecfbd41381c4de85f35") (:keywords "languages" "helm"))]) (helm-fuzzy-find . [(20150613 349) ((emacs (24 1)) (helm (1 7 0))) "Find file using Fuzzy Search" single ((:commit . "daf24bc236dafa4f4be45f1621e11dbc9f304b64") (:url . "https://github.com/xuchunyang/helm-fuzzy-find") (:keywords "helm" "fuzzy" "find" "file"))]) (helm-fuzzier . [(20160605 1445) ((emacs (24 3)) (helm (1 7 0))) "Better fuzzy matching for Helm" single ((:commit . "8798dcf3583b863df5b9dea7fe3b0179ba1c35bc") (:url . "http://github.com/EphramPerdition/helm-fuzzier") (:keywords "convenience" "helm" "fuzzy"))]) (helm-frame . [(20170515 1250) ((emacs (24 4))) "open helm buffers in a dedicated frame" single ((:commit . "389e6461a423d649b7062ba99a2234bef7770059") (:keywords "lisp" "helm" "popup" "frame"))]) (helm-flyspell . [(20170210 1101) ((helm (1 6 5))) "Helm extension for correcting words with flyspell" single ((:commit . "8d4d947c687cb650cb149aa2271ad5201ea92594") (:url . "https://github.com/pronobis/helm-flyspell") (:keywords "convenience"))]) (helm-flymake . [(20160609 1702) ((helm (1 0))) "helm interface for flymake" single ((:commit . "72cf18a1a1f843db9bb5d58301739ea9ccb1655b") (:url . "https://github.com/tam17aki"))]) (helm-flycheck . [(20160710 129) ((dash (2 12 1)) (flycheck (28)) (helm-core (1 9 8))) "Show flycheck errors with helm" single ((:commit . "3cf7d3bb194acacc6395f88360588013d92675d6") (:url . "https://github.com/yasuyk/helm-flycheck") (:keywords "helm" "flycheck"))]) (helm-flx . [(20170404 1230) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" single ((:commit . "c8650d9b34afbc236c28aee12cbee998fda8d810") (:url . "https://github.com/PythonNut/helm-flx") (:keywords "convenience" "helm" "fuzzy" "flx"))]) (helm-firefox . [(20161202 517) ((helm (1 5)) (cl-lib (0 5)) (emacs (24 1))) "Firefox bookmarks" single ((:commit . "0ad34b7b5abc485a86cae6920c14de861cbeb085") (:url . "https://github.com/emacs-helm/helm-firefox"))]) (helm-filesets . [(20140929 1135) ((helm (1 6 3)) (filesets+ (0))) "A helm source for emacs filesets" single ((:commit . "b352910af4c3099267a8aa0169c7f743b35bb1fa") (:url . "https://github.com/gcla/helm-filesets") (:keywords "filesets"))]) (helm-ext . [(20170411 1049) ((emacs (24 4)) (helm (2 5 3))) "A few extensions to Helm" tar ((:commit . "fe50af14eebc9be72b026e823facfd0a80593248") (:keywords "extensions"))]) (helm-etags-plus . [(20170113 614) ((helm (1 7 8))) "Another Etags helm.el interface" single ((:commit . "704f0991ee4a2298b01c33aafc224eef322e15e3") (:url . "https://github.com/jixiuf/helm-etags-plus") (:keywords "helm" "etags"))]) (helm-emms . [(20170517 1010) ((helm (1 5)) (emms (0 0)) (cl-lib (0 5)) (emacs (24 1))) "Emms for Helm." single ((:commit . "b1c7d03e80c3012e327f0d518258508acf980c1c") (:url . "https://github.com/emacs-helm/helm-emms"))]) (helm-emmet . [(20160713 531) ((helm (1 0)) (emmet-mode (1 0 2))) "helm sources for emmet-mode's snippets" single ((:commit . "f0364e736b10cf44232053a78de04133a88185ae") (:url . "https://github.com/yasuyk/helm-emmet") (:keywords "convenience" "helm" "emmet"))]) (helm-dirset . [(20151208 1612) ((f (0 16 2)) (helm (1 6 1)) (s (1 9 0)) (cl-lib (0 5))) "helm sources for multi directories" single ((:commit . "eb30810cd26e1ee73d84a863e6b2667700e9aead") (:url . "http://101000lab.org") (:keywords "files" "directories"))]) (helm-dired-recent-dirs . [(20131228 614) ((helm (1 0))) "Show recent dirs with helm.el support." single ((:commit . "3bcd125b44f5a707588ae3868777d91192351523") (:keywords "helm" "dired" "zsh"))]) (helm-dired-history . [(20170524 346) ((helm (1 9 8)) (cl-lib (0 5))) "Show dired history with helm.el support." single ((:commit . "281523f9fc46cf00fafd670ba5cd16552a607212") (:url . "https://github.com/jixiuf/helm-dired-history") (:keywords "helm" "dired history"))]) (helm-dictionary . [(20160817 1333) ((helm (1 5 5))) "Helm source for looking up dictionaries" single ((:commit . "805ce850d4cbe811227d9c9b16cc51f652198f3f") (:url . "https://github.com/emacs-helm/helm-dictionary"))]) (helm-describe-modes . [(20160211 2118) ((helm (1 9)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface to major and minor modes." single ((:commit . "11fb36af119b784539d31c6160002de1957408aa") (:url . "https://github.com/emacs-helm/helm-describe-modes") (:keywords "docs" "convenience"))]) (helm-descbinds . [(20160916 713) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" single ((:commit . "6d5ddc11e6cef86548bd6b3e0d840112d602659c") (:url . "https://github.com/emacs-helm/helm-descbinds") (:keywords "helm" "help"))]) (helm-dash . [(20170531 135) ((helm (1 9 2)) (cl-lib (0 5))) "Offline documentation browser for +150 APIs using Dash docsets." single ((:commit . "9a230125a7a11f5fa90aa048b61abd95eb78ddfe") (:url . "http://github.com/areina/helm-dash") (:keywords "docs"))]) (helm-ctest . [(20150823 408) ((s (1 9 0)) (dash (2 11 0)) (helm-core (1 7 4))) "Run ctest from within emacs" single ((:commit . "973a138aa8ff4c6a1cd798779e8d0dd80522354d") (:keywords "helm" "ctest"))]) (helm-css-scss . [(20140626 1725) ((helm (1 0)) (emacs (24))) "CSS/SCSS/LESS Selectors with helm interface" single ((:commit . "ab8348aa98e0daa2f1b771e35bdb06bfacbe5016") (:url . "https://github.com/ShingoFukuyama/helm-css-scss") (:keywords "scss" "css" "less" "selector" "helm"))]) (helm-cscope . [(20170326 22) ((xcscope (1 0)) (helm (1 6 7)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface for xcscope.el." single ((:commit . "3cc7259ab4989f9f7ca039e703cdac14b907530a") (:url . "https://github.com/alpha22jp/helm-cscope.el") (:keywords "cscope" "helm"))]) (helm-core . [(20170701 629) ((emacs (24 4)) (async (1 9 2))) "Development files for Helm" tar ((:commit . "76d2581b80c67f3106fb5085c68fd59415e0313e") (:url . "https://emacs-helm.github.io/helm/"))]) (helm-company . [(20170608 1029) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" single ((:commit . "ae4e1a05455f5eaf07e61b8627934ea1df4eb048") (:url . "https://github.com/Sodel-the-Vociferous/helm-company"))]) (helm-commandlinefu . [(20150610 2245) ((emacs (24 1)) (helm (1 7 0)) (json (1 3)) (let-alist (1 0 3))) "Search and browse commandlinefu.com from helm" single ((:commit . "9ee7e018c5db23ae9c8d1c8fa969876f15b7280d") (:url . "https://github.com/xuchunyang/helm-commandlinefu") (:keywords "commandlinefu.com"))]) (helm-codesearch . [(20161214 548) ((s (1 10 0)) (dash (2 12 0)) (helm (1 7 7)) (cl-lib (0 5))) "helm interface for codesearch" single ((:commit . "e80e76e492f626659b88dbe362b11aa0a3b0a116") (:keywords "tools"))]) (helm-cmd-t . [(20170125 659) nil "cmd-t style completion" tar ((:commit . "7fa3d4a9f7271512e54c5de999079b27c9eec6bf") (:url . "https://github.com/lewang/helm-cmd-t") (:keywords "helm" "project-management" "completion" "convenience" "cmd-t" "textmate"))]) (helm-clojuredocs . [(20160405 23) ((edn (1 1 2)) (helm (1 5 7))) "search for help in clojuredocs.org" single ((:commit . "5a7f0f2cb401be0b09e73262a1c18265ab9a3cea") (:url . "https://github.com/mbuczko/helm-clojuredocs") (:keywords "helm" "clojure"))]) (helm-circe . [(20160206 2252) ((emacs (24)) (helm (0 0)) (circe (0 0)) (cl-lib (0 5))) "helm circe buffer management." single ((:commit . "9091651d9fdd8d49d8ff6f9dcf3a2ae416c9f15a") (:url . "https://github.com/lesharris/helm-circe") (:keywords "helm" "circe"))]) (helm-cider-history . [(20150719 1420) ((helm (1 4 0)) (cider (0 9 0))) "Helm interface for cider history" single ((:commit . "c391fcb2e162a02001605a0b9449783575a831fd") (:url . "https://github.com/Kungi/helm-cider-history") (:keywords "convenience"))]) (helm-cider . [(20170617 2254) ((emacs (24 4)) (cider (0 12)) (helm-core (2 4))) "Helm interface to CIDER" tar ((:commit . "7dafd5ba9c961ef22fd3ba617f13a411034f68be") (:url . "https://github.com/clojure-emacs/helm-cider") (:keywords "tools" "convenience"))]) (helm-chronos . [(20150528 1336) ((chronos (1 2)) (helm (1 7 1))) "helm interface for chronos timers" tar ((:commit . "a14fc3d65dd96ce6616234b3f7b8b08b4c1817ef") (:url . "http://github.com/dxknight/helm-chronos") (:keywords "calendar"))]) (helm-chrome . [(20160718 2220) ((helm (1 5)) (cl-lib (0 3)) (emacs (24))) "Helm interface for Chrome bookmarks" single ((:commit . "fd630ace4b4b4f33355a973743bbfe0c90ce4830") (:url . "https://github.com/kawabata/helm-chrome") (:keywords "tools"))]) (helm-charinfo . [(20170611 1746) ((emacs (24)) (helm (1 7 0)) (cl-lib (0 5))) "A helm source for character information" single ((:commit . "a4902a90bd9f012468ad8186e2548c7814847613") (:url . "https://github.com/cwittern/helm-charinfo") (:keywords "convenience"))]) (helm-c-yasnippet . [(20170128 742) ((helm (1 7 7)) (yasnippet (0 8 0)) (cl-lib (0 3))) "helm source for yasnippet.el" single ((:commit . "65ca732b510bfc31636708aebcfe4d2d845b59b0") (:keywords "convenience" "emulation"))]) (helm-c-moccur . [(20151230 124) ((helm (20120811)) (color-moccur (2 71))) "helm source for color-moccur.el" single ((:commit . "b0a906f85fa352db091f88b91a9c510de607dfe9") (:keywords "convenience" "emulation"))]) (helm-bundle-show . [(20151221 430) ((helm (1 8 0))) "bundle show with helm interface" single ((:commit . "b34523aa8a7f82ed9a1bf3643c35b65866a7877a") (:url . "https://github.com/masutaka/emacs-helm-bundle-show"))]) (helm-books . [(20170324 2331) ((helm (1 7 7))) "Helm interface for searching books" single ((:commit . "625aadec1541a5ca36951e4ce1301f4b6fe2bf3f") (:url . "https://github.com/grugrut/helm-books"))]) (helm-bm . [(20160321 631) ((bm (1 0)) (cl-lib (0 5)) (helm (1 9 3)) (s (1 11 0))) "helm sources for bm.el" single ((:commit . "d66341f5646c23178d4d8bffb6cfebe3fb73f1d7") (:url . "https://github.com/yasuyk/helm-bm") (:keywords "helm" "bookmark"))]) (helm-bind-key . [(20141108 2115) ((bind-key (1 0)) (helm (1 6 4))) "helm-source for for bind-key." single ((:commit . "9da6ad8b7530e72fb4ac67be8c6a482898dddc25") (:keywords "convenience" "emulation"))]) (helm-bibtexkey . [(20140214 704) ((helm (1 5 8))) "Bibtexkey source for helm" tar ((:commit . "aa1637ea5c8c5f1817e480fc2a3750cafab3d99f") (:url . "https://github.com/kenbeese/helm-bibtexkey") (:keywords "bib" "tex"))]) (helm-bibtex . [(20170321 1306) ((helm (1 5 5)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A bibliography manager based on Helm" tar ((:commit . "13f27f3cfdf137bdb22addfc0c832ba1c8572c25"))]) (helm-bbdb . [(20170505 2338) ((helm (1 5)) (bbdb (3 1 2))) "Helm interface for bbdb" single ((:commit . "c0e6b83911598fe334c51b12f51ff1a8252ed11d") (:url . "https://github.com/emacs-helm/helm-bbdb"))]) (helm-backup . [(20170625 328) ((helm (1 5 5)) (s (1 8 0)) (cl-lib (0))) "Backup each file change using git" single ((:commit . "b6f930a370f6339988e79e0c85e9deee98c7b9f4") (:url . "http://github.com/antham/helm-backup") (:keywords "backup" "convenience" "files" "tools" "vc"))]) (helm-aws . [(20151124 133) ((helm (1 5 3)) (cl-lib (0 5)) (s (1 9 0))) "Manage AWS EC2 server instances directly from Emacs" single ((:commit . "512fb7edcdc6c65303b9641bfc737f836939e5e9") (:url . "https://github.com/istib/helm-aws"))]) (helm-anything . [(20141126 231) ((helm (20130406)) (anything (20120101))) "Bridge between anything and helm" single ((:commit . "0ec578922928b7c75cf034d1b7a956b5f36107ea") (:url . "http://www.emacswiki.org/emacs/download/helm-anything.el") (:keywords "helm" "anything" "convenience" "search" "tools"))]) (helm-ag-r . [(20131123 731) ((helm (1 0))) "Search something by ag and display by helm" single ((:commit . "67de4ebafe9b088db950eefa5ef590a6d78b4ac8") (:url . "https://github.com/yuutayamada/helm-ag-r") (:keywords "searching"))]) (helm-ag . [(20170209 745) ((emacs (24 4)) (helm (2 0))) "the silver searcher with helm interface" single ((:commit . "2fc02c4ead29bf0db06fd70740cc7c364cb650ac") (:url . "https://github.com/syohex/emacs-helm-ag"))]) (helm-ad . [(20151209 215) ((dash (2 8 0)) (helm (1 6 2))) "helm source for Active Directory" single ((:commit . "8ac044705d8620ee354a9cfa8cc1b865e83c0d55") (:keywords "comm"))]) (helm-ack . [(20141030 526) ((helm (1 0)) (cl-lib (0 5))) "Ack command with helm interface" single ((:commit . "889bc225318d14c6e3be80e73b1d9d6fb30e48c3") (:url . "https://github.com/syohex/emacs-helm-ack"))]) (helm-R . [(20120819 1714) ((helm (20120517)) (ess (20120509))) "helm-sources and some utilities for GNU R." single ((:commit . "b0eb9d5f6a483a9dbe6eb6cf1f2024d4f5938bc2") (:url . "https://github.com/myuhe/helm-R.el") (:keywords "convenience"))]) (helm . [(20170628 2213) ((emacs (24 4)) (async (1 9 2)) (popup (0 5 3)) (helm-core (2 8 0))) "Helm is an Emacs incremental and narrowing framework" tar ((:commit . "8bc2f0f5952ce3887a2d1e94cb71fd533fbeb902") (:url . "https://emacs-helm.github.io/helm/"))]) (headlong . [(20150417 826) nil "reckless completion" single ((:commit . "f6830f87f236eee88263cb6976125f72422abe72") (:url . "https://github.com/abo-abo/headlong") (:keywords "completion"))]) (header2 . [(20170223 729) nil "Support for creation and update of file headers." single ((:url . "https://www.emacswiki.org/emacs/download/header2.el") (:keywords "tools" "docs" "maint" "abbrev" "local"))]) (hcl-mode . [(20170107 27) ((emacs (24 3))) "Major mode for Hashicorp" single ((:commit . "0f2c5ec7e7bcf77c8548e8cac8721ea935ca1b5e") (:url . "https://github.com/syohex/emacs-hcl-mode"))]) (hc-zenburn-theme . [(20150928 933) nil "An higher contrast version of the Zenburn theme." single ((:commit . "fd0024a5191cdce204d91c8f1db99ba31640f6e9") (:url . "https:github.com/edran/hc-zenburn-emacs"))]) (hayoo . [(20140831 521) ((emacs (24)) (json (1 3))) "Query hayoo and show results in a tabulated buffer." single ((:commit . "3ca2fb0c4d5f337d0410c21b2702dd147014e984") (:url . "https://github.com/benma/hayoo.el/") (:keywords "hayoo" "haskell"))]) (haxor-mode . [(20160618 429) ((emacs (24 0))) "Major mode for editing Haxor Assembly Files" single ((:commit . "6fa25a8e6b6a59481bc0354c2fe1e0ed53cbdc91") (:url . "https://github.com/krzysztof-magosa/haxor-mode") (:keywords "haxor"))]) (haxe-mode . [(20131004 142) nil "An Emacs major mode for Haxe" single ((:url . "http://people.debian.org/~jps/misc/haxe-mode.el"))]) (haxe-imports . [(20170330 1604) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 1))) "Code for dealing with Haxe imports" single ((:commit . "f104a641f3dfe698359d9aca1f28d9383cf43e04") (:url . "http://www.github.com/accidentalrebel/emacs-haxe-imports") (:keywords "haxe"))]) (haste . [(20141030 1334) ((json (1 2))) "Emacs client for hastebin (http://hastebin.com/about.md)" single ((:commit . "22d05aacc3296ab50a7361222ab139fb4d447c25") (:url . "http://github.com/rlister/emacs-haste-client"))]) (hasky-extensions . [(20170520 149) ((emacs (24 4)) (avy-menu (0 2))) "Toggle Haskell language extensions" single ((:commit . "5a57a6401f6625640f46d8f8d540ecddf52bb12d") (:url . "https://github.com/hasky-mode/hasky-extensions") (:keywords "programming"))]) (haskell-tab-indent . [(20151205 1159) nil "tab-based indentation for haskell-mode" single ((:commit . "93ea6a3a707fc34a97ce94e0285e9569e01062c4") (:url . "https://spwhitton.name/tech/code/haskell-tab-indent/") (:keywords "indentation" "haskell"))]) (haskell-snippets . [(20160918 1722) ((cl-lib (0 5)) (yasnippet (0 8 0))) "Yasnippets for Haskell" tar ((:commit . "07b0f460b946fd1be26c29652cb0468b47782f3a") (:url . "https://github.com/haskell/haskell-snippets") (:keywords "snippets" "haskell"))]) (haskell-mode . [(20170601 2103) ((emacs (24 3))) "A Haskell editing mode" tar ((:commit . "c46bdf129fb7ac241b84e0cfffcd3c7588dfb1af") (:keywords "haskell" "cabal" "ghc" "repl") (:url . "https://github.com/haskell/haskell-mode"))]) (haskell-emacs-text . [(20150713 716) ((haskell-emacs (2 4 0))) "Haskell functions from Data.Text" tar ((:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:url . "https://github.com/knupfer/haskell-emacs/modules/text") (:keywords "haskell" "emacs" "ffi"))]) (haskell-emacs-base . [(20150714 859) ((haskell-emacs (2 4 0))) "Haskell functions from Prelude" tar ((:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:url . "https://github.com/knupfer/haskell-emacs/modules/base") (:keywords "haskell" "emacs" "ffi"))]) (haskell-emacs . [(20160904 1326) nil "Write emacs extensions in haskell" tar ((:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:url . "https://github.com/knupfer/haskell-emacs") (:keywords "haskell" "emacs" "ffi"))]) (harvest . [(20160811 1810) ((swiper (0 7 0)) (hydra (0 13 0)) (s (1 11 0))) "Harvest integration" single ((:commit . "384e1ae10dcbdec4a1e2097094a8160507ea46a6") (:url . "https://github.com/kostajh/harvest.el") (:keywords "harvest"))]) (hardhat . [(20160414 713) ((ignoramus (0 7 0))) "Protect against clobbering user-writable files" single ((:commit . "9038a49ab55cd4c502cf7f07ed0d1b9b6bc3626e") (:url . "http://github.com/rolandwalker/hardhat") (:keywords "convenience"))]) (hardcore-mode . [(20151113 2301) nil "Disable arrow keys + optionally backspace and return" single ((:commit . "b1dda19692b4a7a58a689e81784a9b35be39e70d"))]) (handoff . [(20150916 2300) nil "Get your hand off that mouse, damn it!" single ((:commit . "75dc7a7e352f38679f65d0ca80ad158798e168bd") (:url . "http://github.com/rejeep/handoff.el"))]) (handlebars-sgml-mode . [(20130623 1633) nil "Add Handlebars contextual indenting support to sgml-mode" single ((:commit . "c76df93a9a8c1b1b3efdcc4add32bf93304192a4") (:url . "http://github.com/jacott/handlebars-sgml-mode"))]) (handlebars-mode . [(20150211 949) nil "A major mode for editing Handlebars files." single ((:commit . "81f6b73fea8f397807781a1b51568397af21a6ef"))]) (hamlet-mode . [(20131207 2324) ((cl-lib (0 3)) (dash (2 3 0)) (s (1 7 0))) "Hamlet editing mode" single ((:commit . "7362b955e556a3d007fa06945a27e5b99349527d") (:url . "https://github.com/lightquake/hamlet-mode") (:keywords "wp" "languages" "comm"))]) (haml-mode . [(20170624 2148) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing Haml files" single ((:commit . "c7c96a269f9b1a0302ff81360e1b5e693d784774") (:url . "https://github.com/nex3/haml-mode") (:keywords "markup" "language" "html"))]) (hamburger-menu . [(20160825 1331) ((emacs (24 5))) "Mode line hamburger menu" single ((:commit . "3568159c693c30bed7f61580e4f3b6241253ad4e") (:url . "https://gitlab.com/iain/hamburger-menu-mode") (:keywords "hamburger" "menu"))]) (hamburg-theme . [(20160122 2340) ((emacs (24))) "Color Theme with a dark blue background." single ((:commit . "aacefdf1501d97a5afc0e63c8ead4b2463323028"))]) (ham-mode . [(20150811 606) ((html-to-markdown (1 2)) (markdown-mode (2 0))) "Html As Markdown. Transparently edit an html file using markdown" single ((:commit . "3a141986a21c2aa6eefb428983352abb8b7907d2") (:url . "http://github.com/Bruce-Connor/ham-mode") (:keywords "convenience" "emulation" "wp"))]) (hal-mode . [(20160704 1046) nil "Major mode for editing HAL files" single ((:commit . "cd2f66f219ee520198d4586fb6b169cef7ad3f21") (:url . "https://github.com/strahlex/hal-mode/") (:keywords "language"))]) (hackernews . [(20160627 1651) ((json (1 2))) "Access the hackernews aggregator from Emacs" tar ((:commit . "629fe18abbef6674821876ed089c4fa83b709d1b"))]) (hacker-typer . [(20170206 720) ((emacs (24))) "Pretend to write code like a pro" tar ((:commit . "d5a23714a4ccc5071580622f278597d5973f40bd") (:url . "http://github.com/therockmandolinist/emacs-hacker-typer") (:keywords "hacker" "typer" "multimedia" "games"))]) (hack-time-mode . [(20170527 910) ((emacs (24 4))) "Forge time" single ((:commit . "73d6fcf8b39283526e5d4e3919193611e25a0898") (:url . "https://gitlab.com/marcowahl/hack-time-mode") (:keywords "time" "convenience"))]) (habitica . [(20170203 2122) ((org (8 3 5)) (emacs (24 3))) "Interface for habitica.com" single ((:commit . "f3e326b7342953ffd5d3ced9266b46387b2bf9ce") (:url . "https://github.com/abrochard/emacs-habitica") (:keywords "habitica" "todo"))]) (gxref . [(20170411 1053) ((emacs (25))) "xref backend using GNU Global." single ((:commit . "380b02c3c3c2586c828456716eef6a6392bb043b") (:url . "https://github.com/dedi/gxref") (:keywords "xref" "global" "tools"))]) (gvpr-mode . [(20131208 918) nil "A major mode offering basic syntax coloring for gvpr scripts." single ((:commit . "3d6cc6f4416faf2a1913821d12ba6eb624362af0") (:url . "https://raw.github.com/rodw/gvpr-lib/master/extra/gvpr-mode.el") (:keywords "graphviz" "gv" "dot" "gvpr" "graph"))]) (guru-mode . [(20160415 1921) nil "Become an Emacs guru" single ((:commit . "81db5611dd29f2c3d9ea91fb7f086a2cf9847553") (:url . "https://github.com/bbatsov/guru-mode") (:keywords "convenience"))]) (gulp-task-runner . [(20161103 1523) nil "Gulp task runner" single ((:commit . "f13da9e619c1838571df0a0462c273ed6e76defc") (:keywords "convenience" "javascript"))]) (guix . [(20170702 724) ((emacs (24 3)) (dash (2 11 0)) (geiser (0 8)) (bui (1 1 0)) (magit-popup (2 1 0))) "Interface for GNU Guix" tar ((:commit . "6d4ccb3f7376d6326b58b25f3c94ab546418a030") (:url . "https://alezost.github.io/guix.el/") (:keywords "tools"))]) (guide-key-tip . [(20161011 123) ((guide-key (1 2 3)) (pos-tip (0 4 5))) "Show guide-key.el hints using pos-tip.el" single ((:commit . "02c5d4b0b65f3e91be5a47f0ff1ae5e86e00c64e") (:url . "https://github.com/aki2o/guide-key-tip") (:keywords "help" "convenience" "tooltip"))]) (guide-key . [(20150107 2235) ((dash (2 10 0)) (popwin (0 3 0)) (s (1 9 0))) "Guide the following key bindings automatically and dynamically" single ((:commit . "9236d287a7272e307fb941237390a96037c8c0a2") (:url . "https://github.com/kai2nenobu/guide-key") (:keywords "help" "convenience"))]) (guess-language . [(20170620 308) ((cl-lib (0 5)) (emacs (24))) "Robust automatic language detection" tar ((:commit . "1f1602f74d7159e7fb8c90f92ec5a3d1df5429da") (:url . "https://github.com/tmalsburg/guess-language.el"))]) (gtk-pomodoro-indicator . [(20170517 900) nil "A pomodoro indicator for the GTK tray" tar ((:commit . "0fa0e682b3bd1595f230275d73ca231e93c6d28a") (:url . "https://github.com/abo-abo/gtk-pomodoro-indicator") (:keywords "convenience" "pomodoro"))]) (gscholar-bibtex . [(20170509 1134) nil "Retrieve BibTeX from Google Scholar and other online sources(ACM, IEEE, DBLP)" single ((:commit . "ba505ea5043092444afb4284ae268d37e1c51e54") (:keywords "extensions"))]) (gs-mode . [(20151202 206) nil "Major mode for editing GrADS script files" single ((:commit . "1a13051db21b999c7682a015b33a03096ff9d891") (:keywords "grads" "script" "major-mode"))]) (gruvbox-theme . [(20170630 213) ((autothemer (0 2))) "A retro-groove colour theme for Emacs" tar ((:commit . "8b3bc9940d3513b9a76d19229896c1fefbffde87") (:url . "http://github.com/Greduan/emacs-theme-gruvbox"))]) (grunt . [(20160316 828) ((dash (2 9 0)) (ansi-color (3 4 2)) (emacs (24 3))) "Some glue to stick Emacs and Gruntfiles together" single ((:commit . "4c269e2738658643ec2ed9ef61a2a3d71b08d304") (:url . "https://github.com/gempesaw/grunt.el") (:keywords "convenience" "grunt"))]) (gruber-darker-theme . [(20170330 1211) nil "Gruber Darker color theme for Emacs 24." single ((:commit . "b9e59d9580d2b95dabf9a53ee3d51c2868b693fa") (:url . "http://github.com/rexim/gruber-darker-theme"))]) (groovy-mode . [(20170629 948) ((s (1 11 0))) "Major mode for Groovy source files" tar ((:commit . "58bb858d77cf5e61ee392a1ca415a90298d77e4b") (:keywords "languages"))]) (groovy-imports . [(20161003 151) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Groovy imports" single ((:commit . "e56d7dda617555ec6205644d32ffddf2e1fa43d9") (:url . "http://www.github.com/mbezjak/emacs-groovy-imports") (:keywords "groovy"))]) (grizzl . [(20160818 37) ((cl-lib (0 5)) (emacs (24 3))) "Fast fuzzy search index for Emacs." single ((:commit . "d554d93afa8519ee3a41340ec8aa6b4555065446") (:url . "https://github.com/grizzl/grizzl") (:keywords "convenience" "usability"))]) (grin . [(20110805 2358) nil "run grin and grind (python replacements for grep and find) putting hits in a grep buffer" single ((:url . "http://bitbucket.org/dariusp686/emacs-grin") (:keywords "python" "grin" "grind" "grep" "find"))]) (greymatters-theme . [(20150621 423) ((emacs (24))) "Emacs 24 theme with a light background." single ((:commit . "a7220a8c6cf18ccae2b76946b6f01188a7c9d5d1"))]) (grep-a-lot . [(20131006 647) nil "manages multiple search results buffers for grep.el" single ((:commit . "9f9f645b9e308a0d887b66864ff97d0fca1ba4ad") (:url . "https://github.com/ZungBang/emacs-grep-a-lot") (:keywords "tools" "convenience" "search"))]) (grep+ . [(20170223 728) nil "Extensions to standard library `grep.el'." single ((:url . "https://www.emacswiki.org/emacs/download/grep%2b.el") (:keywords "tools" "processes" "compile"))]) (gregorio-mode . [(20151026 720) nil "Gregorio Mode for .gabc files" single ((:commit . "5b618a8d05cc073bd8e6f1e4e56eceb4de60eab3") (:url . "http://chant.fsspx.pl/gregorio-mode/docs/") (:keywords "gregorio" "chant"))]) (green-screen-theme . [(20170209 1208) nil "A nice color theme for those who miss green CRTs" single ((:commit . "e47e3eb903b4d9dbcc66342d91915947b35e5e1e") (:url . "https://github.com/rbanffy/green-screen-emacs") (:keywords "faces" "theme"))]) (green-phosphor-theme . [(20150515 747) nil "A light color theme with muted, autumnal colors." single ((:commit . "fa42f598626adfdc5450e5c380fa2d5df6110f28") (:url . "http://github.com/aalpern/emacs-color-theme-green-phosphor") (:keywords "color" "theme"))]) (grass-mode . [(20170503 800) ((cl-lib (0 2)) (dash (2 8 0))) "Provides Emacs modes for interacting with the GRASS GIS program" single ((:keywords "grass" "gis"))]) (grapnel . [(20131001 834) nil "HTTP request lib with flexible callback dispatch" single ((:commit . "fbd0f9a51139973d35e4014855964fa435e8ecaf") (:url . "http://www.github.com/leathekd/grapnel"))]) (graphviz-dot-mode . [(20151127 621) nil "Mode for the dot-language used by graphviz (att)." single ((:commit . "ca0f15158c3bbd516549532be1dd35bc51462c84") (:url . "http://ppareit.github.com/graphviz-dot-mode/") (:keywords "mode" "dot" "dot-language" "dotlanguage" "graphviz" "graphs" "att"))]) (graphql-mode . [(20170625 652) ((emacs (24 3))) "Major mode for editing GraphQL schemas" single ((:commit . "3c25bf5cbd5ba4c60dca9c96286412eb765de7c9") (:keywords "languages"))]) (graphene-meta-theme . [(20161204 807) nil "Integrated theming for common packages" single ((:commit . "62cc73fee31f1bd9474027b83a249feee050271e") (:url . "https://github.com/rdallasgray/graphene") (:keywords "defaults"))]) (graphene . [(20161120 938) ((dash (2 10 0)) (exec-path-from-shell (1 9)) (ppd-sr-speedbar (0 0 6)) (sr-speedbar (20140505)) (ido-ubiquitous (3 6)) (smex (3 0)) (web-mode (11 2)) (smartparens (1 8 0)) (graphene-meta-theme (0 0 2)) (flycheck (0 23)) (company (0 8 12))) "Friendly Emacs defaults" tar ((:commit . "bf77248e49b116a241bd5856df918ed63f89e195"))]) (grandshell-theme . [(20170507 104) nil "Dark color theme for Emacs > 24 with intensive colors." tar ((:commit . "2f7e607cde9dd38ad4a95f3f3ad6cd85eba09f7b"))]) (grails-projectile-mode . [(20160327 624) ((projectile (0 10 0)) (emacs (24)) (cl-lib (0 5))) "Grails mode with Projectile for projects management." tar ((:commit . "8efca50ce92b556fe9d467b157d7aec635bcc017") (:url . "https://github.com/yveszoundi/grails-projectile-mode") (:keywords "grails" "projectile"))]) (grails-mode . [(20160504 211) nil "minor-mode that adds some Grails project management to a grails project" single ((:commit . "58bb858d77cf5e61ee392a1ca415a90298d77e4b") (:url . "http://blog.wolfman.com") (:keywords "languages"))]) (grails . [(20160416 2336) ((emacs (24))) "Minor mode for Grails projects" single ((:commit . "fa638abe5c37f3f8af4fcd32f212453185ce50b1") (:url . "https://github.com/lifeisfoo/emacs-grails"))]) (gradle-mode . [(20150313 1205) ((s (1 8 0))) "Gradle integration with Emacs' compile" single ((:commit . "e4d665d5784ecda7ddfba015f07c69be3cfc45f2") (:url . "http://github.com/jacobono/emacs-gradle-mode") (:keywords "gradle"))]) (grab-x-link . [(20161130 2147) ((emacs (24)) (cl-lib (0 5))) "Grab links from X11 apps and insert into Emacs" single ((:commit . "d2ef886097f59e1facc5cb5d8cd1c77bf340be76") (:url . "https://github.com/xuchunyang/grab-x-link") (:keywords "hyperlink"))]) (grab-mac-link . [(20170228 1039) ((emacs (24))) "Grab link from Mac Apps and insert it into Emacs" single ((:commit . "8bf05a69758fd10a4303c5c458cd91a49ab8b1b2") (:url . "https://github.com/xuchunyang/grab-mac-link.el") (:keywords "markdown" "mac" "hyperlink"))]) (govet . [(20150428 1159) nil "linter/problem finder for the Go source code" single ((:commit . "736f11850f2d1d62bd417fb57d4f8bb55a176b70") (:url . "https://godoc.org/golang.org/x/tools/cmd/vet"))]) (govc . [(20170629 1129) ((emacs (24 3)) (dash (1 5 0)) (s (1 9 0)) (magit-popup (2 0 50)) (json-mode (1 6 0))) "Interface to govc for managing VMware ESXi and vCenter" single ((:commit . "2eadc60de1af9cf30d3c8ca9193813b1f0497f01") (:url . "https://github.com/vmware/govmomi/tree/master/govc/emacs") (:keywords "convenience"))]) (goto-last-change . [(20150109 1023) nil "Move point through buffer-undo-list positions" single ((:commit . "58b0928bc255b47aad318cd183a5dce8f62199cc") (:url . "https://github.com/camdez/goto-last-change.el") (:keywords "convenience"))]) (goto-gem . [(20140729 1145) ((s (1 9 0))) "Open dired in gem directory" single ((:commit . "e3206f11f48bb7e798514a4ca2c2f60649613e5e") (:keywords "gemfile" "convenience"))]) (goto-chg . [(20131228 659) nil "goto last change" single ((:keywords "convenience" "matching"))]) (gotham-theme . [(20170521 417) nil "A very dark Emacs color theme." single ((:commit . "df428b477eb84f2ccd791c4310587cfd72644692") (:url . "https://github.com/wasamasa/gotham-theme"))]) (gotest . [(20170522 53) ((emacs (24 3)) (s (1 11 0)) (f (0 19 0)) (go-mode (1 4 0))) "Launch GO unit tests" single ((:commit . "c15bdcb78a46167e7a3fbaf5f71cbeddf2f13b78") (:url . "https://github.com/nlamirault/gotest.el") (:keywords "languages" "go" "tests"))]) (gorepl-mode . [(20151121 422) ((emacs (24))) "Go REPL Interactive Development in top of Gore" single ((:commit . "17e025951f5964a0542a4b353ddddbc734c01eed") (:url . "http://www.github.com/manute/gorepl-mode") (:keywords "languages" "go" "golang" "gorepl"))]) (gore-mode . [(20151123 1127) ((go-mode (1 0 0))) "Simple mode for gore, a command-line evaluator for golang." single ((:commit . "94d7f3e99104e06167967c98fdc201049c433c2d") (:keywords "go" "repl"))]) (goose-theme . [(20160828 545) ((emacs (24 1))) "A gray color theme" single ((:commit . "acd017b50ab25a75fd1331eb3de66467e2042e9c") (:url . "https://github.com/thwg/goose-theme"))]) (google-translate . [(20161206 1408) nil "Emacs interface to Google Translate." tar ((:commit . "52d34c96b400b1b933c727933279f79256951b19"))]) (google-this . [(20160710 1720) ((emacs (24 1))) "A set of functions and bindings to google under point." single ((:commit . "4713c93d4c45458a7320b5e2af9b1edd43fd5e0b") (:url . "http://github.com/Malabarba/emacs-google-this") (:keywords "convenience" "hypermedia"))]) (google-maps . [(20161210 458) ((emacs (24 3))) "Access Google Maps from Emacs" tar ((:commit . "956e6ad42bc3819bcaf4cc66a640f5079b385ed7") (:url . "https://julien.danjou.info/projects/emacs-packages#google-maps") (:keywords "comm"))]) (google-contacts . [(20170112 1022) ((oauth2 (0 10))) "Support for Google Contacts in Emacs" tar ((:commit . "cf654c59b197a028eb8bf432d52776c2e0ad4135") (:url . "http://julien.danjou.info/projects/emacs-packages#google-contacts") (:keywords "comm"))]) (google-c-style . [(20140929 1118) nil "Google's C/C++ style for c-mode" single ((:commit . "d75bd35c8fd1c32aab86ea47e7ef4d3c776faa0a") (:keywords "c" "tools"))]) (google . [(20140416 1048) nil "Emacs interface to the Google API" single ((:commit . "3b3189a8b201c8d36fed6e61496274e530dd40bd") (:keywords "comm" "processes" "tools"))]) (gom-mode . [(20131007 1953) nil "Major mode for Gomfile" single ((:commit . "972e33df1d38ff323bc97de87477305826013701") (:url . "https://github.com/syohex/emacs-gom-mode"))]) (golint . [(20150414 1730) nil "lint for the Go source code" single ((:commit . "c5fb716d6688a859aae56d26d3e6070808df29f7") (:url . "https://github.com/golang/lint"))]) (golden-ratio-scroll-screen . [(20170223 1829) nil "Scroll half screen down or up, and highlight current line" single ((:commit . "44e947194d3e5cbe0fd2f3c4886a4e6e1a0c0791") (:url . "https://github.com/jixiuf/golden-ratio-scroll-screen") (:keywords "scroll" "screen" "highlight"))]) (golden-ratio . [(20150819 420) nil "Automatic resizing of Emacs windows to the golden ratio" single ((:commit . "72b028808b41d23fa3f7e8c0d23d2c475e7b46ae") (:keywords "window" "resizing"))]) (gold-mode . [(20140606 1906) ((sws-mode (0))) "Major mode for editing .gold files" single ((:commit . "6d3aa59602b1b835495271c8c9741ac344c2eab1") (:url . "https://github.com/yuutayamada/gold-mode-el") (:keywords "golang" "template" "gold"))]) (godoctor . [(20161205 143) nil "Frontend for godoctor" single ((:commit . "f892a4dbabe61186540d6035c5185fd929a6a543") (:url . "https://github.com/microamp/godoctor.el") (:keywords "go" "golang" "refactoring"))]) (god-mode . [(20151005 925) nil "God-like command entering minor mode" tar ((:commit . "6cf0807b6555eb6fcf8387a4e3b667071ef38964") (:url . "https://github.com/chrisdone/god-mode"))]) (gobgen . [(20161020 823) ((emacs (24 4))) "Generate GObject descendants using a detailed form" single ((:commit . "ed2c2b0d217deae293096f3cf14aa492791ddd4f") (:keywords "gobject" "glib" "gtk" "helper" "utilities"))]) (go-stacktracer . [(20150430 1442) nil "parse Go stack traces" single ((:commit . "a2ac6d801b389f80ca4e2fcc1ab44513a9e55976") (:url . "https://github.com/samertm/go-stacktracer.el") (:keywords "tools"))]) (go-snippets . [(20151121 2257) ((yasnippet (0 8 0))) "Yasnippets for go" tar ((:commit . "983eb74025030bf6d405f1ed63be3162cc28a528"))]) (go-scratch . [(20150809 2140) ((go-mode (1 3 1)) (emacs (24))) "*scratch* buffer for Go" single ((:commit . "3f68cbcce04f59eb8e83af109164731ec0454be0") (:keywords "languages" "go"))]) (go-rename . [(20161117 331) ((go-mode (1 3 1))) "Integration of the 'gorename' tool into Emacs." single ((:commit . "bfe7a14e9bf957d050e3c429156e697bb3670f21") (:keywords "tools"))]) (go-projectile . [(20170302 1705) ((projectile (0 10 0)) (go-mode (0)) (go-eldoc (0 16)) (go-rename (0)) (go-guru (0))) "Go add-ons for Projectile" single ((:commit . "4c449eae696d4e3a15078c336c98ea779da227ab") (:url . "https://github.com/dougm/go-projectile") (:keywords "project" "convenience"))]) (go-playground-cli . [(20160503 214) ((emacs (24)) (request (0 2 0)) (deferred (0 3 2)) (names (20151201 404)) (s (1 10 0)) (f (0 17 2)) (let-alist (1 0 4)) (cl-lib (0 5))) "Go Playground client tool" single ((:commit . "60beebd98e3930641d41cee0189c579626f223bc") (:url . "https://github.com/kosh04/go-playground-cli"))]) (go-playground . [(20170226 43) ((emacs (24)) (go-mode (1 4 0)) (gotest (0 13 0))) "Local Golang playground for short snippets." single ((:commit . "559d53bbc507394aaca3683325d17286637bf4f0") (:url . "https://github.com/grafov/go-playground") (:keywords "tools" "golang"))]) (go-mode . [(20170308 1512) nil "Major mode for the Go programming language" single ((:commit . "bfe7a14e9bf957d050e3c429156e697bb3670f21") (:url . "https://github.com/dominikh/go-mode.el") (:keywords "languages" "go"))]) (go-impl . [(20170125 752) ((emacs (24 3)) (go-mode (1 3 0))) "impl integration for go-mode" single ((:commit . "69f0d0ef05771487e15abec500cd06befd171abf") (:url . "https://github.com/syohex/emacs-go-impl"))]) (go-guru . [(20170501 1058) ((go-mode (1 3 1)) (cl-lib (0 5))) "Integration of the Go 'guru' analysis tool into Emacs." single ((:commit . "bfe7a14e9bf957d050e3c429156e697bb3670f21") (:keywords "tools"))]) (go-gopath . [(20160705 334) ((cl-lib (0 5))) "Will guess GOPATH using gb and projectile." single ((:commit . "5172fc53f21edbf9347d5ee7d1d745da1ec88a15") (:url . "http://github.com/iced/go-gopath/"))]) (go-errcheck . [(20160722 1743) nil "errcheck integration for go-mode" single ((:commit . "9db21eccecedc2490793f176246094167164af31"))]) (go-eldoc . [(20170305 627) ((emacs (24 3)) (go-mode (1 0 0))) "eldoc for go-mode" single ((:commit . "cbbd2ea1e94a36004432a9ac61414cb5a95a39bd") (:url . "https://github.com/syohex/emacs-go-eldoc"))]) (go-dlv . [(20160517 1346) ((go-mode (1 3 1))) "Go Delve - Debug Go programs interactively with the GUD." single ((:commit . "45a9e8a047c9995eb7c802268d96b3e527569f41") (:url . "https://github.com/benma/go-dlv.el/") (:keywords "go" "debug" "debugger" "delve" "interactive" "gud"))]) (go-direx . [(20150315 1843) ((direx (1 0 0)) (cl-lib (0 5))) "Tree style source code viewer for Go language" single ((:commit . "8f2206469328ee932c7f1892f5e1fb02dec98432") (:url . "https://github.com/syohex/emacs-go-direx"))]) (go-complete . [(20151015 228) ((go-mode (0)) (cl-lib (0 5))) "Native code completion for Go" single ((:commit . "e39efc356f6e19f17db3f3d2c81f28d38b31a55e") (:url . "https://github.com/vibhavp/go-complete") (:keywords "go" "golang" "completion"))]) (go-autocomplete . [(20170626 323) ((auto-complete (1 4 0))) "auto-complete-mode backend for go-mode" single ((:commit . "beae6bdcc6fc300059038961b7a3e977e0fb7c61") (:keywords "languages"))]) (go-add-tags . [(20161123 427) ((emacs (24 3)) (s (1 11 0))) "Add field tags for struct fields" single ((:commit . "54879945e46a0884c5f93d7fd6c866a9cdf401ac") (:url . "https://github.com/syohex/emacs-go-add-tags"))]) (go . [(20161110 1849) ((emacs (24))) "Play GO, translate and transfer between GO back ends" tar ((:commit . "ff45fb44d9cb6579d8511d8b6156ed0b34d5ac97") (:url . "http://eschulte.github.io/el-go/") (:keywords "game" "go" "sgf"))]) (gnus-x-gm-raw . [(20140610 31) ((log4e (0 2 0)) (yaxception (0 1))) "Search mail of Gmail using X-GM-RAW as web interface" single ((:commit . "978bdfcecc8844465b71641c2e909fcdc66b22be") (:url . "https://github.com/aki2o/gnus-x-gm-raw") (:keywords "gnus"))]) (gnus-summary-ext . [(20160704 1120) nil "Extra limit and process mark commands for the gnus summary buffer" single ((:commit . "2298b0eca887a9df1e2d7c61d92176bb175ea482") (:url . "https://github.com/vapniks/gnus-summary-ext") (:keywords "comm"))]) (gnus-spotlight . [(20130901 735) nil "Search mail with Spotlight" single ((:keywords "mail" "searching" "spotlight"))]) (gnus-desktop-notify . [(20170305 1215) ((gnus (1 0))) "Gnus Desktop Notification global minor mode" single ((:commit . "7d80d5e1894859e963584c55f570508fdf9c2ee0") (:url . "http://www.thregr.org/~wavexx/software/gnus-desktop-notify.el/"))]) (gnus-alias . [(20150315 1742) nil "an alternative to gnus-posting-styles" single ((:commit . "9447d3ccb4c0e75d0468899cccff7aa249657bac") (:keywords "personality" "identity" "news" "mail" "gnus"))]) (gnuplot-mode . [(20151122 2339) nil "Major mode for editing gnuplot scripts" single ((:commit . "296ff8d263513cdfb8e85b06e2441c751565b793") (:url . "https://github.com/mkmcc/gnuplot") (:keywords "gnuplot" "plotting"))]) (gnuplot . [(20141231 1337) nil "drive gnuplot from within emacs" tar ((:commit . "21f9046e3f5caad41b750b5c9cee02fa4fd20fb9") (:keywords "gnuplot" "plotting"))]) (gnu-apl-mode . [(20170406 732) ((emacs (24))) "Integrate GNU APL with Emacs" tar ((:commit . "72f6a7fc9153d141494b19ca7ff2c0d1e35c2a16") (:keywords "languages" "apl") (:url . "https://github.com/lokedhs/gnu-apl-mode"))]) (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" single ((:commit . "767571135e2c0985944017dc59b0be79af222ef5"))]) (gnomenm . [(20150316 1218) ((s (1 9 0)) (dash (2 3 0)) (kv (0 0 19))) "Emacs interface to Gnome nmcli command" single ((:commit . "9065cda44ffc9e06239b8189a0154d31314c3b4d") (:url . "http://github.com/nicferrier/emacs-nm") (:keywords "processes" "hardware"))]) (gnome-calendar . [(20161110 456) nil "Integration with the GNOME Shell calendar" single ((:commit . "489f9f15f7bb35696b1cc19db75b554ae8328df2") (:keywords "gnome" "calendar"))]) (gmpl-mode . [(20151116 1149) ((emacs (24))) "Major mode for editing GMPL(MathProg) files" single ((:commit . "a4481bcbd84f67cd87e7bc87456b6f5b3a95fcf6") (:keywords "extensions"))]) (gmail2bbdb . [(20170423 444) nil "import email and name into bbdb from vcard." single ((:commit . "a84fa385cfaec7fc5f1518c368e52722da139f99") (:url . "http://github.com/redguardtoo/gmail2bbdb") (:keywords "vcard" "bbdb" "email" "contact" "gmail"))]) (gmail-message-mode . [(20160627 1147) ((ham-mode (1 0))) "A major-mode for editing gmail messages using markdown syntax." single ((:commit . "ec36672a9dc93c09ebe2f77597b498d11883d008") (:url . "http://github.com/Bruce-Connor/gmail-message-mode") (:keywords "mail" "convenience" "emulation"))]) (glsl-mode . [(20160209 833) nil "major mode for Open GLSL shader files" single ((:commit . "b4709644bb01b522ba9c8afe16ed2394783c481f") (:url . "http://artis.inrialpes.fr/~Xavier.Decoret/resources/glsl-mode/") (:keywords "languages"))]) (glab . [(20160808 539) ((emacs (25))) "minuscule client for the Gitlab API" single ((:commit . "5ced0214622450930bcea105b9aac785c594609d") (:url . "https://gitlab.com/tarsius/glab") (:keywords "tools"))]) (gitter . [(20161203 9) ((emacs (24 4)) (let-alist (1 0 4))) "An Emacs Gitter client" single ((:commit . "3ff1c72ee85be4e3b648b4c52b0638129f3cf7a6") (:url . "https://github.com/xuchunyang/gitter.el") (:keywords "gitter" "chat" "client" "internet"))]) (gitolite-clone . [(20160609 1655) ((dash (2 10 0)) (s (1 9 0)) (pcache (0 3 1)) (emacs (24))) "Clone gitolite repositories from a completing list" single ((:commit . "d8a4c2875c984e51137c980b5773f42703602721") (:url . "https://github.com/IvanMalison/gitolite-clone") (:keywords "gitolite" "clone" "git"))]) (gitlab . [(20170120 22) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Gitlab" tar ((:commit . "730a86b770b0838c86e7080d8d502528e0c26792") (:url . "https://github.com/nlamirault/emacs-gitlab") (:keywords "gitlab"))]) (gitignore-mode . [(20160319 302) nil "Major mode for editing .gitignore files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (github-theme . [(20170630 1501) nil "The GitHub color theme for Emacs." single ((:commit . "29f00a51d949a248a5f6355a97131e216747c797") (:url . "https://github.com/philiparvidsson/GitHub-Theme-for-Emacs"))]) (github-search . [(20160822 1328) ((magit (2 1 0)) (gh (1 0 0))) "Clone repositories by searching github" single ((:commit . "24435772bf8c2c55b4f228917a1344d785851e2a") (:url . "https://github.com/IvanMalison/github-search") (:keywords "github" "search" "clone" "api" "gh" "magit"))]) (github-pullrequest . [(20170115 2216) ((emacs (24 4)) (request (0 2 0)) (dash (2 11 0)) (magit (2 10 0))) "Create and fetch Github Pull requests with ease" single ((:commit . "6ae5c38b0fc15b638b5ba4490112d9822ce5e267") (:url . "https://github.com/jakoblind/github-pullrequest") (:keywords "tools"))]) (github-notifier . [(20170604 2119) ((emacs (24))) "Displays your GitHub notifications unread count in mode-line" single ((:commit . "f8d011ebef9f626a94a27b5576c8ed06e6ff8987") (:url . "https://github.com/xuchunyang/github-notifier.el") (:keywords "github" "mode-line"))]) (github-modern-theme . [(20170628 2332) nil "The GitHub color theme for Emacs." single ((:commit . "1890ab87ca8a046b3fc7b54220647d9ef43a6780") (:url . "https://github.com/philiparvidsson/GitHub-Theme-for-Emacs"))]) (github-issues . [(20160616 1141) ((emacs (24))) "Functions and modes for managing GitHub projects' issues" single ((:commit . "816f7712b0eb05bffec0add3507302862d2629c4") (:url . "http://inkel.github.com/github-issues.el/") (:keywords "github" "issues"))]) (github-elpa . [(20160922 907) ((package-build (1 0)) (commander (0 7 0)) (git (0 1 1))) "Build and publish ELPA repositories with GitHub Pages" tar ((:commit . "7619a564edb1985b0487786a3b4ec6d12f897b5b") (:url . "https://github.com/10sr/github-elpa"))]) (github-clone . [(20160622 2010) ((gh (0 7 2)) (magit (2 1 0)) (emacs (24 4))) "Fork and clone github repos" single ((:commit . "467b40ca60a6c26257466ebc43c74414df7f19cc") (:url . "https://github.com/dgtized/github-clone.el") (:keywords "vc" "tools"))]) (github-browse-file . [(20160205 627) ((cl-lib (0 5))) "View the file you're editing on GitHub" single ((:commit . "9742a5183af853788c6ecb83fb7ee0b00d1675ac") (:url . "https://github.com/osener/github-browse-file") (:keywords "convenience" "vc" "git" "github"))]) (gitconfig-mode . [(20170627 854) nil "Major mode for editing .gitconfig files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (gitconfig . [(20130718 235) nil "Emacs lisp interface to work with git-config variables" single ((:commit . "7612a37ca14009cac8fb8d6b6f54adad739a5741") (:keywords "git" "gitconfig" "git-config"))]) (gitattributes-mode . [(20170118 1613) nil "Major mode for editing .gitattributes files" single ((:commit . "9f18eca514d242816a4969e86c4cfd2cf4dfe401") (:url . "https://github.com/magit/git-modes") (:keywords "convenience" "vc" "git"))]) (git-wip-timemachine . [(20150408 306) ((s (1 9 0))) "Walk through git-wip revisions of a file" single ((:commit . "ed4c7931a5f5233bf3e358b1e81647d063526460") (:url . "https://github.com/itsjeyd/git-wip-timemachine") (:keywords "git"))]) (git-timemachine . [(20170325 220) ((emacs (24 3))) "Walk through git revisions of a file" single ((:commit . "7cb0d03bc370d3e734c8ee23b809a4e768b01743") (:url . "https://github.com/pidu/git-timemachine") (:keywords "git"))]) (git-ps1-mode . [(20170102 1944) nil "Global minor-mode to print __git_ps1" single ((:commit . "e41c630f5d04cb1a4d38a4b500d7a154a96a4655") (:url . "https://github.com/10sr/git-ps1-mode-el") (:keywords "utility" "mode-line" "git"))]) (git-messenger . [(20170101 2040) ((emacs (24 3)) (popup (0 5 0))) "Pop up last commit information of current line" single ((:commit . "83815915eb8c1cb47443ff34bca3fecf7d2edf3a") (:url . "https://github.com/syohex/emacs-git-messenger"))]) (git-link . [(20170603 1026) ((cl-lib (0 6 1))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" single ((:commit . "472af75eca7aba42a1934f408c4bda55e34c9dcf") (:url . "http://github.com/sshaw/git-link") (:keywords "git" "vc" "github" "bitbucket" "gitlab" "convenience"))]) (git-lens . [(20170517 144) ((emacs (24 4))) "Show new, deleted or modified files in branch" single ((:commit . "91bf19d6dd7368de5cad373a8155c48c4e254723") (:keywords "vc" "convenience"))]) (git-gutter-fringe . [(20170112 2133) ((git-gutter (0 88)) (fringe-helper (0 1 1)) (cl-lib (0 5)) (emacs (24))) "Fringe version of git-gutter.el" single ((:commit . "16226caab44174301f1659f7bf8cc67a76153445") (:url . "https://github.com/syohex/emacs-git-gutter-fringe"))]) (git-gutter-fringe+ . [(20140729 403) ((git-gutter+ (0 1)) (fringe-helper (1 0 1))) "Fringe version of git-gutter+.el" single ((:commit . "7a2f49d2455a3a872e90e5f7dd4e6b27f1d96cfc") (:url . "https://github.com/nonsequitur/git-gutter-fringe-plus"))]) (git-gutter . [(20161105 656) ((emacs (24 3))) "Port of Sublime Text plugin GitGutter" single ((:commit . "00c05264af046b5ce248e5b0bc42f117d9c27a09") (:url . "https://github.com/syohex/emacs-git-gutter"))]) (git-gutter+ . [(20151204 923) ((git-commit (0)) (dash (0))) "Manage Git hunks straight from the buffer" single ((:commit . "b7726997806d9a2da9fe84ff00ecf21d62b6f975") (:url . "https://github.com/nonsequitur/git-gutter-plus") (:keywords "git" "vc"))]) (git-dwim . [(20170126 414) nil "Context-aware git commands such as branch handling" single ((:commit . "485c732130686c2f28a026e385366006435394b9") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/git-dwim.el") (:keywords "git" "tools" "convenience"))]) (git-commit-insert-issue . [(20170502 1027) ((helm (0)) (projectile (0)) (s (0)) (github-issues (0)) (gitlab (0)) (bitbucket (0))) "Get issues list when typing \"Fixes #\"" single ((:commit . "5f08c17bf93b17915415d435ee41923d924fe20b") (:url . "https://gitlab.com/emacs-stuff/git-commit-insert-issue/") (:keywords "git" "github" "gitlab" "bitbucket" "commit" "issues"))]) (git-commit . [(20170609 2310) ((emacs (24 4)) (dash (20170207 2056)) (with-editor (20170111 609))) "Edit Git commit messages" single ((:commit . "622c994183294b02893ff286210bffd5255296df") (:url . "https://github.com/magit/magit") (:keywords "git" "tools" "vc"))]) (git-command . [(20160111 503) ((term-run (0 1 4)) (with-editor (2 3 1))) "Yet another Git interface" single ((:commit . "dce465ca1cd80e16df0f8dce8e427a76e9edc3b7") (:url . "https://github.com/10sr/git-command-el") (:keywords "utility" "git"))]) (git-blamed . [(20161028 1226) nil "Minor mode for incremental blame for Git" single ((:commit . "cef196abf398e2dd11f775d1e6cd8690567408aa") (:keywords "git" "version control" "release management"))]) (git-auto-commit-mode . [(20161229 817) nil "Emacs Minor mode to automatically commit and push" single ((:commit . "2c8197e5d7813734d6a49f9b9c0b227b7ae022a8") (:url . "http://projects.ryuslash.org/git-auto-commit-mode/") (:keywords "vc"))]) (git-annex . [(20170417 1653) nil "Mode for easy editing of git-annex'd files" single ((:commit . "22b7161adcd144f88681b9b904972cea42b27fca") (:url . "https://github.com/jwiegley/git-annex-el") (:keywords "files" "data" "git" "annex"))]) (git . [(20140128 241) ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) "An Elisp API for programmatically using Git" single ((:commit . "2b523c1975d4f258effaf826656c4b7120b2a19f") (:url . "http://github.com/rejeep/git.el") (:keywords "git"))]) (gist . [(20170604 1834) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" single ((:commit . "a03f142455e8b39f77fbd57ee1c1e44478c1f9e2") (:url . "https://github.com/defunkt/gist.el") (:keywords "tools"))]) (gildas-mode . [(20150919 1501) ((polymode (0)) (emacs (24 3))) "Major mode for Gildas" single ((:commit . "23e8a2e6066ff74af592de6d5d0d858442e2bf8a") (:url . "https://github.com/smaret/gildas-mode") (:keywords "languages" "gildas"))]) (gift-mode . [(20170603 906) nil "major mode for editing GIFT format quizzes" single ((:commit . "0d6adae976ee0831877d4bf237090ff67fb76e1d") (:url . "https://github.com/csrhodes/gift-mode"))]) (ghub . [(20170702 512) ((emacs (25))) "minuscule client for the Github API" single ((:commit . "16c3300bb5d82b141aefa94c47ad9f97a58b0011") (:url . "https://github.com/tarsius/ghub") (:keywords "tools"))]) (ghub+ . [(20170517 1445) ((emacs (25)) (ghub (1 2)) (apiwrap (0 1 2))) "a thick GitHub API client built on ghub" single ((:commit . "07bd117a77d2f2de88facfa18b839c5c8bd5a423") (:url . "https://github.com/vermiculus/ghub-plus") (:keywords "extensions" "multimedia" "tools"))]) (ghq . [(20160803 857) nil "Ghq interface for emacs" single ((:commit . "aae4b8cb22fd6c24d2c9e3962c7e8e9dac6d9825") (:keywords "ghq"))]) (ghost-blog . [(20160526 257) ((markdown-mode (1 0))) "A package to manage Ghost blog" single ((:commit . "d4e66d114ff7b846b967af4cff64dcafa381ead3") (:url . "https://github.com/javaguirre/ghost-blog") (:keywords "ghost" "blog"))]) (gherkin-mode . [(20140107 804) nil "An emacs major mode for editing gherkin files." single ((:commit . "d84a2977a536f2f8bf4836aebc33a4e86925673d") (:keywords "languages"))]) (ghci-completion . [(20151125 457) ((emacs (24 1)) (cl-lib (0 5))) "Completion for GHCi commands in inferior-haskell buffers" single ((:commit . "c47e23d585d2a3c7b13aac163693fdc4f2bb90e5") (:keywords "convenience"))]) (ghc-imported-from . [(20141124 1132) ((emacs (24 1))) "Haskell documentation lookup with ghc-imported-from" single ((:commit . "fcff08628a19f5d26151564659218cc677779b79") (:keywords "languages"))]) (ghc . [(20170526 44) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar ((:commit . "04972673dd181afb14bea4c34cacd60f1e775cf6"))]) (gh-md . [(20151207 940) ((emacs (24))) "Render markdown using the Github api" single ((:commit . "693cb0dcadff70e813e1a9d303d227aff7898557") (:url . "https://github.com/emacs-pe/gh-md.el") (:keywords "convenience"))]) (gh . [(20170512 2049) ((emacs (24 3)) (s (1 9 0)) (dash (2 9 0)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar ((:commit . "6efe3db1acb841c3366878baefc576caa2eb5e09"))]) (ggtags . [(20170510 744) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single ((:commit . "c7948943155eb712eb5aa1eeae8b50c8bb2eca13") (:url . "https://github.com/leoliu/ggtags") (:keywords "tools" "convenience"))]) (ggo-mode . [(20130524 443) nil "Gengetopt major mode" single ((:commit . "e326899d9ed8217c7a4ea6cfdc4dd7aea61d6c1b") (:keywords "extensions" "convenience" "local"))]) (gerrit-download . [(20150714 708) ((emacs (24 0)) (magit (2 1 0))) "Show gerrit reviews in a diff buffer." single ((:commit . "d568acc7c5935188c9bc19ba72719a6092d9f6fd") (:url . "https://github.com/chmouel/gerrit-download.el") (:keywords "tools" "gerrit" "git"))]) (german-holidays . [(20161011 13) nil "German holidays for Emacs calendar" single ((:commit . "d7d540c229c1a8be68ee09fbda08fe3ea31b7d29") (:url . "https://github.com/rudolfochrist/german-holidays"))]) (genrnc . [(20140612 537) ((deferred (0 3 1)) (concurrent (0 3)) (log4e (0 2 0)) (yaxception (0 1))) "generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD." tar ((:commit . "da75b1966a73ad215ec2ced4522c25f4d0bf1f9a") (:url . "https://github.com/aki2o/emacs-genrnc") (:keywords "xml"))]) (general . [(20170528 336) ((cl-lib (0 5))) "Convenience wrappers for keybindings." tar ((:commit . "a8470934373b2bdd67f38e46e1dd4fb963cee31b") (:url . "https://github.com/noctuid/general.el") (:keywords "vim" "evil" "leader" "keybindings" "keys"))]) (geiser . [(20170701 1827) nil "GNU Emacs and Scheme talk to each other" tar ((:commit . "f5ae5488a6d94fcd74d573049b58f8c2e7ff7012") (:url . "http://www.nongnu.org/geiser/"))]) (geeknote . [(20160717 549) ((emacs (24))) "Use Evernote in Emacs through geeknote" single ((:commit . "8ed607c76864afcc9c338972ab093caf4501cbf8") (:url . "http://github.com/avendael/emacs-geeknote") (:keywords "evernote" "geeknote" "note" "emacs-evernote" "evernote-mode"))]) (geben-helm-projectile . [(20160610 1759) ((emacs (24)) (geben (0 26)) (helm-projectile (0 13 0))) "Integrate helm-projectile with geben" single ((:commit . "31ce0faca5dcc71924884f03fd5a7a25d00ccd9b") (:url . "https://github.com/ahungry/geben-helm-projectile") (:keywords "ahungry" "emacs" "geben" "helm" "projectile" "debug"))]) (geben . [(20170620 2012) ((emacs (24 3)) (cl-lib (0 5))) "DBGp protocol frontend, a script debugger" tar ((:commit . "003abd23a7468daa133dfbc7ef85d0d61a0410dc") (:url . "https://github.com/ahungry/geben") (:keywords "c" "comm" "tools"))]) (gather . [(20141230 538) nil "Gather string in buffer." single ((:commit . "50809fbc22d70a1c724c2dd99ac5a1f818ffeb6b") (:url . "https://github.com/mhayashi1120/Emacs-gather/raw/master/gather.el") (:keywords "matching" "convenience" "tools"))]) (gap-mode . [(20160204 736) nil "Major mode for editing files in the GAP programing language." tar ((:url . "https://bitbucket.org/gvol/gap-mode") (:keywords "gap"))]) (gandalf-theme . [(20130809 247) nil "Gandalf color theme" single ((:commit . "4e472fc851431458537d458d09c1f5895e338536") (:keywords "color" "theme"))]) (gams-mode . [(20170309 2204) nil "Major mode for editing GAMS (General Algebraic Modeling System) files." single ((:commit . "ce51aa1afec78bf96aedb4badf33463383b7593e") (:url . "http://shirotakeda.org/en/gams/gams-mode/") (:keywords "gams"))]) (fzf . [(20170527 2120) ((emacs (24 4))) "A front-end for fzf." single ((:commit . "8d75f98cf904c3ab62e8cc54f2b8701c215620d7") (:url . "https://github.com/bling/fzf.el") (:keywords "fzf" "fuzzy" "search"))]) (fyure . [(20130216 514) nil "An interface to fix Japanese hyoki-yure" tar ((:commit . "b6977f1eb148e8b63259f7233b55bb050e44d9b8") (:keywords "languages"))]) (fxrd-mode . [(20170125 228) ((s (1 2))) "Major mode for editing fixed field width files" tar ((:commit . "8a1a0d5a08527ec8dee9bbe135803ed7ad297d9d") (:url . "https://github.com/msherry/fxrd-mode") (:keywords "convenience"))]) (fwb-cmds . [(20160523 535) nil "misc frame, window and buffer commands" single ((:commit . "57973f99cf4a185b5cccbf941478fad25e8428c3") (:url . "https://github.com/tarsius/fwb-cmds") (:keywords "convenience"))]) (fvwm-mode . [(20160411 438) nil "A major mode for editing Fvwm configuration files" single ((:commit . "6832a1c1f68bf6249c3fd6672ea8e27dc7a5c79e") (:url . "https://github.com/theBlackDragon/fvwm-mode") (:keywords "files"))]) (fuzzy-match . [(20170222 1800) nil "fuzzy matching" single ((:url . "https://www.emacswiki.org/emacs/download/fuzzy-match.el") (:keywords "matching" "completion" "string"))]) (fuzzy-format . [(20130824 500) nil "select indent-tabs-mode and format code automatically." single ((:url . "http://code.101000lab.org, http://trac.codecheck.in"))]) (fuzzy . [(20150729 2037) nil "Fuzzy Matching" single ((:commit . "534d723ad2e06322ff8d9bd0ba4863d243f698e7") (:keywords "convenience"))]) (futhark-mode . [(20170623 756) ((cl-lib (0 5))) "major mode for editing Futhark source files" single ((:commit . "04e6ca7db57d128de6775df473dede137997d034") (:url . "https://github.com/HIPERFIT/futhark") (:keywords "languages"))]) (furl . [(20150508 2016) nil "Friendly URL retrieval" single ((:commit . "014438271e0ef27333dfcd599cb247f12a20d870"))]) (function-args . [(20170303 515) ((swiper (0 2 0))) "C++ completion for GNU Emacs" tar ((:commit . "a559041e5fed851c889bcfed7553a4dcd855ffae") (:url . "https://github.com/abo-abo/function-args"))]) (fullframe . [(20160504 749) ((cl-lib (0 5))) "Generalized automatic execution in a single frame" single ((:commit . "b91b0b128c08692c147394842a5e4eeb21ebe0b6") (:keywords "fullscreen"))]) (full-ack . [(20140223 932) nil "a front-end for ack" single ((:commit . "761d846e105b150f8e6d13d7a8983f0248313a45") (:url . "http://nschum.de/src/emacs/full-ack/") (:keywords "tools" "matching"))]) (fuff . [(20170202 703) ((seq (2 3))) "Find files with findutils, recursively" single ((:commit . "278e849913df87bd8756c59382282d87474802c3") (:url . "https://github.com/joelmo/fuff") (:keywords "files" "project" "convenience"))]) (fuel . [(20170629 1731) ((cl-lib (0 2)) (emacs (24 2))) "Major mode for the Factor programming language." tar ((:commit . "fb50f0482173ed05e18d1aa816542e6078bac576"))]) (fstar-mode . [(20170531 1958) ((emacs (24 3)) (dash (2 11)) (company (0 8 12)) (quick-peek (1 0)) (yasnippet (0 11 0)) (flycheck (30 0)) (company-quickhelp (2 2 0))) "Support for F* programming" tar ((:commit . "c9a9d722848dfc3f37ac9e0e91603340e5f5df1e") (:url . "https://github.com/FStarLang/fstar.el") (:keywords "convenience" "languages"))]) (fsharp-mode . [(20170617 1330) ((company (0 8 0)) (company-quickhelp (1 2 0)) (popup (0 5 3)) (pos-tip (0 4 5)) (s (1 3 1)) (dash (1 1 0)) (flycheck (0 25))) "F# mode for Emacs" tar ((:commit . "9766952bd7830cb0d319736961af8e42e67d42fe"))]) (fsbot-data-browser . [(20160921 833) nil "browse the fsbot database using tabulated-list-mode" single ((:commit . "6bca4f7de63e31839d2542f6c678b79931dec344") (:url . "http://github.com/benaiah/fsbot-data-browser") (:keywords "fsbot" "irc" "tabulated-list-mode"))]) (fringe-helper . [(20140620 1409) nil "helper functions for fringe bitmaps" single ((:commit . "ef4a9c023bae18ec1ddd7265f1f2d6d2e775efdd") (:url . "http://nschum.de/src/emacs/fringe-helper/") (:keywords "lisp"))]) (fringe-current-line . [(20140110 2011) nil "show current line on the fringe." single ((:commit . "0ef000bac76abae30601222e6f06c7d133ab4942") (:url . "http://github.com/kyanagi/fringe-current-line/raw/master/fringe-current-line.el"))]) (free-keys . [(20160726 1350) ((cl-lib (0 3))) "Show free keybindings for modkeys or prefixes" single ((:commit . "edfd69dc369b2647447b7c28c7c1163b1ddf45b4") (:url . "https://github.com/Fuco1/free-keys") (:keywords "convenience"))]) (framesize . [(20131017 1432) ((key-chord (0 5 20080915))) "change the size of frames in Emacs" single ((:commit . "f2dbf5d2513b2bc45f2085370a55c1754b6025da") (:url . "http://github.com/nicferrier/emacs-framesize") (:keywords "frames"))]) (frames-only-mode . [(20170129 120) ((emacs (24 4)) (seq (2 3))) "Use frames instead of Emacs windows" single ((:commit . "5a2947d797a5d6f74d3a9c97f8c0ab6cff115b28") (:url . "https://github.com/davidshepherd7/frames-only-mode") (:keywords "frames" "windows"))]) (framemove . [(20130328 433) nil "directional frame selection routines" single ((:keywords "frame" "movement" "convenience"))]) (frame-tag . [(20170110 1606) ((cl-lib (0 5))) "Minor mode that assigns a unique number to each frame for easy switching" single ((:commit . "73d6163568c7d32952175e663318b872f995a4e5") (:url . "http://github.com/liangzan/frame-tag.el") (:keywords "frame" "movement"))]) (frame-mode . [(20170419 1427) ((s (1 9 0)) (emacs (24 4))) "Use frames instead of windows" single ((:commit . "fcdbafbda45758cd60ab3acb492fbbd692987a58") (:url . "https://github.com/IvanMalison/frame-mode") (:keywords "frames"))]) (frame-fns . [(20170222 1759) nil "Non-interactive frame and window functions." single ((:url . "https://www.emacswiki.org/emacs/download/frame-fns.el") (:keywords "internal" "extensions" "local" "frames"))]) (frame-cmds . [(20170506 945) ((frame-fns (0))) "Frame and window commands (interactive functions)." single ((:url . "https://www.emacswiki.org/emacs/download/frame-cmds.el") (:keywords "internal" "extensions" "mouse" "frames" "windows" "convenience"))]) (fraktur-mode . [(20160814 1927) ((cl-lib (0 5))) "Easily insert Unicode mathematical Fraktur characters" single ((:commit . "514baf5546aed12a0d9fa0fe66e87cdcc7843b08") (:url . "https://github.com/grettke/fraktur-mode") (:keywords "unicode" "fraktur" "math" "mathematical"))]) (fountain-mode . [(20161207 141) ((emacs (24 4))) "Major mode for screenwriting in Fountain markup" single ((:commit . "37289bb68f01dd49b1192032ade6b0741d024a54") (:url . "https://github.com/rnkn/fountain-mode") (:keywords "wp"))]) (fortune-cookie . [(20170407 1517) nil "Print a fortune in your scratch buffer." single ((:commit . "bad99a2cd090f6646c7ee1125b95dd98744939c6") (:url . "https://github.com/andschwa/fortune-cookie") (:keywords "fortune" "cowsay" "scratch" "startup"))]) (fortpy . [(20150715 1332) ((epc (0 1 0)) (auto-complete (1 4)) (python-environment (0 0 2)) (pos-tip (0 4 5))) "a Fortran auto-completion for Emacs" tar ((:commit . "c614517e9396ef7a78be3b8786fbf303879cf43b"))]) (forth-mode . [(20170527 1230) nil "Programming language mode for Forth" tar ((:commit . "522256d98d1a909983bcfd3ae20c65226d5929b6") (:url . "http://github.com/larsbrinkhoff/forth-mode") (:keywords "languages" "forth"))]) (format-sql . [(20150422 633) nil "Use format-sql to make your SQL readable in directly Emacs." single ((:commit . "97f475c245cd6c81a72a265678e2087cee66ac7b") (:url . "https://github.com/paetzke/format-sql.el"))]) (form-feed . [(20160102 1453) nil "Display ^L glyphs as horizontal lines" single ((:commit . "799ca3e72b20a59a755a094b8cead57f654f3170") (:url . "https://github.com/wasamasa/form-feed") (:keywords "faces"))]) (forest-blue-theme . [(20160627 142) ((emacs (24))) "Emacs theme with a dark background." single ((:commit . "58096ce1a25615d2bae806c3775bae3e2775019d"))]) (foreman-mode . [(20160520 737) ((s (1 9 0)) (dash (2 10 0)) (dash-functional (1 2 0)) (f (0 17 2)) (emacs (24))) "View and manage Procfile-based applications" single ((:commit . "bc6e2aca5a66847b13200b85172f7d7a36807d32") (:url . "http://github.com/zweifisch/foreman-mode") (:keywords "foreman"))]) (foreign-regexp . [(20160318 907) nil "search and replace by foreign regexp." tar ((:commit . "e368c4dbd3b7a95a14cbc3c25617b5f1bc5a7fb4") (:keywords "convenience" "emulations" "matching" "tools" "unix" "wp"))]) (forecast . [(20170618 1048) ((emacs (24 4))) "Weather forecasts" single ((:commit . "96e37ca81a42061f0e837cc3c4dec1844f682e91") (:url . "http://gkayaalp.com/emacs.html#forecast.el") (:keywords "weather" "forecast"))]) (fontawesome . [(20170305 556) ((emacs (24 4))) "fontawesome utility" tar ((:commit . "a743f80bfd53767ca9ee32da34c5ca032172a480") (:url . "https://github.com/syohex/emacs-fontawesome"))]) (font-utils . [(20150806 1051) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" single ((:commit . "9192d3f8ee6a4e75f34c3fed10378674cc2b11d3") (:url . "http://github.com/rolandwalker/font-utils") (:keywords "extensions"))]) (font-lock-studio . [(20170127 1251) ((emacs (24 3))) "interactive debugger for Font Lock keywords." single ((:commit . "12c35967b31233e06946c70627aa3152dacfe261") (:url . "https://github.com/Lindydancer/font-lock-studio") (:keywords "faces" "tools"))]) (font-lock-profiler . [(20170208 1208) ((emacs (24 3))) "Coverage and timing tool for font-lock keywords." single ((:commit . "6e096458416888a4f63cca0d6bc5965a052753c8") (:url . "https://github.com/Lindydancer/font-lock-profiler") (:keywords "faces" "tools"))]) (font-lock+ . [(20170222 1755) nil "Enhancements to standard library `font-lock.el'." single ((:url . "https://www.emacswiki.org/emacs/download/font-lock%2b.el") (:keywords "languages" "faces" "highlighting"))]) (folding . [(20140401 3) nil "A folding-editor-like minor mode." single ((:commit . "f738e28cd90d794aff698bcd44bf4f5027c92839") (:keywords "tools"))]) (fold-this . [(20150601 342) nil "Just fold this region please" single ((:commit . "90b41d7b588ab1c3295bf69f7dd87bf31b543a6a") (:keywords "convenience"))]) (fold-dwim-org . [(20131203 551) ((fold-dwim (1 2))) "Fold DWIM bound to org key-strokes." single ((:commit . "c09bb2b46d65afbd1d0febc6fded7495be7a3037") (:url . "https://github.com/mlf176f2/fold-dwim-org") (:keywords "folding" "emacs" "org-mode"))]) (fold-dwim . [(20140208 837) nil "Unified user interface for Emacs folding modes" single ((:commit . "c46f4bb2ce91b4e307136320e72c28dd50b6cd8b") (:url . "http://www.dur.ac.uk/p.j.heslin/Software/Emacs"))]) (foggy-night-theme . [(20160209 708) ((emacs (24))) "Dark low contrast theme with soft and muted colors." single ((:commit . "60a12abdac29c2d913e1cf24485d0cc083e26093"))]) (focus-autosave-mode . [(20160519 1416) ((emacs (24 4))) "Automatically save files in focus-out-hook." single ((:commit . "e89ed22aa4dfc76e1b844b202aedd468ad58814a") (:keywords "convenience" "files" "frames" "mouse"))]) (focus . [(20170612 743) ((emacs (24)) (cl-lib (0 5))) "Dim the font color of text in surrounding sections" single ((:commit . "a84ade00a2b57e47430d5b2df5246069f197356f") (:url . "http://github.com/larstvei/Focus"))]) (fn . [(20170209 1804) ((emacs (24)) (cl-lib (0 5)) (dash (2 12 1)) (dash-functional (1 2 0))) "Concise anonymous functions for Emacs Lisp" single ((:commit . "2dc78b7ef9e24f9fe872d40c8fe6050f7ce819cf") (:keywords "functional"))]) (fm-bookmarks . [(20170104 916) ((emacs (24 3)) (cl-lib (0 5))) "Use file manager bookmarks (eg Dolphin, Nautilus, PCManFM) in Dired" single ((:commit . "11dacfd16a926bfecba96a94c6b13e162c7717f7") (:url . "http://github.com/kuanyui/fm-bookmarks.el") (:keywords "files" "convenience"))]) (fm . [(20130126 1618) nil "follow mode for compilation/output buffers" single ((:commit . "555bcebdf47ea3b1d9d1e152af7237b9daa62d59") (:keywords "outlines"))]) (flyspell-popup . [(20170529 115) ((popup (0 5 0))) "Correcting words with Flyspell in popup menus" single ((:commit . "29311849bfd253b9b689bf331860b4c4d3bd4dde") (:url . "https://github.com/xuchunyang/flyspell-popup") (:keywords "convenience"))]) (flyspell-lazy . [(20141222 652) nil "Improve flyspell responsiveness using idle timers" single ((:commit . "31786fe04a4732d2f845e1c7e96fcb030182ef10") (:url . "http://github.com/rolandwalker/flyspell-lazy") (:keywords "spelling"))]) (flyspell-correct-popup . [(20161031 1134) ((flyspell-correct (0 4 0)) (popup (0 5 3))) "correcting words with flyspell via popup interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct-ivy . [(20161031 1134) ((flyspell-correct (0 4 0)) (ivy (0 8 0))) "correcting words with flyspell via ivy interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct-helm . [(20161031 1134) ((flyspell-correct (0 4 0)) (helm (1 9 0))) "correcting words with flyspell via helm interface" single ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyspell-correct . [(20170213 700) nil "correcting words with flyspell via custom interface" tar ((:commit . "1e19a2b506470e8d741b521da0bd9b66214256f3") (:url . "https://github.com/d12frosted/flyspell-correct"))]) (flyparens . [(20140723 1146) nil "Check for unbalanced parens on the fly" tar ((:commit . "af9b8cfd647d0e5f97684d613dc2eea7cfc19398") (:keywords "faces" "convenience" "lisp" "matching" "parentheses" "parens"))]) (flymd . [(20160617 514) ((cl-lib (0 5))) "On the fly markdown preview" tar ((:commit . "84d5a68bcfed4a295952c33ffcd11e880978d9d7") (:url . "https://github.com/mola-T/flymd") (:keywords "markdown" "convenience"))]) (flymake-yaml . [(20130423 848) ((flymake-easy (0 1))) "A flymake handler for YAML" single ((:commit . "24cb5b744a1796e554e6dbfc6eeb237d06a00b10") (:url . "https://github.com/yasuyk/flymake-yaml") (:keywords "yaml"))]) (flymake-vala . [(20150325 2231) ((flymake-easy (0 1))) "A flymake handler for vala-mode files" single ((:commit . "c3674f461fc84fb0300cd3a562fb903a59782745") (:url . "https://github.com/daniellawrence/flymake-vala") (:keywords "convenience" "vala"))]) (flymake-solidity . [(20160424 720) ((flymake-easy (0 10))) "A flymake handler for solidity using solc" single ((:commit . "07f33ed52aac5d958fc0f50026a9bf111e1a5308") (:url . "https://github.com/kootenvp/flymake-solidity"))]) (flymake-shell . [(20121104 1100) ((flymake-easy (0 1))) "A flymake syntax-checker for shell scripts" single ((:commit . "ec097bd77db5523a04ceb15a128e01689d36fb90") (:url . "https://github.com/purcell/flymake-shell"))]) (flymake-sass . [(20140308 325) ((flymake-easy (0 1))) "Flymake handler for sass and scss files" single ((:commit . "748f13caa399c27c41ba797da9e214b814f5a30f") (:url . "https://github.com/purcell/flymake-sass"))]) (flymake-rust . [(20141004 1552) ((flymake-easy (0 1))) "A flymake handler for rust-mode files" single ((:commit . "72ec92c261670b7384ee2593d0f1946ea29f429a") (:url . "https://github.com/joaoxsouls/flymake-rust"))]) (flymake-ruby . [(20121104 1059) ((flymake-easy (0 1))) "A flymake handler for ruby-mode files" single ((:commit . "8dc4ca44ec2acfaab25f5501fca1bd687fae94f2") (:url . "https://github.com/purcell/flymake-ruby"))]) (flymake-python-pyflakes . [(20131127 6) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" single ((:commit . "f09ec573d7580a69f8bd49778c26da9ab6d5ec5a") (:url . "https://github.com/purcell/flymake-python-pyflakes"))]) (flymake-puppet . [(20141006 1855) ((flymake-easy (0 9))) "An Emacs flymake handler for syntax-checking puppet using puppet-lint" single ((:commit . "fc4cd25aeac37ed5722bc586d5350fd06ee3067c") (:url . "https://github.com/benprew/flymake-puppet"))]) (flymake-phpcs . [(20140712 2331) ((flymake-easy (0 9))) "making flymake work with PHP CodeSniffer" single ((:commit . "a4d383474e055e554aaf1cd617055d5d7181aa50") (:url . "https://github.com/senda-akiha/flymake-phpcs/") (:keywords "flymake" "phpcs" "php"))]) (flymake-php . [(20121104 1102) ((flymake-easy (0 1))) "A flymake handler for php-mode files" single ((:commit . "93abe12d62b13f1d035a0df01e53e4bacdac2c66") (:url . "https://github.com/purcell/flymake-php"))]) (flymake-perlcritic . [(20120328 114) ((flymake (0 3))) "Flymake handler for Perl to invoke Perl::Critic" tar ((:commit . "edfaa86500ddfa8a6a6f51f5581a81a821277df6") (:url . "https://github.com/illusori/emacs-flymake-perlcritic"))]) (flymake-lua . [(20170128 1754) nil "Flymake for Lua" single ((:commit . "84589f20066921a5b79cf3a1f914a223a2552d2a") (:keywords "lua"))]) (flymake-less . [(20151110 2338) ((less-css-mode (0 15)) (flymake-easy (0 1))) "Flymake handler for LESS stylesheets (lesscss.org)" single ((:commit . "32d3c28a9a5c52b82d1741ff9d715013b6498421") (:keywords "languages"))]) (flymake-json . [(20130423 2357) ((flymake-easy (0 1))) "A flymake handler for json using jsonlint" single ((:commit . "36084b67830bdc6c226115ea8287ea88d14b05dd") (:url . "https://github.com/purcell/flymake-json"))]) (flymake-jslint . [(20130613 202) ((flymake-easy (0 1))) "A flymake handler for javascript using jslint" single ((:commit . "68ca28a88cffdd317f50c712b09abd2ccda8d7bc") (:url . "https://github.com/purcell/flymake-jslint"))]) (flymake-jshint . [(20140319 1500) ((flymake-easy (0 8))) "making flymake work with JSHint" single ((:commit . "79dd554c227883c487db38ac111306c8d5382c95") (:keywords "flymake" "jshint" "javascript"))]) (flymake-hlint . [(20130309 145) ((flymake-easy (0 1))) "A flymake handler for haskell-mode files using hlint" single ((:commit . "fae0c16f938129fb933e4c4625287816e8e160f0") (:url . "https://github.com/purcell/flymake-hlint"))]) (flymake-haskell-multi . [(20130620 422) ((flymake-easy (0 1))) "Syntax-check haskell-mode using both ghc and hlint" tar ((:commit . "6183620ffee429b33c886fffd6106b876245ea47"))]) (flymake-haml . [(20130324 351) ((flymake-easy (0 1))) "A flymake handler for haml files" single ((:commit . "3117d94ecad908710502e8def42dbae5748e9c1d") (:url . "https://github.com/purcell/flymake-haml"))]) (flymake-google-cpplint . [(20140205 525) ((flymake-easy (0 9))) "Help to comply with the Google C++ Style Guide" single ((:commit . "905d32e84a27f18a78bec455ca930ab1ff9ae31e") (:url . "https://github.com/senda-akiha/flymake-google-cpplint/") (:keywords "flymake" "c" "c++"))]) (flymake-go . [(20150714 33) nil "A flymake handler for go-mode files" single ((:commit . "ae83761aa908c1a50ff34af04f00dcc46bca2ce9") (:url . "https://github.com/robert-zaremba/flymake-go") (:keywords "go" "flymake"))]) (flymake-gjshint . [(20130327 532) nil "A flymake handler for javascript using both jshint and gjslint" single ((:commit . "dc957c14cb060819585de8aedb330e24efa4b784") (:keywords "flymake" "javascript" "jshint" "gjslint"))]) (flymake-elixir . [(20130810 717) nil "A flymake handler for elixir-mode .ex files." single ((:commit . "3810566cffe35d04cc3f01e27fe397d68d52f802"))]) (flymake-easy . [(20140818 55) nil "Helpers for easily building flymake checkers" single ((:commit . "de41ea49503f71f997e5c359a2ad08df696c0147") (:url . "https://github.com/purcell/flymake-easy") (:keywords "convenience" "internal"))]) (flymake-cursor . [(20130822 332) nil "displays flymake error msg in minibuffer after delay" single ((:url . "http://www.emacswiki.org/emacs/flymake-cursor.el") (:keywords "languages" "mode" "flymake"))]) (flymake-css . [(20121104 1104) ((flymake-easy (0 1))) "Flymake support for css using csslint" single ((:commit . "4649fc209836498d709bb627e8aa6e50189a06ec") (:url . "https://github.com/purcell/flymake-css"))]) (flymake-cppcheck . [(20140415 557) ((flymake-easy (0 9))) "Flymake work with Cppcheck for C/C++" single ((:commit . "9554f504d425a04fa6a875f7e3179bc7cf07dd03") (:url . "https://github.com/senda-akiha/flymake-cppcheck/") (:keywords "flymake" "cppcheck" "c" "c++"))]) (flymake-coffee . [(20140809 324) ((flymake-easy (0 1))) "A flymake handler for coffee script" single ((:commit . "325ab379592fdf9017d7c19625c7a978f6f3af3b") (:url . "https://github.com/purcell/flymake-coffee"))]) (flycheck-ycmd . [(20170614 1434) ((emacs (24)) (dash (2 13 0)) (flycheck (0 22)) (ycmd (1 2)) (let-alist (1 0 5))) "flycheck integration for ycmd" single ((:commit . "d042a673b4d717c3ca9d641f120bfe16c994c740") (:url . "https://github.com/abingham/emacs-ycmd"))]) (flycheck-yamllint . [(20170325 1035) ((flycheck (30))) "Flycheck integration for YAMLLint" single ((:commit . "c2b273d84f15bd03464d6722391e595d7c179a5c") (:url . "https://github.com/krzysztof-magosa/flycheck-yamllint") (:keywords "convenience" "languages" "tools"))]) (flycheck-vale . [(20170619 2322) ((emacs (24 4)) (flycheck (0 22)) (let-alist (1 0 4))) "flycheck integration for vale" single ((:commit . "97df981468120aaedeaa4cf8ecfd68b07046d998") (:url . "https://github.com/abingham/flycheck-vale"))]) (flycheck-title . [(20170216 1546) ((flycheck (30)) (emacs (24))) "show flycheck errors in the frame title" single ((:commit . "6faea67be8661faf8152217869d16e993cc2bc49"))]) (flycheck-tip . [(20160908 1953) ((flycheck (29)) (emacs (24 1)) (popup (0 5 0))) "Show flycheck/flymake errors by tooltip" tar ((:commit . "53e812ae6d517e8d35907eed8ddcee95c2922e91") (:url . "https://github.com/yuutayamada/flycheck-tip") (:keywords "flycheck"))]) (flycheck-swift3 . [(20170409 25) ((emacs (24 4)) (flycheck (26))) "Flycheck: Swift support for Apple swift-mode" single ((:commit . "6b0b7c6fffc86809d0535afebd6b0972059992d5") (:url . "https://github.com/GyazSquare/flycheck-swift3") (:keywords "convenience" "languages" "tools"))]) (flycheck-swift . [(20170128 2149) ((emacs (24 4)) (flycheck (0 25))) "Flycheck extension for Apple's Swift." single ((:commit . "c6c416a1b7a7d346e5c040e4e4065abc68d3a844") (:keywords "languages" "swift"))]) (flycheck-status-emoji . [(20170405 1600) ((cl-lib (0 1)) (emacs (24)) (flycheck (0 20)) (let-alist (1 0))) "Show flycheck status using cute, compact emoji" single ((:commit . "c4e891ad287c12b83b754ada27b4550fb763c07f") (:url . "https://github.com/liblit/flycheck-status-emoji") (:keywords "convenience" "languages" "tools"))]) (flycheck-stack . [(20160520 244) ((flycheck (26)) (haskell-mode (13))) "Flychecker using stack ghci" single ((:commit . "f04235e00998000ee2c305f5a3ee72bb5dbbc926"))]) (flycheck-scala-sbt . [(20170226 1127) ((emacs (25 1)) (flycheck (30)) (sbt-mode (0 2))) "sbt-mode checker for Scala" single ((:url . "https://www.github.com/rjmac/flycheck-scala-sbt"))]) (flycheck-rust . [(20170404 842) ((emacs (24 1)) (flycheck (0 20)) (dash (2 13 0)) (seq (2 15)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" single ((:commit . "a89c0298f5e8fdcb0c33833ca1eca64632cec053") (:url . "https://github.com/flycheck/flycheck-rust") (:keywords "tools" "convenience"))]) (flycheck-rtags . [(20170522 2154) ((emacs (24)) (flycheck (0 23)) (rtags (2 10))) "RTags Flycheck integration." single ((:commit . "7e6b6f21935eedbe4678ba91c5531ac162b51a5a") (:url . "http://rtags.net"))]) (flycheck-rebar3 . [(20161030 615) ((flycheck (27))) "Rebar3 flycheck integration for Erlang projects" single ((:commit . "56a7c94857f0a0ea6a2a73c476a1a2faadc0f7c6") (:url . "https://github/joedevivo/flycheck-rebar3") (:keywords "erlang" "flycheck" "rebar3"))]) (flycheck-pyflakes . [(20170330 1611) ((flycheck (0 18))) "Support pyflakes in flycheck" single ((:commit . "61b045939e3743b2162b7e4e73249c66fc2b8f65"))]) (flycheck-purescript . [(20161121 907) ((emacs (24 3)) (flycheck (0 22)) (dash (2 12 0)) (let-alist (1 0 4)) (seq (1 11))) "Flycheck: PureScript support" single ((:commit . "30f0435d5e2715053c8c6170b2bce2ae462ac819") (:url . "https://github.com/emacs-pe/flycheck-purescript") (:keywords "convenience" "tools" "languages"))]) (flycheck-pos-tip . [(20170504 1504) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" single ((:commit . "7b94c0c1e3185a4350dc39885add3927037ebad8") (:url . "https://github.com/flycheck/flycheck-pos-tip") (:keywords "tools" "convenience"))]) (flycheck-pony . [(20160501 1417) ((flycheck (0 25 1))) "Pony support in Flycheck" single ((:commit . "ef27475a14090396a01924d131bfee9e163cf6e9") (:url . "https://github.com/seantallen/flycheck-pony") (:keywords "tools" "convenience"))]) (flycheck-plantuml . [(20161122 219) ((flycheck (0 24)) (emacs (24 4)) (plantuml-mode (1 2 2))) "Integrate plantuml with flycheck" single ((:commit . "f1628d589991c3d51965db0f14866b1202374eea") (:url . "https://github.com/alexmurray/flycheck-plantuml"))]) (flycheck-pkg-config . [(20170214 1114) ((dash (2 8 0)) (s (1 9 0)) (flycheck (29))) "configure flycheck using pkg-config" single ((:commit . "fda3f828082bd957c838126577a6b7e4d747dd54") (:keywords "flycheck"))]) (flycheck-perl6 . [(20150414 1832) ((emacs (24 3)) (flycheck (0 22))) "Perl 6 support in Flycheck" single ((:commit . "6a9a929ffb58595bbe9fe3d7c2e78617c8e9bb5a") (:url . "https://github.com/hinrik/flycheck-perl6") (:keywords "tools" "convenience"))]) (flycheck-package . [(20161111 1451) ((flycheck (0 22)) (package-lint (0 2))) "A Flycheck checker for elisp package authors" single ((:commit . "cb526f54f4017454e2503b340757ba15578a5aed") (:keywords "lisp"))]) (flycheck-ocaml . [(20151103 212) ((emacs (24 1)) (flycheck (0 22)) (merlin (2 3)) (let-alist (1 0 3))) "Flycheck: OCaml support" single ((:commit . "e4412025f27850918762237fa80b33e285a63e7c") (:url . "https://github.com/flycheck/flycheck-ocaml") (:keywords "convenience" "tools" "languages"))]) (flycheck-objc-clang . [(20170417 1807) ((emacs (24 4)) (flycheck (26))) "Flycheck: Objective-C support using Clang" single ((:commit . "b16b77f95e4e53a8951ebee6209a5de311748447") (:url . "https://github.com/GyazSquare/flycheck-objc-clang") (:keywords "convenience" "languages" "tools"))]) (flycheck-nim . [(20160714 2128) ((dash (2 4 0)) (flycheck (0 20))) "Defines a flycheck syntax checker for nim" single ((:commit . "6d27349b66e44578851e6148299709d64d2bde41") (:url . "https://github.com/ALSchwalm/flycheck-nim"))]) (flycheck-mypy . [(20160220 1432) ((flycheck (0 18))) "Support mypy in flycheck" single ((:commit . "2675dc0e31f8c08eb69f77b8d99e3f7d985c62ee"))]) (flycheck-mix . [(20170118 630) ((flycheck (27)) (elixir-mode (1 8 0))) "Elixir mix flycheck integration" single ((:commit . "76684d4b5987925b98b254aab656f8bf8198ab88") (:url . "https://github.com/tomekowal/flycheck-mix") (:keywords "elixir" "flycheck" "mix"))]) (flycheck-mercury . [(20151122 2334) ((flycheck (0 22)) (s (1 9 0)) (dash (2 4 0))) "Mercury support in Flycheck" single ((:commit . "fa9e433a0a912f0fae9e4dec9ea616ef99fcf861") (:url . "https://github.com/flycheck/flycheck-mercury") (:keywords "convenience" "languages" "tools"))]) (flycheck-liquidhs . [(20150618 1922) ((flycheck (0 15))) "A flycheck checker for Haskell using liquid (i.e. liquidhaskell)" single ((:commit . "ee0d3bd0d5e07a872e541d02c112f1cc204db922") (:url . "https://github.com/ucsd-progsys/liquidhaskell/flycheck-liquid.el") (:keywords "convenience" "languages" "tools"))]) (flycheck-ledger . [(20140605 1146) ((flycheck (0 15))) "Flycheck integration for ledger files" single ((:commit . "cba408d61e26cf7c31c4a6f82a28a3a32e145c05") (:keywords "convenience" "languages" "tools"))]) (flycheck-kotlin . [(20170122 337) ((flycheck (0 18))) "Support kotlin in flycheck" single ((:commit . "cbb9fbf70dbe8efcc3971b3606ee95c97469b1fe"))]) (flycheck-julia . [(20170627 1310) ((emacs (25)) (flycheck (0 22))) "Julia support for Flycheck" single ((:commit . "3aa2c26ed59310643a2f431e522dfc3c5daac085") (:url . "https://github.com/gdkrmr/flycheck-julia") (:keywords "convenience" "tools" "languages"))]) (flycheck-joker . [(20170415 2009) ((flycheck (0 18))) "Add Clojure syntax checker (via Joker) to flycheck" single ((:commit . "43a25fe17ba6ade96fc865bd8ec3fb3c131aa419"))]) (flycheck-irony . [(20160317 1536) ((emacs (24 1)) (flycheck (0 22)) (irony (0 2 0))) "Flycheck: C/C++ support via Irony" single ((:commit . "34940ae5ab8f4c721d9c1118ebfc3496d7e67a84") (:url . "https://github.com/Sarcasm/flycheck-irony/") (:keywords "convenience" "tools" "c"))]) (flycheck-hdevtools . [(20160926 2) ((flycheck (0 21 -3 1)) (dash (2 0))) "A flycheck checker for Haskell using hdevtools" single ((:commit . "eab1fc184854341a56154623a131cab6ff0ce18c") (:url . "https://github.com/flycheck/flycheck-hdevtools") (:keywords "convenience" "languages" "tools"))]) (flycheck-haskell . [(20170622 1248) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar ((:commit . "2aeb2ed5cdde7770cd5da9950981390d7b44f74c") (:url . "https://github.com/flycheck/flycheck-haskell") (:keywords "tools" "convenience"))]) (flycheck-gometalinter . [(20170321 732) ((emacs (24)) (flycheck (0 22))) "flycheck checker for gometalinter" single ((:commit . "c90ea1aba80ddfdf603c9ba731be302400fd6ba2") (:url . "https://github.com/favadi/flycheck-gometalinter") (:keywords "convenience" "tools" "go"))]) (flycheck-ghcmod . [(20150113 2232) ((flycheck (0 21 -3 1)) (dash (2 0))) "A flycheck checker for Haskell using ghcmod" single ((:commit . "6bb7b7d879f05bbae54e99eb04806c877adf3ccc") (:url . "https://github.com/scturtle/flycheck-ghcmod") (:keywords "convenience" "languages" "tools"))]) (flycheck-flow . [(20170604 811) ((flycheck (0 18)) (json (1 4))) "Support Flow in flycheck" single ((:commit . "a249e60803b1e423c67e40462229646cc77fcb68"))]) (flycheck-flawfinder . [(20170115 1927) ((flycheck (0 24)) (emacs (24 4))) "Integrate flawfinder with flycheck" single ((:commit . "7d964d38023b088adf3ffc2fddeead81f4491a45") (:url . "https://github.com/alexmurray/flycheck-flawfinder"))]) (flycheck-elm . [(20160717 257) ((flycheck (0 29 -3)) (emacs (24 4))) "Flycheck support for the elm language" single ((:commit . "b401873ebd2176190a0a6fb4d61c2cca97d3b9fb") (:url . "https://github.com/bsermons/flycheck-elm"))]) (flycheck-elixir . [(20160629 59) ((flycheck (0 25))) "Support Elixir in flycheck" single ((:commit . "05cbad6657dc02f527be061e1709a53abb46bd8f"))]) (flycheck-dogma . [(20170124 2321) ((flycheck (29))) "flycheck checker for elixir dogma" single ((:commit . "eea1844a81e87e2488b05e703a93272d0fc3bc74") (:url . "https://github.com/aaronjensen/flycheck-dogma"))]) (flycheck-dmd-dub . [(20170403 1116) ((flycheck (0 24)) (f (0 18 2))) "Sets flycheck-dmd-include-paths from dub package information" single ((:commit . "879c52116989f6041ccd20f5db210f5552d5c649") (:url . "http://github.com/atilaneves/flycheck-dmd-dub") (:keywords "languages"))]) (flycheck-dialyzer . [(20160326 730) ((flycheck (0 18))) "Support dialyzer in flycheck" single ((:commit . "a5df0db95ac69f397b5f85d325a6d88cf8974f64"))]) (flycheck-dialyxir . [(20170515 825) ((flycheck (29))) "flycheck checker for elixir dialyxir" single ((:commit . "adfb73374cb2bee75724822972f405f2ec371199") (:url . "https://github.com/aaronjensen/flycheck-dialyxir"))]) (flycheck-demjsonlint . [(20161114 2318) ((flycheck (30))) "Flychecker for json-mode using jsonlint from demjson" tar ((:commit . "1c433150fdf628dda4c9fad938bf7c79610b4460") (:url . "https://github.com/z4139jq/flycheck-demjsonlint") (:keywords "convenience" "tools"))]) (flycheck-dedukti . [(20170407 258) ((flycheck (0 19)) (dedukti-mode (0 1))) "Flycheck integration of Dedukti" single ((:commit . "ea34af5e677fbf18a40935b531abb1d9aae59f6b"))]) (flycheck-d-unittest . [(20160521 2117) ((flycheck (0 21 -3 1)) (dash (1 4 0))) "Add D unittest support to flycheck" single ((:commit . "3e614f23cb4a5566fd7988dbcaaf254af81c7718") (:url . "https://github.com/tom-tan/flycheck-d-unittest/") (:keywords "flycheck" "d"))]) (flycheck-cython . [(20160327 1228) ((flycheck (0 25))) "Support Cython in flycheck" single ((:commit . "45097658a16eeabf2bd5e0464355f8f37a1aeffc"))]) (flycheck-cstyle . [(20160905 1641) ((flycheck (0 24)) (emacs (24 4))) "Integrate cstyle with flycheck" single ((:commit . "207285140a353d08cf1fc450cacab158bc98ba82") (:url . "https://github.com/alexmurray/flycheck-cstyle"))]) (flycheck-css-colorguard . [(20161031 422) ((flycheck (0 22)) (emacs (24))) "Detect similar colors in CSS" single ((:commit . "ae94fa0396acd99f9ec36d9572459df793f37fe8") (:url . "https://github.com/Simplify/flycheck-css-colorguard/") (:keywords "flycheck" "css" "colorguard"))]) (flycheck-credo . [(20170526 845) ((flycheck (29))) "flycheck checker for elixir credo" single ((:commit . "e88f11ead53805c361ec7706e44c3dfee1daa19f") (:url . "https://github.com/aaronjensen/flycheck-credo"))]) (flycheck-coverity . [(20170520 825) ((flycheck (0 24)) (dash (2 13 0)) (emacs (24 4))) "Integrate Coverity with flycheck" single ((:commit . "32fbec81fcf0ffa7c8ea0903dcb1da769a023b91") (:url . "https://github.com/alexmurray/flycheck-coverity"))]) (flycheck-color-mode-line . [(20170512 1607) ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) "Change mode line color with Flycheck status" single ((:commit . "b2b20727d133c05fd31eac7b9b5c0886bbca8f98") (:keywords "convenience" "language" "tools"))]) (flycheck-clojure . [(20170221 1354) ((cider (0 8 1)) (flycheck (0 22 -3 1)) (let-alist (1 0 1)) (emacs (24))) "Flycheck: Clojure support" single ((:commit . "2a0e96889b128808866a1e2e98694be1b251fd37") (:url . "https://github.com/clojure-emacs/squiggly-clojure"))]) (flycheck-clangcheck . [(20150712 10) ((cl-lib (0 5)) (seq (1 7)) (flycheck (0 17))) "A Flycheck checker difinition for ClangCheck." single ((:commit . "24a9424c484420073a24443a829fd5779752362b") (:url . "https://github.com/kumar8600/flycheck-clangcheck"))]) (flycheck-clang-tidy . [(20170621 202) ((flycheck (0 30))) "Flycheck syntax checker using clang-tidy" single ((:commit . "5b1c86477f7d1eaabd781bc83dd1bd105c79335c") (:url . "https://github.com/ch1bo/flycheck-clang-tidy") (:keywords "convenience" "languages" "tools"))]) (flycheck-clang-analyzer . [(20170623 446) ((flycheck (0 24)) (emacs (24 4))) "Integrate Clang Analyzer with flycheck" single ((:commit . "7520e30468303777aab543f45d5fe08e971cf4e2") (:url . "https://github.com/alexmurray/flycheck-clang-analyzer"))]) (flycheck-checkpatch . [(20170217 225) ((emacs (25)) (flycheck (30))) "Flycheck support for checkpatch.pl tool" single ((:commit . "6461fc7b0d493eb9863814055f8bce5fa35739de") (:url . "https://github.com/zpp0/flycheck-checkpatch"))]) (flycheck-checkbashisms . [(20160224 906) ((emacs (24)) (flycheck (0 25))) "checkbashisms checker for flycheck" single ((:commit . "0794ad763d7cd81286283f6400bc89a81e8e07d4") (:url . "https://github.com/Gnouc/flycheck-checkbashisms") (:keywords "convenience" "tools" "sh" "unix"))]) (flycheck-cask . [(20160928 226) ((emacs (24 1)) (flycheck (0 14)) (dash (2 4 0))) "Cask support in Flycheck" single ((:commit . "c3a51147eddeb7347de81f6a498fc96538bac499") (:url . "https://github.com/flycheck/flycheck-cask") (:keywords "tools" "convenience"))]) (flycheck-bashate . [(20160629 2140) ((flycheck (0 24)) (emacs (24 4))) "Integrate bashate with flycheck" single ((:commit . "77fa03dbc578c34fe71ca44926bac2aff8f2b021") (:url . "https://github.com/alexmurray/flycheck-bashate"))]) (flycheck-ats2 . [(20170225 836) ((emacs (24 1)) (flycheck (0 22))) "Flycheck: ATS2 support" single ((:commit . "9f77add8408462af35bdddf87e37a661880255e3") (:url . "http://github.com/drvink/flycheck-ats2") (:keywords "convenience" "tools" "languages"))]) (flycheck-apertium . [(20160406 618) ((flycheck (0 25))) "Apertium checkers in flycheck" tar ((:commit . "71cf49d5aaee962b995583384bfa045a1d4c3db7") (:url . "http://wiki.apertium.org/wiki/Emacs") (:keywords "convenience" "tools" "xml"))]) (flycheck . [(20170626 1707) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "On-the-fly syntax checking" tar ((:commit . "4d9e16c03e935e926b61cf8446e43423cd93f577") (:url . "http://www.flycheck.org") (:keywords "convenience" "languages" "tools"))]) (flx-isearch . [(20160105 1217) ((emacs (24)) (flx (20140821)) (cl-lib (0 5))) "Fuzzy incremental searching for emacs" single ((:commit . "54ae0a5a31e6a07b68823d486ff4ec9e4c558588") (:url . "https://github.com/pythonnut/flx-isearch") (:keywords "convenience" "search" "flx"))]) (flx-ido . [(20151030 1112) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" single ((:commit . "ae0981b253b17b52dec666e2f739f889e7952291") (:url . "https://github.com/lewang/flx"))]) (flx . [(20151030 1112) ((cl-lib (0 3))) "fuzzy matching with good sorting" single ((:commit . "ae0981b253b17b52dec666e2f739f889e7952291") (:url . "https://github.com/lewang/flx"))]) (fluxus-mode . [(20170210 1141) ((osc (0 1)) (emacs (24 4))) "Major mode for interfacing with Fluxus" single ((:commit . "3661d4dfdaf249138e7f215f15f291c9391ede8d") (:url . "https://github.com/defaultxr/fluxus-mode") (:keywords "languages"))]) (flow-minor-mode . [(20170418 1253) ((emacs (25 1))) "Flow type mode based on web-mode." single ((:commit . "b05d59f387133249e03004b79bf16d6fe6c38217") (:url . "https://github.com/an-sh/flow-minor-mode"))]) (floobits . [(20170416 1718) ((json (1 2)) (highlight (0))) "Floobits plugin for real-time collaborative editing" tar ((:commit . "fdac635ecc57ac7743f74678147aca2e956561de") (:url . "http://github.com/Floobits/floobits-emacs") (:keywords "comm" "tools"))]) (fliptext . [(20131113 1818) nil "Input method for flipping characters upside down" single ((:keywords "games" "i18n"))]) (flimenu . [(20170417 1847) ((dash (2 10 0)) (emacs (24 4))) "Flatten imenu automatically" single ((:commit . "9351201d89b05cbdaec312a6ebd7fd10c38d6112") (:url . "https://github.com/IvanMalison/flimenu") (:keywords "imenu" "browse" "structure" "hook" "mode" "matching" "tools" "convenience" "files"))]) (flim . [(20161210 1728) ((apel (10 8))) "A library to provide basic features about message representation or encoding." tar ((:commit . "3510d32e5820b2c22b4e9c9f29177beea42c5bfb"))]) (flex-isearch . [(20170308 1210) nil "Flex matching (like ido) in isearch." single ((:url . "https://bitbucket.org/jpkotta/flex-isearch") (:keywords "convenience" "search"))]) (flex-autopair . [(20120809 518) nil "Automatically insert pair braces and quotes, insertion conditions & actions are highly customizable." single ((:commit . "4bb757f2556a4a51828e2fed8fb81e31e83052cb") (:url . "https://github.com/uk-ar/flex-autopair.el") (:keywords "keyboard" "input"))]) (flatui-theme . [(20160618 1827) nil "A color theme for Emacs based on flatuicolors.com" single ((:commit . "9c15db5526c15c8dba55023f5698372b19c2a780") (:url . "https://github.com/john2x/flatui-theme.el"))]) (flatui-dark-theme . [(20170513 722) ((emacs (24))) "Dark color theme with colors from https://flatuicolors.com/" single ((:commit . "5b959a9f743f891e4660b1b432086417947872ea") (:url . "https://github.com/theasp/flatui-dark-theme") (:keywords "color" "theme" "dark" "flatui" "faces"))]) (flatland-theme . [(20140805 305) nil "A simple theme for Emacs based on the Flatland theme for Sublime Text" single ((:commit . "b2c2df1fc20a3a23787644f91f8121d9353f9bf9") (:url . "http://github.com/gregchapple/flatland-emacs"))]) (flatland-black-theme . [(20141115 2230) ((emacs (24 0))) "an Emacs 24 theme based on Flatland Black (tmTheme)" single ((:commit . "75fc4f1815feb23563a60477c02d70326b45c59e") (:url . "https://github.com/emacsfodder/flatland-black-theme"))]) (flash-region . [(20130923 1117) nil "Flash a region" single ((:commit . "261b3597b23cdd40e5c14262a5687bcc6c1d0901") (:keywords "utility"))]) (flappymacs . [(20140715 901) nil "flappybird clone for emacs" single ((:commit . "bbc69405f62e1bc488533709d4ab0b5eba919dbd") (:url . "https://github.com/taksatou/flappymacs") (:keywords "games"))]) (fixmee . [(20150223 555) ((button-lock (1 0 2)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) "Quickly navigate to FIXME notices in code" single ((:commit . "1b8b3460f1e3c3c1784b2a63fb9f4fb3bb4dc084") (:url . "http://github.com/rolandwalker/fixmee") (:keywords "navigation" "convenience"))]) (fix-word . [(20170518 2343) ((emacs (24 1)) (cl-lib (0 5))) "Convenient word transformation" single ((:commit . "91552cbceac8e2b7c23036f044fc84f5c6f8e338") (:url . "https://github.com/mrkkrp/fix-word") (:keywords "word" "convenience"))]) (fix-muscle-memory . [(20160822 2139) nil "Simple hacks to fix muscle memory problems" single ((:commit . "a123e04f8a1d2982cbf930efb909cad9522ac884") (:keywords "spelling" "typing"))]) (fix-input . [(20170518 2311) ((emacs (24 4))) "Make input methods play nicely with alternative keyboard layout on OS level" single ((:commit . "a70edfa7880ff9b082f358607d2a9ad6a8dcc8f3") (:url . "https://github.com/mrkkrp/fix-input") (:keywords "input" "method"))]) (fit-frame . [(20170222 1754) nil "Resize a frame.  In particular, fit a frame to its buffers." single ((:url . "https://www.emacswiki.org/emacs/download/fit-frame.el") (:keywords "internal" "extensions" "convenience" "local"))]) (fish-mode . [(20170430 623) ((emacs (24))) "Major mode for fish shell scripts" single ((:commit . "888d037008272f6001207a2990e51ba87fe187e6") (:keywords "fish" "shell"))]) (firestarter . [(20161219 523) nil "Execute (shell) commands on save" single ((:commit . "4d6b106f325ac1802eabce3c8a7cd0a4c7a32864") (:url . "https://github.com/wasamasa/firestarter") (:keywords "convenience"))]) (fireplace . [(20160811 519) nil "A cozy fireplace for emacs" single ((:commit . "23a444f749bcb2b804593e3b2cb9c73cc59231fb") (:url . "https://github.com/johanvts/emacs-fireplace") (:keywords "games"))]) (firefox-controller . [(20160320 1147) ((moz (0)) (popwin (1 0 0)) (cl-lib (0 5))) "An improved Firefox controller" single ((:commit . "a8af8cbf70afaf6b89a26d6ac69af8e92afc181f") (:url . "https://github.com/cute-jumper/emacs-firefox-controller") (:keywords "extensions"))]) (firecode-theme . [(20141115 2302) ((emacs (24 0))) "an Emacs 24 theme based on FireCode (tmTheme)" single ((:commit . "73573192e5e9d14d94dfc5131dd2b7a780b89626") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (firebelly-theme . [(20140410 155) ((cl-lib (0 5))) "a subdued, dark theme with pastelish colors." single ((:commit . "5fd621102c676196319579b168da1476e8552d00") (:url . "https://github.com/startling/firebelly"))]) (fiplr . [(20140723 2345) ((grizzl (0 1 0)) (cl-lib (0 1))) "Fuzzy Search for Files in Projects" tar ((:commit . "bb6b90ba3c558988c195048c4c40140b2ee17530"))]) (fingers . [(20160817 129) nil "Modal editing with universal text manipulation helpers." tar ((:commit . "fed0f742afb1d72eaef29d8da394467550a030fa") (:url . "http://github.com/fgeller/fingers.el") (:keywords "fingers" "modal" "editing" "workman"))]) (findr . [(20130824 507) nil "Breadth-first file-finding facility for (X)Emacs" single ((:keywords "files"))]) (finder+ . [(20170222 1752) nil "Extensions to standard library finder.el" single ((:url . "https://www.emacswiki.org/emacs/download/finder%2b.el") (:keywords "help"))]) (find-things-fast . [(20150519 1526) nil "Find things fast, leveraging the power of git" single ((:commit . "efc7c189019ed65430e2f9e910e8e0a5ca9d2d03") (:keywords "project" "convenience"))]) (find-temp-file . [(20170107 539) nil "Open quickly a temporary file" single ((:commit . "513005d19d72d71f34481ee00158dd57bd93206f") (:url . "https://github.com/thisirs/find-temp-file.git") (:keywords "convenience"))]) (find-file-in-repository . [(20151113 519) nil "Quickly find files in a git, mercurial or other repository" single ((:commit . "8a8c84a6dbe7a2bba4564c3b58c92d157abfa3f8") (:url . "https://github.com/hoffstaetter/find-file-in-repository") (:keywords "files" "convenience" "repository" "project" "source control"))]) (find-file-in-project . [(20170531 2054) ((ivy (0 7 0)) (emacs (24 3))) "Find file/directory and review Diff/Patch/Commit efficiently everywhere" single ((:commit . "eb9fec502a2622b46301ca49183147b6b1fcaff6") (:url . "https://github.com/technomancy/find-file-in-project") (:keywords "project" "convenience"))]) (find-dired+ . [(20170409 1832) nil "Extensions to `find-dired.el'." single ((:url . "https://www.emacswiki.org/emacs/download/find-dired%2b.el") (:keywords "internal" "unix" "tools" "matching" "local"))]) (find-by-pinyin-dired . [(20170206 208) ((pinyinlib (0 1 0))) "Find file by first PinYin character of Chinese Hanzi" single ((:commit . "2c48434637bd63840fca4d2c6cf9ebd5dd44658f") (:url . "http://github.com/redguardtoo/find-by-pinyin-dired") (:keywords "hanzi" "chinese" "dired" "find" "file" "pinyin"))]) (finalize . [(20170418 1245) ((emacs (24 1)) (cl-generic (0 3)) (cl-lib (0 3)) (eieio (1 4))) "finalizers for Emacs Lisp" tar ((:commit . "0f7d47c4d50f1c76fc3b43bfc2d4886dd3e8ca27"))]) (fillcode . [(20150812 941) nil "Fill (wrap) function calls and expressions in source code" single ((:commit . "1f64f0303a3157eabec355fd155571bb0c042489") (:url . "https://snarfed.org/fillcode"))]) (fill-column-indicator . [(20151030 1233) nil "Graphically indicate the fill column" single ((:commit . "0e755319451dd9c6c99c2a2ef82c890ba93343b6") (:keywords "convenience"))]) (filesets+ . [(20170222 1748) nil "Extensions to `filesets.el'." single ((:url . "https://www.emacswiki.org/emacs/download/filesets%2b.el"))]) (files+ . [(20170222 1746) nil "Enhancements of standard library `files.el'." single ((:url . "https://www.emacswiki.org/emacs/download/files%2b.el") (:keywords "internal" "extensions" "local"))]) (figlet . [(20160218 1437) nil "Annoy people with big, ascii art text" single nil]) (fifo-class . [(20160424 2258) nil "First in first out abstract class" single ((:commit . "8fe4cf690727f4ac7b67f29c55f845df023c3f21") (:url . "https://github.com/mola-T/fifo-class") (:keywords "lisp"))]) (fic-mode . [(20160209 1011) nil "Show FIXME/TODO/BUG(...) in special face only in comments and strings" single ((:commit . "8182f5be875fdefc5bd7142ab45adea89ac20705") (:url . "https://github.com/lewang/fic-mode"))]) (fetch . [(20131130 2330) nil "Fetch and unpack resources" single ((:commit . "3f2793afcbbc32f320e572453166f9354ecc6d06") (:url . "https://github.com/crshd/fetch.el"))]) (feature-mode . [(20161123 532) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar ((:commit . "aa06b88ad96bc556992f011b6aef9b78e99ae48b"))]) (fcopy . [(20150304 603) nil "Funny Copy, set past point HERE then search copy text" single ((:commit . "e355f6ec889d8ecbdb096019c2dc660b1cec4941") (:url . "https://github.com/ataka/fcopy") (:keywords "convenience"))]) (fcitx . [(20170615 1143) nil "Make fcitx better in Emacs" single ((:commit . "cddd216402c9a9b4228b5f82afa1bd637b2e0c37") (:url . "https://github.com/cute-jumper/fcitx.el") (:keywords "extensions"))]) (faust-mode . [(20160930 222) nil "Basic faust syntax colorizer for emacs." single ((:commit . "41379dd52a8be01cdfac06996ea1593877fdaf58") (:url . "https://github.com/magnetophon/emacs-faust-mode") (:keywords "languages"))]) (fastnav . [(20120211 657) nil "Fast navigation and editing routines." single ((:commit . "1019ba2b61d1a070204099b23da347278a61bc89") (:keywords "nav" "fast" "fastnav" "navigation"))]) (fastdef . [(20160713 629) ((ivy (0 7 0)) (w3m (0 0))) "Insert terminology from Google top search results" single ((:commit . "0696f41dc150d35ce31fe8d2ea74f4173818bb55") (:url . "http://github.com/redguardtoo/fastdef") (:keywords "terminology" "org-mode" "markdown"))]) (fasd . [(20161216 831) nil "Emacs integration for the command-line productivity booster `fasd'" single ((:commit . "5940b84dfa1ea7225b740d3a8dd215290d964873") (:url . "https://github.com/steckerhalter/emacs-fasd") (:keywords "cli" "bash" "zsh" "autojump"))]) (farmhouse-theme . [(20160713 1544) nil "Farmhouse Theme, Emacs edition" tar ((:commit . "7ddc1ff13b4a3d5466bd0d33ecb86100352e83a7") (:keywords "color" "theme") (:url . "https://github.com/mattly/emacs-farmhouse-theme"))]) (fancy-narrow . [(20160124 403) nil "narrow-to-region with more eye candy." single ((:commit . "4737d706d1f3e90885e6642ba782f1fa605414c6") (:url . "http://github.com/Bruce-Connor/fancy-narrow") (:keywords "faces" "convenience"))]) (fancy-battery . [(20150101 404) ((emacs (24 1))) "Fancy battery display" single ((:commit . "9b88ae77a01aa3edc529840338bcb2db7f445822") (:url . "https://github.com/lunaryorn/fancy-battery.el") (:keywords "convenience" "tools" "hardware"))]) (fakir . [(20140729 952) ((noflet (0 0 8)) (dash (1 3 2)) (kv (0 0 19))) "fakeing bits of Emacs" single ((:commit . "1fca406ad7de80fece6319ff75d4230b648534b0") (:url . "http://github.com/nicferrier/emacs-fakir") (:keywords "lisp" "tools"))]) (fakespace . [(20120817 1706) nil "fake namespaces with defpackage" single ((:commit . "d1bd1f4b14b2690d7a67f9a52622ec51ed84813a") (:url . "https://github.com/skeeto/elisp-fakespace"))]) (faff-theme . [(20170522 1219) nil "Light Emacs color theme on ivory3 background" single ((:commit . "e79dc142d99bc5a455a46345d3aba6f95f3f3f42") (:url . "https://github.com/WJCFerguson/emacs-faff-theme") (:keywords "color" "theme"))]) (factlog . [(20130209 1740) ((deferred (0 3 1))) "File activity logger" single ((:commit . "6503d77ea882c995b051d22e72db336fb28770fc") (:url . "https://github.com/tkf/factlog"))]) (faceup . [(20170126 1305) nil "Regression test system for font-lock" single ((:commit . "688b487ad0a78c8707c5aded50e1d85551270034") (:url . "https://github.com/Lindydancer/faceup") (:keywords "faces" "languages"))]) (faces+ . [(20170222 1745) nil "Extensions to `faces.el'." single ((:url . "https://www.emacswiki.org/emacs/download/faces%2b.el") (:keywords "faces" "local"))]) (facemenu+ . [(20170222 1744) nil "Extensions to `facemenu.el'." single ((:url . "https://www.emacswiki.org/emacs/download/facemenu%2b.el") (:keywords "faces" "extensions" "convenience" "menus" "local"))]) (face-remap+ . [(20170222 1742) nil "Extensions to standard library `face-remap.el'." single ((:url . "https://www.emacswiki.org/emacs/download/face-remap%2b.el") (:keywords "window" "frame" "face" "font"))]) (fabric . [(20160907 215) nil "Launch Fabric using Emacs" tar ((:commit . "2d436122243bcdd64ec5700e42d88ea9d363aefc") (:url . "https://github.com/nlamirault/fabric.el") (:keywords "python" "fabric"))]) (f3 . [(20160628 1601) ((emacs (24)) (helm (1 9 6)) (cl-lib (0 5))) "The Fantastic File Finder: a helm interface for searching files really fast" tar ((:commit . "114fec094c4ea063724c05404a2ece53f510b3e3") (:keywords "find" "file" "files" "helm" "fast" "finder"))]) (f . [(20170404 1039) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single ((:commit . "fabdbd4a4a8caf8684f0fa656f457a03c5dfa4de") (:url . "http://github.com/rejeep/f.el") (:keywords "files" "directories"))]) (eziam-theme . [(20170517 847) nil "A mostly monochrome theme, inspired by Tao and Leuven, with dark and light versions." tar ((:commit . "6c7e6ac20e27a26e7b27761f11a3a959ea815b5c"))]) (ez-query-replace . [(20170311 139) ((dash (1 2 0))) "a smarter context-sensitive query-replace that can be reapplied" single ((:commit . "66381226da00cc4a87c7d5962aaabbc0eb325cb7"))]) (eyuml . [(20141028 1527) ((request (0 2 0)) (s (1 8 0))) "Write textual uml diagram from emacs using yuml.me" single ((:commit . "eb29c37316e44a14741f16e894fbcfcb7537dc80") (:url . "http://github.com/antham/eyuml") (:keywords "uml"))]) (eyebrowse . [(20170318 1418) ((dash (2 7 0)) (emacs (24 3 1))) "Easy window config switching" single ((:commit . "56af9e96cfc8c03cfdcf3a60b581a8db9fdcbb20") (:url . "https://github.com/wasamasa/eyebrowse") (:keywords "convenience"))]) (exwm-x . [(20170702 42) ((cl-lib (0 5)) (exwm (0 1)) (switch-window (0 10)) (swiper (0 9 0))) "A derivative wm based on EXWM (emacs x window manager)" tar ((:commit . "6be22e4a5ed24aefcdcef0f42328d4d365ba2cfd") (:url . "https://github.com/tumashu/exwm-x") (:keywords "window-manager" "exwm"))]) (extend-dnd . [(20151122 1050) nil "R drag and Drop" tar ((:commit . "80c966c93b82c9bb5c6225a432557c39144fc602") (:url . "https://github.com/mlf176f2/extend-dnd") (:keywords "extend" "drag and drop"))]) (extempore-mode . [(20160620 1813) ((emacs (24 4))) "Emacs major mode for Extempore source files" single ((:commit . "ce052da4899ea85ee33792a344359fdd19bc653b") (:url . "http://github.com/extemporelang/extempore-emacs-mode") (:keywords "extempore"))]) (exsqlaim-mode . [(20170607 303) ((s (1 10 0))) "Use variables inside sql queries" single ((:commit . "a2e0a62ec8b87193d8eaa695774bfd689324b06c") (:url . "https://github.com/ahmadnazir/exsqlaim-mode"))]) (express . [(20140508 1341) ((string-utils (0 3 2))) "Alternatives to `message'" single ((:commit . "93dae7377eace4a5413ba99aecb6f26f90798725") (:url . "http://github.com/rolandwalker/express") (:keywords "extensions" "message" "interface"))]) (expand-region . [(20170514 1309) nil "Increase selected region by semantic units." tar ((:commit . "2357f1d5efd9d5b9e37f3513342237fec2629291"))]) (expand-line . [(20151005 1907) nil "Expand selection by line" single ((:commit . "75a5d0241f35dd0748ab8ecb4ff16891535be372"))]) (exiftool . [(20170613 1342) ((emacs (25))) "Elisp wrapper around ExifTool" single ((:commit . "8dd70ba5214a73960361a0c6220bb4aa72b9e478") (:url . "https://git.systemreboot.net/exiftool.el") (:keywords "data"))]) (exec-path-from-shell . [(20170508 4) nil "Get environment variables such as $PATH from the shell" single ((:commit . "5e355fbc50913d1ffe48bf86df0bcecd8b369ffb") (:url . "https://github.com/purcell/exec-path-from-shell") (:keywords "environment"))]) (eww-lnum . [(20150102 712) nil "Conkeror-like functionality for eww" single ((:commit . "4b0ecec769919ecb05ca4fb15ec51911ba589929") (:url . "https://github.com/m00natic/eww-lnum") (:keywords "eww" "browse" "conkeror"))]) (ewmctrl . [(20161104 1833) nil "Use `wmctrl' to manage desktop windows via EWMH/NetWM." single ((:commit . "ba1879cc803a63d5a4047ec6f2990e369ae5af3a") (:url . "https://github.com/flexibeast/ewmctrl") (:keywords "desktop" "windows" "ewmh" "netwm"))]) (evm . [(20141007 456) ((dash (2 3 0)) (f (0 13 0))) "Emacs Version Manager" single ((:commit . "d0623b2355436a5fd9f7238b419782080c79196b") (:url . "http://github.com/rejeep/evm"))]) (evil-visualstar . [(20160222 1648) ((evil (0))) "Starts a * or # search from the visual selection" single ((:commit . "06c053d8f7381f91c53311b1234872ca96ced752") (:url . "https://github.com/bling/evil-visualstar") (:keywords "evil" "vim" "visualstar"))]) (evil-visual-replace . [(20170201 1920) ((evil (1 0 0))) "search/replace commands for evil visual state, inc. blocks" single ((:commit . "99559e1a6e813056a132f4be32b20f259470e9ed") (:url . "https://github.com/troyp/evil-visual-replace") (:keywords "evil" "search" "replace" "regexp" "block" "rectangular" "region" "visual"))]) (evil-visual-mark-mode . [(20150202 1000) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" single ((:commit . "094ee37599492885ff3144918fcdd9b74dadaaa0") (:keywords "evil"))]) (evil-vimish-fold . [(20161103 333) ((emacs (24 4)) (evil (1 0 0)) (vimish-fold (0 2 0))) "Integrate vimish-fold with evil" single ((:commit . "674a8a894e4ae7e7f4b2608b0c9f801a548c69eb") (:url . "https://github.com/alexmurray/evil-vimish-fold"))]) (evil-tutor-ja . [(20160916 1832) ((evil (1 0 9)) (evil-tutor (0 1))) "Japanese Vimtutor adapted to Evil and wrapped in a major-mode" tar ((:commit . "99af7d82e02ce3bcdfaff47c5c80b57327a7ea8d") (:url . "https://github.com/kenjimyzk/evil-tutor-ja") (:keywords "convenience" "editing" "evil" "japanese"))]) (evil-tutor . [(20150102 2250) ((evil (1 0 9))) "Vimtutor adapted to Evil and wrapped in a major-mode" tar ((:commit . "4e124cd3911dc0d1b6817ad2c9e59b4753638f28") (:url . "https://github.com/syl20bnr/evil-tutor") (:keywords "convenience" "editing" "evil"))]) (evil-textobj-column . [(20151228 1344) ((names (0 5)) (emacs (24)) (evil (0))) "Provides column text objects." single ((:commit . "d45a0f2831e6da51435abe27294222055f04ab32") (:url . "https://github.com/noctuid/evil-textobj-column") (:keywords "evil" "column" "text-object"))]) (evil-textobj-anyblock . [(20161020 1112) ((cl-lib (0 5)) (evil (1 1 0))) "Textobject for the closest user-defined blocks." single ((:commit . "b611a54e62a6e6ce40bbb8b5094bd88028fc7efd") (:url . "https://github.com/noctuid/evil-textobj-anyblock") (:keywords "evil"))]) (evil-text-object-python . [(20160815 141) ((emacs (24)) (evil (1 2 12))) "Python specific evil text objects" single ((:commit . "3b3fb01e7ad7eeeeae1143695547fe75148cc44f") (:url . "https://github.com/wbolster/evil-text-object-python") (:keywords "evil" "python" "text-object"))]) (evil-terminal-cursor-changer . [(20170401 142) ((evil (1 0 8))) "Change cursor shape and color by evil state in terminal" single ((:commit . "b49ca4393d2f3cc6014174950059b36a5cb22949") (:url . "https://github.com/7696122/evil-terminal-cursor-changer") (:keywords "evil" "terminal" "cursor"))]) (evil-tabs . [(20160217 720) ((evil (0 0 0)) (elscreen (0 0 0))) "Integrating Vim-style tabs for Evil mode users." single ((:commit . "53d3314a810017b6056ab6796aef671f5ea1c063") (:url . "https://github.com/krisajenkins/evil-tabs") (:keywords "evil" "tab" "tabs" "vim"))]) (evil-swap-keys . [(20170221 444) ((emacs (24)) (evil (1 2 12))) "intelligently swap keys on text input with evil" single ((:commit . "6a2f4db944076439c2cb481c4e9e4e5d736a5ab8") (:url . "https://github.com/wbolster/evil-swap-keys") (:keywords "evil" "key" "swap" "numbers" "symbols"))]) (evil-surround . [(20170124 1110) ((evil (1 2 12))) "emulate surround.vim from Vim" single ((:commit . "43a266461517d2eb715338da0a31dc6616073116") (:keywords "emulation" "vi" "evil"))]) (evil-space . [(20151208 428) ((evil (1 0 0))) "Repeat motion in Evil. Correct the behaviour of what SPC should do." single ((:commit . "a9c07284d308425deee134c9d88a2d538dd229e6") (:url . "http://github.com/linktohack/evil-space") (:keywords "space" "repeat" "motion"))]) (evil-snipe . [(20170702 302) ((emacs (24 4)) (evil (1 2 12)) (cl-lib (0 5))) "emulate vim-sneak & vim-seek" single ((:commit . "c50372d152b123fbf7bc26b49504505a22e82635") (:url . "https://github.com/hlissner/evil-snipe") (:keywords "emulation" "vim" "evil" "sneak" "seek"))]) (evil-smartparens . [(20161010 322) ((evil (1 0)) (emacs (24 4)) (smartparens (1 6 3))) "Evil support for smartparens" single ((:commit . "7cde5544934930819e9dcaa1e0db2e3c58f0cd6f") (:url . "https://www.github.com/expez/evil-smartparens") (:keywords "evil" "smartparens"))]) (evil-search-highlight-persist . [(20170522 2034) ((highlight (0))) "Persistent highlights after search" single ((:commit . "6e04a8c075f5fd62526d222447048faab8bfa187"))]) (evil-rsi . [(20160221 1304) ((evil (1 0 0))) "Use emacs motion keys in evil, inspired by vim-rsi" single ((:commit . "65ae60866be494e4622fe383e23975e04d2a42a3") (:url . "http://github.com/linktohack/evil-rsi") (:keywords "evil" "rsi" "evil-rsi"))]) (evil-replace-with-register . [(20170616 813) ((evil (1 0 8))) "Port of vim plugin ReplaceWithRegister" single ((:commit . "0d8a67b578849c00a7a50540daf809dd2ee2b476") (:url . "https://github.com/Dewdrops/evil-ReplaceWithRegister") (:keywords "evil" "plugin"))]) (evil-rails . [(20160621 1558) ((evil (1 0)) (projectile-rails (1 0))) "Rails support for Evil Mode" single ((:commit . "c8669783d8a40719b2604c58a4c06c248cab272f") (:url . "https://github.com/antono/evil-rails") (:keywords "ruby" "rails" "vim" "project" "convenience" "web" "evil" "projectile"))]) (evil-quickscope . [(20160202 1124) ((evil (0))) "Highlight unique characters in words for f,F,t,T navigation" single ((:commit . "37a20e4c56c6058abf186ad4013c155e695e876f") (:url . "http://github.com/blorbx/evil-quickscope") (:keywords "faces" "emulation" "vim" "evil"))]) (evil-paredit . [(20150413 1348) ((evil (1 0 9)) (paredit (25 -2))) "Paredit support for evil keybindings" single ((:commit . "e058fbdcf9dbf7ad6cc77f0172d7517ef233d55f") (:url . "https://github.com/roman/evil-paredit") (:keywords "paredit" "evil"))]) (evil-org . [(20170622 1310) ((emacs (24 4)) (evil (1 0)) (org (8 0 0))) "evil keybindings for org-mode" single ((:commit . "975109dc665f53cef221b3c668612664340b7940") (:url . "https://github.com/Somelauw/evil-org-mode.git") (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets"))]) (evil-opener . [(20161207 1010) ((evil (1 2 12)) (opener (0 2 2))) "opening urls as buffers in evil" tar ((:commit . "c384f67278046fdcd220275fdd212ab85672cbeb") (:url . "https://github.com/0robustus1/opener.el") (:keywords "url" "http" "files"))]) (evil-numbers . [(20140606 551) nil "increment/decrement numbers like in vim" single ((:commit . "6ea1c8c3a9b37bed63d48f1128e9a4910e68187e") (:url . "http://github.com/cofi/evil-numbers") (:keywords "numbers" "increment" "decrement" "octal" "hex" "binary"))]) (evil-nerd-commenter . [(20170309 49) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar ((:commit . "cac2f7945fc90f43d1282dfe4aca24ded9f7cd03") (:url . "http://github.com/redguardtoo/evil-nerd-commenter") (:keywords "commenter" "vim" "line" "evil"))]) (evil-multiedit . [(20170623 1135) ((emacs (24 4)) (evil (1 2 12)) (iedit (0 97)) (cl-lib (0 5))) "multiple cursors for evil-mode" single ((:commit . "e135fd8662406807bc0d9d0f2688e7dbe89b98c8") (:url . "https://github.com/hlissner/evil-multiedit") (:keywords "multiple cursors" "editing" "iedit"))]) (evil-mu4e . [(20160813 413) ((emacs (24 4)) (dash (2 12 0)) (evil (1 2 10))) "evil-based key bindings for mu4e" single ((:commit . "3edf45cbf94bb304a1d99b00fe43e72b86b3ee94") (:url . "https://github.com/JorisE/evil-mu4e"))]) (evil-mc-extras . [(20170202 849) ((emacs (24 3)) (evil (1 2 12)) (cl-lib (0 5)) (evil-mc (0 0 2)) (evil-numbers (0 4))) "Extra functionality for evil-mc" tar ((:commit . "ba3252ae129c3b79aeb70ec3d276cbda32b00421") (:url . "https://github.com/gabesoft/evil-mc-extras") (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc-extras"))]) (evil-mc . [(20170526 1158) ((emacs (24 3)) (evil (1 2 12)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar ((:commit . "506f92dc610906fc279e50c598efe2068161edaa") (:url . "https://github.com/gabesoft/evil-mc") (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc"))]) (evil-matchit . [(20170119 125) ((evil (1 0 7))) "Vim matchit ported to Evil" tar ((:commit . "277623d8be7bd6ade8f301b9397b88575a0d01b9") (:url . "http://github.com/redguardtoo/evil-matchit") (:keywords "matchit" "vim" "evil"))]) (evil-mark-replace . [(20150424 18) ((evil (1 0 8))) "replace the thing in marked area" single ((:commit . "56cf191724a3e82239ca47a17b071c20aedb0617") (:url . "http://github.com/redguardtoo/evil-mark-replace") (:keywords "mark" "replace" "evil"))]) (evil-magit . [(20170613 510) ((evil (1 2 3)) (magit (2 6 0))) "evil-based key bindings for magit" single ((:commit . "91c96e6ffdc6e7d5e49fd9b0ffb7df8794f0f2db") (:url . "https://github.com/justbur/evil-magit"))]) (evil-lispy . [(20170304 259) ((lispy (0 26 0)) (evil (1 2 12)) (hydra (0 13 5))) "precision Lisp editing with Evil and Lispy" tar ((:commit . "040a7ee130c2403a1d6dac591b94b202bb48e186") (:url . "https://github.com/sp3ctum/evil-lispy") (:keywords "lisp"))]) (evil-lisp-state . [(20160403 1948) ((evil (1 0 9)) (bind-map (0)) (smartparens (1 6 1))) "An evil state to edit Lisp code" single ((:commit . "3c65fecd9917a41eaf6460f22187e2323821f3ce") (:url . "https://github.com/syl20bnr/evil-lisp-state") (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic"))]) (evil-lion . [(20170523 450) ((emacs (24)) (evil (1 0 0))) "Evil align operator, port of vim-lion" single ((:commit . "79766bfb8cbaa82af92eb9c90ea370e10ff74ea4") (:url . "http://github.com/edkolev/evil-lion") (:keywords "emulations" "evil" "vim"))]) (evil-leader . [(20140606 543) ((evil (0))) "let there be <leader>" single ((:commit . "39f7014bcf8b36463e0c7512c638bda4bac6c2cf") (:url . "http://github.com/cofi/evil-leader") (:keywords "evil" "vim-emulation" "leader"))]) (evil-indent-textobject . [(20130831 1519) ((evil (0))) "evil textobjects based on indentation" single ((:commit . "70a1154a531b7cfdbb9a31d6922482791e20a3a7") (:url . "http://github.com/cofi/evil-indent-textobject") (:keywords "convenience" "evil"))]) (evil-indent-plus . [(20151109 1106) ((evil (0)) (cl-lib (0 5))) "Evil textobjects based on indentation" single ((:commit . "0c7501e6efed661242c3a20e0a6c79a6455c2c40") (:url . "http://github.com/TheBB/evil-indent-plus") (:keywords "convenience" "evil"))]) (evil-iedit-state . [(20160905 1908) ((evil (1 0 9)) (iedit (0 97))) "Evil states to interface iedit mode." single ((:commit . "02ce7ea1414aa0f139b52f1b3350c2b7af74d0ba") (:url . "https://github.com/syl20bnr/evil-iedit-state") (:keywords "convenience" "editing" "evil" "iedit" "mnemonic"))]) (evil-goggles . [(20170529 2251) ((emacs (25)) (evil (1 0 0))) "Add a visual hint to evil operations" single ((:commit . "d2dfe823d5b1b70e4ed47518db98b238ff67b81a") (:url . "http://github.com/edkolev/evil-goggles") (:keywords "emulations" "evil" "vim" "visual"))]) (evil-god-state . [(20141116 1855) ((evil (1 0 8)) (god-mode (2 12 0))) "use god-mode keybindings in evil-mode" single ((:commit . "3d44197dc0a1fb40e7b7ff8717f8a8c339ce1d40") (:url . "https://github.com/gridaphobe/evil-god-state") (:keywords "evil" "leader" "god-mode"))]) (evil-find-char-pinyin . [(20160514 1341) ((evil (1 2 12)) (pinyinlib (0 1 0))) "Evil's f/F/t/T/evil-snipe commands with Pinyin support" single ((:commit . "04e277946d658f1a73c68dcbbadea9c21097a31c") (:keywords "extensions"))]) (evil-extra-operator . [(20161212 2003) ((evil (1 0 7))) "Evil operator for evaluating codes, taking notes, searching via google, etc." single ((:commit . "e16a9b36f9901254da9af8a73871061616410fc3") (:url . "http://github.com/Dewdrops/evil-extra-operator") (:keywords "evil" "plugin"))]) (evil-exchange . [(20170510 1959) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil" single ((:commit . "47691537815150715e64e6f6ec79be7746c96120") (:url . "http://github.com/Dewdrops/evil-exchange") (:keywords "evil" "plugin"))]) (evil-escape . [(20170115 1343) ((emacs (24)) (evil (1 0 9)) (cl-lib (0 5))) "Escape from anything with a customizable key sequence" single ((:commit . "b4d44fc5015341e484495fc86b73d09b2ac062ec") (:url . "https://github.com/syl20bnr/evil-escape") (:keywords "convenience" "editing" "evil"))]) (evil-embrace . [(20160519 1129) ((emacs (24 4)) (embrace (0 1 0)) (evil-surround (0))) "Evil integration of embrace.el" single ((:commit . "4379adea032b25e359d01a36301b4a5afdd0d1b7") (:keywords "extensions"))]) (evil-ediff . [(20170623 707) ((evil (1 2 3))) "Make ediff a little evil" single ((:commit . "862310e244d406751cdc7eae8e8c0d88414a48c7") (:url . "https://github.com/justbur/evil-ediff"))]) (evil-easymotion . [(20170110 2004) ((emacs (24)) (avy (0 3 0)) (cl-lib (0 5))) "A port of vim's easymotion to emacs" single ((:commit . "f9b5aa52f238ea14c2b16982e56c3b2c8f739101") (:url . "https://github.com/pythonnut/evil-easymotion") (:keywords "convenience" "evil"))]) (evil-dvorak . [(20160416 1141) ((evil (1 0 8))) "evil keybindings for that work with dvorak mode" tar ((:commit . "824f7c56980d72a0ff04c662223540cd66f13754") (:keywords "evil" "vim-emulation" "dvorak" "keyboard") (:url . "https://github.com/jbranso/evil-dvorak.git"))]) (evil-commentary . [(20170413 751) ((evil (1 0 0))) "Comment stuff out. A port of vim-commentary." tar ((:commit . "395f91014b69844b81660c155f42eb9b1b3d199d") (:url . "http://github.com/linktohack/evil-commentary") (:keywords "evil" "comment" "commentary" "evil-commentary"))]) (evil-colemak-minimal . [(20160922 226) ((emacs (24)) (evil (1 2 12))) "Minimal Colemak key bindings for evil-mode" single ((:commit . "5f1db93959359d3efd57abb5a0d06e94dec92556") (:url . "https://github.com/bmallred/evil-colemak-minimal") (:keywords "colemak" "evil"))]) (evil-colemak-basics . [(20170425 509) ((emacs (24)) (evil (1 2 12)) (evil-snipe (2 0 3))) "Basic Colemak key bindings for evil-mode" single ((:commit . "7844079b47f47bb1dc24c885b0ac2e67524fa960") (:url . "https://github.com/wbolster/evil-colemak-basics") (:keywords "colemak" "evil"))]) (evil-cleverparens . [(20160611 904) ((evil (1 0)) (paredit (1)) (smartparens (1 6 1)) (emacs (24 4)) (dash (2 12 0))) "Evil friendly minor-mode for editing lisp." tar ((:commit . "82c920ba04accfd31fa292e11c454d5112b4fd51") (:url . "https://github.com/luxbock/evil-cleverparens") (:keywords "cleverparens" "parentheses" "evil" "paredit" "smartparens"))]) (evil-avy . [(20150908 48) ((emacs (24 1)) (cl-lib (0 5)) (avy (0 3 0)) (evil (1 2 3))) "set-based completion" single ((:commit . "2dd955cc3ecaa7ddeb67b295298abdc6d16dd3a5") (:url . "https://github.com/louy2/evil-avy") (:keywords "point" "location" "evil" "vim"))]) (evil-args . [(20140329 1429) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." single ((:commit . "2a88b4d19953a11227cc1e91973b92149116f44c") (:url . "http://github.com/wcsmith/evil-args") (:keywords "evil" "vim-emulation"))]) (evil-anzu . [(20170123 2318) ((evil (1 0 0)) (anzu (0 46))) "anzu for evil-mode" single ((:commit . "9bca6ca14d865e7e005bc02a28a09b4ae74facc9") (:url . "https://github.com/syohex/emacs-evil-anzu"))]) (evil . [(20170624 1221) ((emacs (24 1)) (undo-tree (0 6 3)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs." tar ((:commit . "cecbcfbdda16653e3b5ddc7de2eab25537ec154b"))]) (evalator-clojure . [(20160208 1348) ((cider (0 10 0)) (evalator (1 0 0))) "Clojure evaluation context for evalator via CIDER." tar ((:commit . "caa4e0a137bdfada86593128a654e16aa617ad50") (:url . "http://www.github.com/seanirby/evalator-clojure") (:keywords "languages" "clojure" "cider" "helm"))]) (evalator . [(20160212 1728) ((helm-core (1 9 1))) "Package for interactive transformation of data with helm" tar ((:commit . "f30da4da48c0b3f3cfa1fc1c7cfdb53ffe79df36") (:url . "http://www.github.com/seanirby/evalator") (:keywords "languages" "elisp" "helm"))]) (eval-sexp-fu . [(20131230 1351) ((highlight (0))) "Tiny functionality enhancements for evaluating sexps." single ((:commit . "6cffd33155d10c3e58b39cbb170f42e910fd8595") (:keywords "lisp" "highlight" "convenience"))]) (eval-in-repl . [(20170217 1432) ((dash (0 0 0)) (paredit (0 0 0)) (ace-window (0 0 0))) "Consistent ESS-like eval interface for various REPLs" tar ((:commit . "d96a134abe65c736bfaf0a78d1f899ea7cf0fee5") (:url . "https://github.com/kaz-yos/eval-in-repl/"))]) (eval-expr . [(20120618 2347) nil "enhanced eval-expression command" single ((:commit . "a0e69e83de41df8dbccefc1962ab4f02206a3328") (:keywords "lisp" "extensions"))]) (euslisp-mode . [(20170621 945) nil "Major mode for Euslisp-formatted text" tar ((:commit . "16ee25d6d84d0e0b1b153791c51acedafd8d572b") (:url . "https://github.com/iory/euslisp-mode") (:keywords "euslisp" "euslisp" "github"))]) (ethan-wspace . [(20170507 1330) nil "whitespace customizations for emacs" single ((:commit . "e055ee6730c0b03525d32e67511ef6c51e4c29e4") (:keywords "whitespace" "tab" "newline" "trailing" "clean"))]) (etags-table . [(20130824 457) nil "Set tags table(s) based on current file" single ((:keywords "etags" "tags" "tag"))]) (etags-select . [(20130824 500) nil "Select from multiple tags" single ((:keywords "etags" "tags" "tag" "select"))]) (etable . [(20161028 1309) ((dash (2 9 0)) (interval-list (0 1)) (emacs (24 4))) "Implementation of javax.swing.JTable for Emacs." tar ((:commit . "d502141f0c69bf95256ba5cb9cd15350c7e942d2"))]) (esxml . [(20160703 1417) nil "Library for working with xml via esxml and sxml" single ((:commit . "fd0f0185cd579b00c3d76d2c383cd33fe642bb93") (:keywords "tools" "lisp" "comm"))]) (esup . [(20170508 1536) ((cl-lib (0 5)) (emacs (24))) "the Emacs StartUp Profiler (ESUP)" tar ((:commit . "efaf44d0739391aed48c77b5cd3013b50027ed36") (:url . "http://github.com/jschaf/esup") (:keywords "convenience" "processes"))]) (ess-view . [(20160309 1315) ((ess (15)) (s (1 8 0)) (f (0 16 0))) "View R dataframes in a spreadsheet software" single ((:commit . "5ae35d37ac625b16640401d19f9a51b340da9420") (:url . "https://github.com/GioBo/ess-view") (:keywords "extensions" "ess"))]) (ess-smart-underscore . [(20170222 1715) ((ess (0))) "Ess Smart Underscore" tar ((:commit . "02e8a03553f34fe7184afff97f20e560d6f8d617") (:url . "http://github.com/mlf176f2/ess-smart-underscore.el") (:keywords "ess" "underscore"))]) (ess-smart-equals . [(20150201 2201) ((emacs (24)) (ess (5 0))) "better smart-assignment with =-key in R and S" single ((:commit . "e0f5f18f01ed252fde50d051adf1fa6254a254c9") (:url . "https://github.com/genovese/ess-smart-equals") (:keywords "r" "s" "ess" "convenience"))]) (ess-R-object-popup . [(20130302 336) ((popup (20130117 1954)) (ess (20130225 1754))) "popup description of R object" single ((:commit . "7e1f601bfba72de0fda44d9c82f96028ecbb9948") (:url . "https://github.com/myuhe/ess-R-object-popup.el") (:keywords "convenience" "ess"))]) (ess-R-data-view . [(20130509 458) ((ctable (20130313 1743)) (popup (20130324 1305)) (ess (20130225 1754))) "Data viewer for GNU R" single ((:commit . "d6e98d3ae1e2a2ea39a56eebcdb73e99d29562e9") (:url . "https://github.com/myuhe/ess-R-data-view.el") (:keywords "convenience"))]) (ess . [(20170603 817) ((julia-mode (0 3))) "Emacs Speaks Statistics" tar ((:commit . "f2643cd3ae6727535ce76ed00a91bf96c09e280f") (:url . "http://ess.r-project.org"))]) (esqlite-helm . [(20151116 50) ((esqlite (0 2 0)) (helm (20131207 845))) "Define helm source for sqlite database" single ((:commit . "bc4047e09b8f6c34802db86095cd465935670dce") (:url . "https://github.com/mhayashi1120/Emacs-esqlite") (:keywords "data"))]) (esqlite . [(20151206 406) ((pcsv (1 3 3))) "Manipulate sqlite file from Emacs" single ((:commit . "bc4047e09b8f6c34802db86095cd465935670dce") (:url . "https://github.com/mhayashi1120/Emacs-esqlite") (:keywords "data"))]) (espuds . [(20160905 600) ((s (1 7 0)) (dash (2 2 0)) (f (0 12 1))) "Ecukes step definitions" single ((:commit . "7fc312184348df55d19d06914605356885674354") (:url . "http://github.com/ecukes/espuds") (:keywords "test"))]) (espresso-theme . [(20130228 2348) nil "Espresso Tutti Colori port for Emacs" single ((:commit . "c3a524e873f33923fe511791197a66dea5156687") (:url . "https://github.com/dgutov/espresso-theme"))]) (eslintd-fix . [(20170313 1943) nil "use eslint_d to automatically fix js files" single ((:commit . "afa5cd1c1fb644a918e410ef396392b841146632") (:url . "https://github.com/aaronjensen/eslintd-fix"))]) (eslint-fix . [(20160819 36) nil "Fix JavaScript files using ESLint" single ((:commit . "be90d1e78b1dfd43b6b3b1c06868539e2ac27d3a") (:url . "https://github.com/codesuki/eslint-fix") (:keywords "javascript" "eslint" "lint" "formatting" "style"))]) (eshell-z . [(20170116 2038) ((cl-lib (0 5))) "cd to frequent directory in eshell" single ((:commit . "c9334cbc1552234df3437f35d98e32f4d18446b8") (:url . "https://github.com/xuchunyang/eshell-z") (:keywords "convenience"))]) (eshell-up . [(20170425 1037) ((emacs (24))) "Quickly go to a specific parent directory in eshell" single ((:commit . "2216e149ffdd5cd8eb49d6661187d676b6a22d19") (:url . "https://github.com/peterwvj/eshell-up") (:keywords "eshell"))]) (eshell-prompt-extras . [(20160926 1723) nil "Display extra information for your eshell prompt." single ((:commit . "9825db1b9326e106f821364ae01ec9c7dbdf6d18") (:keywords "eshell" "prompt"))]) (eshell-git-prompt . [(20170316 1051) ((emacs (24 1)) (cl-lib (0 5)) (dash (2 11 0))) "Some Eshell prompt for Git users" single ((:commit . "ec246fa4c27ecb7df10c93b0710e6a64fa5ef4c9") (:url . "https://github.com/xuchunyang/eshell-git-prompt") (:keywords "eshell" "git"))]) (eshell-fringe-status . [(20170117 1516) nil "Show last status in fringe" single ((:commit . "adc6997c68e39c0d52a2af1b2fd5cf2057783797") (:url . "http://projects.ryuslash.org/eshell-fringe-status/"))]) (eshell-fixed-prompt . [(20170108 1301) ((emacs (25)) (s (1 11 0))) "Restrict eshell to a single fixed prompt" single ((:commit . "0b1d7cc05a7f59e8c06c321401cea86c6cb068af"))]) (eshell-did-you-mean . [(20150915 1252) ((emacs (24 1)) (cl-lib (0 5))) "command not found (\"did you mean…\" feature) in Eshell" single ((:commit . "7cb6ef8e2274d0a50a9e114d412307a6543533d5") (:url . "https://github.com/xuchunyang/eshell-did-you-mean") (:keywords "eshell"))]) (eshell-autojump . [(20150927 24) nil "autojump command for Eshell" single ((:commit . "c6a8b81a16576df9875e721fbbfe6690d04e7e43") (:url . "http://github.com/coldnew/eshell-autojump"))]) (esh-help . [(20170702 1912) ((dash (1 4 0))) "Add some help functions and support for Eshell" single ((:commit . "03bf6fc7ef9ac46304e37524fdaf7ebfee317695") (:url . "https://github.com/tom-tan/esh-help/") (:keywords "eshell" "extensions"))]) (esh-buf-stack . [(20140107 218) nil "Add a buffer stack feature to Eshell" single ((:commit . "ce0ea5aadca3150eaa9d2e6ec20296add4e99176") (:keywords "eshell" "extensions"))]) (escreen . [(20170613 1534) nil "emacs window session manager" single ((:commit . "153dc05b2b7e6e2d4cbd7b6cbe8b10d6a70f73f3"))]) (esa . [(20170427 845) ((cl-lib (0 5))) "Interface to esa.io" single ((:commit . "8bd011cd1861113f54ad155d3c62725e1dcd37e7") (:url . "https://github.com/nabinno/esa.el") (:keywords "tools" "esa"))]) (es-windows . [(20140211 104) ((cl-lib (0 3)) (emacs (24))) "Window-management utilities" single ((:commit . "239e30408cb1adb4bc8bd63e2df34711fa910b4f") (:url . "https://github.com/sabof/es-windows"))]) (es-mode . [(20170608 1234) ((dash (2 11 0)) (cl-lib (0 5)) (spark (1 0)) (s (1 11 0)) (request (0 3 0))) "A major mode for editing Elasticsearch queries" tar ((:commit . "3752438d17c45553956cf775022b2358ff3d8731") (:url . "http://www.github.com/dakrone/es-mode") (:keywords "elasticsearch"))]) (es-lib . [(20141111 1030) ((cl-lib (0 3))) "A collection of emacs utilities" tar ((:commit . "753b27363e39c10edc9e4e452bdbbbe4d190df4a") (:url . "https://github.com/sabof/es-lib"))]) (ert-runner . [(20161027 159) ((s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) "Opinionated Ert testing workflow" tar ((:commit . "10628b8b90294077174f78e7b75e548f2a4b6f78") (:url . "http://github.com/rejeep/ert-runner.el") (:keywords "test"))]) (ert-modeline . [(20140115 215) ((s (1 3 1)) (dash (1 2 0)) (emacs (24 1)) (projectile (0 9 1))) "displays ert test results in the modeline." single ((:commit . "e7be2b81191afb437b70368a819770f8f750e4af") (:keywords "tools" "tests" "convenience"))]) (ert-junit . [(20161018 1217) ((ert (0))) "JUnit XML reports from ert results" single ((:commit . "e1d7b795176dceae40adb15c28717276c00269e4") (:url . "http://bitbucket.org/olanilsson/ert-junit") (:keywords "tools" "test" "unittest" "ert"))]) (ert-expectations . [(20130824 500) nil "The simplest unit test framework in the world" single ((:url . "http://www.emacswiki.org/emacs/download/ert-expectations.el") (:keywords "test" "unittest" "ert" "expectations"))]) (ert-async . [(20151011 659) nil "Async support for ERT" single ((:commit . "f64a7ed5b0d2900c9a3d8cc33294bf8a79bc8526") (:url . "http://github.com/rejeep/ert-async.el") (:keywords "test"))]) (eros . [(20161221 826) ((emacs (24 4))) "Evaluation Result OverlayS for Emacs Lisp" single ((:commit . "a42e45c9b2397156c684330b0fc90ee0eba773f5") (:url . "https://github.com/xiongtx/eros") (:keywords "convenience" "lisp"))]) (erlang . [(20170509 742) ((emacs (24 1))) "Erlang major mode" tar ((:commit . "381a47d5219407f9c734cf0b081776129e7c180f"))]) (ergoemacs-status . [(20160317 2238) ((powerline (2 3)) (mode-icons (0 1 0))) "Adaptive Status Bar / Mode Line" single ((:commit . "d952cc2361adf6eb4d6af60950ad4ab699c81320"))]) (ergoemacs-mode . [(20170509 1202) ((emacs (24 1)) (undo-tree (0 6 5)) (cl-lib (0 5))) "Emacs mode based on common modern interface and ergonomics." tar ((:commit . "3e6fea941af18415b520f2fabc45349c4a148a8f") (:url . "https://github.com/ergoemacs/ergoemacs-mode") (:keywords "convenience"))]) (erefactor . [(20160121 159) ((cl-lib (0 3))) "Emacs-Lisp refactoring utilities" single ((:commit . "bf68085e5635eb94fd85709f8e1355c1f5534745") (:url . "https://github.com/mhayashi1120/Emacs-erefactor") (:keywords "extensions" "tools" "maint"))]) (eredis . [(20160809 2053) nil "eredis, a Redis client in emacs lisp" single ((:commit . "0d7d524592be488309c7c339d137ba836e52bfff") (:url . "http://code.google.com/p/eredis/"))]) (ereader . [(20170529 1408) ((emacs (24 4)) (dash (2 12 1)) (s (1 10 0)) (xml+ (0 0 0))) "Major mode for reading ebooks with org-mode integration" tar ((:commit . "ef3cd7b9ced044bbd9a3e7cce0c78a970a483288") (:url . "https://github.com/bddean/emacs-ereader") (:keywords "epub" "ebook"))]) (ercn . [(20150523 803) nil "Flexible ERC notifications" single ((:commit . "79a4df5609046ae2e2e3375998287be6dda80615") (:url . "http://www.github.com/leathekd/ercn"))]) (erc-yt . [(20150426 549) ((dash (2 10 0))) "An erc module to display youtube links nicely" single ((:commit . "43e7d49325b17a3217a6ffb4a9daf75c5ff4e6f8") (:keywords "multimedia"))]) (erc-youtube . [(20150603 1436) nil "Show info about a YouTube URL in an ERC buffer." single ((:commit . "97054ba8475b442e2aa81e5a291f668b7f28697f") (:keywords "multimedia"))]) (erc-view-log . [(20140227 1239) nil "Major mode for viewing ERC logs" single ((:commit . "c5a25f0cbca84ed2e4f72068c02b66bd0ea3b266") (:url . "http://github.com/Niluge-KiWi/erc-view-log/raw/master/erc-view-log.el") (:keywords "erc" "viewer" "logs" "colors"))]) (erc-twitch . [(20170426 2306) ((json (1 3)) (erc (5 0))) "Support for Twitch emotes for ERC." single ((:commit . "53c6af0cb72e56d897d30a40e7e5066668d6b5ec") (:url . "https://github.com/vibhavp/erc-twitch") (:keywords "twitch" "erc" "emotes"))]) (erc-tweet . [(20150920 558) nil "shows text of a tweet when an url is posted in erc buffers" single ((:commit . "91fed61e139fa788d66a7358f0d50acc896414b8") (:keywords "extensions"))]) (erc-track-score . [(20130328 515) nil "Add score support to tracked channel buffers" single ((:commit . "5b27531ea6b1a4c4b703b270dfa9128cb5bfdaa3") (:url . "http://julien.danjou.info/erc-track-score.html"))]) (erc-terminal-notifier . [(20140115 224) nil "OSX notifications via the terminal-notifier gem for Emacs ERC." single ((:commit . "a3dacb935845e4a20031212bbd82b2170f68d2a8") (:url . "http://github.com/julienXX/") (:keywords "erc" "terminal-notifier" "nick"))]) (erc-social-graph . [(20150508 504) nil "A social network graph module for ERC." single ((:commit . "e6ef3416a1c5064054bf054d9f0c1c7bf54a9cd0") (:url . "https://github.com/vibhavp/erc-social-graph") (:keywords "erc" "graph"))]) (erc-image . [(20150914 314) nil "Show received image urls in the ERC buffer" single ((:commit . "270a60706e3e0669350bb7aaea465570ef5074cf") (:keywords "multimedia"))]) (erc-hl-nicks . [(20160202 1150) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" single ((:commit . "be181920ce6af0ab5d00d1c638e4e598b3998643") (:url . "http://www.github.com/leathekd/erc-hl-nicks"))]) (erc-hipchatify . [(20170314 937) ((emacs (24 4)) (s (1 10 0)) (alert (1 2)) (request (0 2 0))) "Provide emoticons and html rendering for HipChat" single ((:url . "https://bitbucket.org/seanfarley/erc-hipchatify") (:keywords "erc" "bitlbee" "hipchat" "multimedia"))]) (erc-crypt . [(20161228 739) ((cl-lib (0 5))) "Symmetric Encryption for ERC" single ((:commit . "731f9264a5bf08a8fc0b5ce69e72058c86f873a5") (:url . "https://github.com/atomontage/erc-crypt") (:keywords "comm"))]) (erc-colorize . [(20170107 539) nil "Per user colorization of whole message" single ((:commit . "d026a016dcb9d63d9ac66d30627a92a8f1681bbd") (:url . "https://github.com/thisirs/erc-colorize.git") (:keywords "erc" "convenience"))]) (eproject . [(20151205 2130) ((helm (1 6 4))) "assign files to projects, programatically" tar ((:commit . "fdff000d601eb8bdb165db3dc4925c6797308b78") (:keywords "programming" "projects"))]) (eprime-mode . [(20140513 1116) nil "An E-prime checking mode for Emacs" single ((:commit . "17a481af26496be91c07139a9bfc05cfe722506f") (:url . "https://github.com/AndrewHynes/eprime-mode") (:keywords "e-prime" "english" "grammar"))]) (epresent . [(20160410 1901) ((org (8)) (cl-lib (0 5))) "Simple presentation mode for Emacs Org-mode" single ((:commit . "6c8abedcf46ff08091fa2bba52eb905c6290057d") (:url . "https://github.com/dakrone/epresent") (:keywords "gui"))]) (epm . [(20161027 34) ((emacs (24 3)) (epl (0 8))) "Emacs Package Manager" tar ((:commit . "ab3d194fc4d11520d6b9bce4746d7242f3f1606a") (:url . "https://github.com/xuchunyang/epm"))]) (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" single ((:commit . "a5ad061d0a5eb42f66c384e55d102da7d52c96b0") (:url . "http://github.com/cask/epl") (:keywords "convenience"))]) (epkg . [(20170702 59) ((closql (0 3 3)) (dash (2 13 0)) (emacs (25 1))) "browse the Emacsmirror package database" tar ((:commit . "d9c43561d8d50066c1774e3cf3df12e168c9fc92") (:url . "https://github.com/emacscollective/epkg") (:keywords "tools"))]) (epic . [(20170209 1623) ((htmlize (1 47))) "Evernote Picker for Cocoa Emacs" single ((:commit . "a41826c330eb0ea061d58a08cc861b0c4ac8ec4e") (:url . "https://github.com/yoshinari-nomura/epic") (:keywords "evernote" "applescript"))]) (epc . [(20140609 2234) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar ((:commit . "76fe6847a341f78c635164c18908a0b691f7212c") (:url . "https://github.com/kiwanami/emacs-epc") (:keywords "lisp" "rpc"))]) (eopengrok . [(20160903 2359) ((s (1 9 0)) (dash (2 10 0)) (magit (2 1 0)) (cl-lib (0 5))) "opengrok interface for emacs" single ((:commit . "78f734328aaf19c52720415c037708ece1944c4c") (:keywords "tools"))]) (envdir . [(20160221 1123) ((emacs (24)) (dash (2 10 0)) (f (0 17 2))) "Modify environment according to files in a specified directory" single ((:commit . "f29346c55ccf11d8c75628edc6d430ed63c36917") (:url . "https://github.com/proofit404/envdir-mode"))]) (ensime . [(20170625 617) ((scala-mode (0 23)) (sbt-mode (0 2)) (yasnippet (0 10 0)) (company (0 9 0)) (dash (2 12 1)) (s (1 11 0)) (popup (0 5 3))) "ENhanced Scala Interaction Mode for Emacs" tar ((:commit . "c56e09417e5bd65fd579c967cc17c6ca6c4f4fc4") (:url . "https://github.com/ensime/ensime-emacs") (:keywords "languages"))]) (enotify . [(20130407 648) nil "A networked notification system for emacs" tar ((:commit . "7fd2f48ef4ff32c8f013c634ea2dd6b1d1409f80"))]) (eno . [(20160110 234) ((dash (2 12 1)) (edit-at-point (1 0))) "Goto/copy/cut any word/symbol/line in view, similar to ace-jump/easymotion" single ((:commit . "40075bb1ed9e62f42c5799f3d3721734742ed417") (:url . "http://github.com/enoson/eno.el"))]) (enlive . [(20150824 549) nil "query html document with css selectors" single ((:commit . "0f6646adda3974e7fe9a42339a4ec3daa532eda5") (:url . "http://github.com/zweifisch/enlive") (:keywords "css" "selector" "query"))]) (enh-ruby-mode . [(20170417 2356) ((emacs (24))) "Major mode for editing Ruby files" tar ((:commit . "71ba417baea4c4e1ac814854638cbeb4b0b383fd") (:url . "http://github.com/zenspider/Enhanced-Ruby-Mode") (:keywords "languages elisp" "ruby"))]) (engine-mode . [(20170508 828) nil "Define and query search engines from within Emacs." single ((:commit . "59f1d463fada670895b00bab406160570fb8bc35") (:url . "https://github.com/hrs/engine-mode/engine-mode.el"))]) (encourage-mode . [(20151128 105) ((emacs (24 4))) "Encourages you in your work. :D" single ((:commit . "99edacf2d94d168d3da0609860dc7253db7c9815") (:url . "https://github.com/halbtuerke/encourage-mode.el") (:keywords "fun"))]) (enclose . [(20121008 914) nil "Enclose cursor within punctuation pairs." tar ((:commit . "2747653e84af39017f503064bc66ed1812a77259"))]) (emr . [(20170109 1526) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (redshank (1 0 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0)) (iedit (0 97))) "Emacs refactoring system." tar ((:commit . "07e0b41fe080536e8a69301ff1c692f2871bee2f") (:keywords "tools" "convenience" "refactoring"))]) (empos . [(20151011 1216) nil "Locate bibtex citations from within emacs" single ((:commit . "7b99ad30e56937adb7e6349777e5a2045597d564") (:url . "http://github.com/dimalik/empos/") (:keywords "citations" "reference" "bibtex" "reftex"))]) (emojify . [(20170617 931) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar ((:commit . "a93f3d424a2ca07d81debbb024053d0e207e999a") (:url . "https://github.com/iqbalansari/emacs-emojify") (:keywords "multimedia" "convenience"))]) (emoji-recall . [(20160723 1508) ((emacs (24))) "How many emoji can you recall from memory?" tar ((:commit . "d9122f8fb1467309260109a1985cd14f18fdf631") (:url . "https://github.com/lujun9972/emoji-recall.el") (:keywords "game"))]) (emoji-fontset . [(20160726 1224) nil "Set font face for Emoji." single ((:commit . "10be897fa5165fd40fd35a89e38c759e008fa775") (:keywords "emoji" "font" "config"))]) (emoji-display . [(20140117 213) nil "emoji displaying module" single ((:commit . "bb4217f6400151a9cfa6d4524b8427f01feb5193") (:url . "https://github.com/ikazuhiro/emoji-display") (:keywords "emoji"))]) (emoji-cheat-sheet-plus . [(20150617 631) ((emacs (24)) (helm (1 6 4))) "emoji-cheat-sheet for emacs" tar ((:commit . "96a003127d646a2683d81ca906a17eace0a6413e") (:url . "https://github.com/syl20bnr/emacs-emoji-cheat-sheet-plus") (:keywords "emacs" "emoji"))]) (emms-state . [(20160504 105) ((emms (0))) "Display track description and playing time in the mode line" single ((:commit . "77930300222333b71eafd495cc1fee3a3585eb23") (:url . "https://github.com/alezost/emms-state.el") (:keywords "emms"))]) (emms-soundcloud . [(20131221 345) ((emms (20131016)) (json (1 2))) "EMMS source for Soundcloud audio sharing platform" single ((:commit . "87e5cbf9609d1f26c24dc834fdeb78b33d453c2b") (:url . "http://github.com/osener/emms-soundcloud") (:keywords "emms" "soundcloud"))]) (emms-player-simple-mpv . [(20160924 825) ((emacs (24)) (cl-lib (0 5)) (emms (4 0))) "An extension of emms-player-simple.el for mpv JSON IPC" tar ((:commit . "bcc056364df5f405716006a8b7bb90102a57f62f") (:url . "https://github.com/momomo5717/emms-player-simple-mpv") (:keywords "emms" "mpv"))]) (emms-player-mpv-jp-radios . [(20170506 1024) ((emacs (24)) (cl-lib (0 5)) (emms (4 0)) (emms-player-simple-mpv (0 1 7))) "EMMS players and stream lists of Japan radio stations" tar ((:commit . "43ef07db6e724847fdcff5f66d1806b3e8d315e4") (:url . "https://github.com/momomo5717/emms-player-mpv-jp-radios") (:keywords "emms" "mpv" "radio"))]) (emms-player-mpv . [(20170628 303) ((emms (0))) "mpv support for EMMS" single ((:commit . "8c72282c98f9b10601e9a6901277040cda4b33aa") (:url . "https://github.com/dochang/emms-player-mpv/") (:keywords "multimedia" "emms" "mpv"))]) (emms-mode-line-cycle . [(20160221 320) ((emacs (24)) (emms (4 0))) "Display the emms mode line as a ticker" single ((:commit . "2c2f395e484a1d345050ddd61ff5fab71a92a6bc") (:url . "https://github.com/momomo5717/emms-mode-line-cycle") (:keywords "emms" "mode-line"))]) (emms-mark-ext . [(20130528 2027) ((emms (3 0))) "Extra functions for emms-mark-mode and emms-tag-edit-mode" single ((:commit . "ec68129e3e9e469e5bf160c6a1b7030e322f3541") (:url . "https://github.com/vapniks/emms-mark-ext") (:keywords "convenience" "multimedia"))]) (emms-info-mediainfo . [(20131223 500) ((emms (0))) "Info-method for EMMS using medianfo" single ((:commit . "bce16eae9eacd38719fea62a9755225a888da59d") (:keywords "multimedia" "processes"))]) (emms . [(20170619 1156) nil "The Emacs Multimedia System" tar ((:commit . "a4ec6697e45a006753bfd79c22f14524748df493") (:keywords "emms" "mp3" "mpeg" "multimedia"))]) (emmet-mode . [(20161113 2158) nil "Unofficial Emmet's support for emacs" single ((:commit . "5af39aaef59125fd80901f275c23c89493f9d133") (:url . "https://github.com/smihica/emmet-mode") (:keywords "convenience"))]) (emlib . [(20161126 723) ((dash (2 13 0)) (cl-lib (0 5))) "A Machine Learning library for Emacs" tar ((:commit . "dea2af00f551ea580c641d86dd69219f7d4f3685") (:url . "https://github.com/narendraj9/emlib.git") (:keywords "data" "ai" "neural networks" "ml"))]) (embrace . [(20170615 1131) ((cl-lib (0 5)) (expand-region (0 10 0))) "Add/Change/Delete pairs based on `expand-region'" single ((:commit . "394863dd7271e831cb9c257a1cd2249302ba962a") (:keywords "extensions"))]) (ember-yasnippets . [(20160526 958) ((yasnippet (0 8 0))) "Snippets for Ember.js development" tar ((:commit . "3b5bd01569646237bf1b540d097e12f9118b67f4") (:keywords "tools" "abbrev" "languages"))]) (ember-mode . [(20161105 855) ((cl-lib (0 5))) "Ember navigation mode for emacs" single ((:commit . "3e45cf3e290ac422c1b9713f3e7db5c634bcdaf2") (:keywords "ember" "ember.js" "emberjs"))]) (emaps . [(20160910 521) nil "utilities for working with keymaps." single ((:commit . "728eb6eeae46194f32a01bafa349ece520bc7a10") (:url . "https://github.com/GuiltyDolphin/emaps") (:keywords "convenience" "keyboard" "keymap" "utility"))]) (emamux-ruby-test . [(20130812 939) ((emamux (0 1)) (projectile (0 9 1))) "Ruby test with emamux" single ((:commit . "23b73c650573b340351a919da3da416acfc2ac84") (:url . "https://github.com/syohex/emamux-ruby-test"))]) (emamux . [(20170226 1937) ((emacs (24 3))) "Interact with tmux" single ((:commit . "39f57786b2cdd3844888df42d71c7bd251f07158") (:url . "https://github.com/syohex/emacs-emamux"))]) (emacsshot . [(20161018 743) nil "Snapshot a frame or window from within Emacs" tar ((:commit . "11ace77ab718292d05b82d93178380aff591468b") (:url . "https://github.com/marcowahl/emacsshot") (:keywords "convenience"))]) (emacsql-sqlite . [(20170410 1218) ((emacs (24 3)) (cl-generic (0 3)) (cl-lib (0 3)) (emacsql (2 0 0))) "EmacSQL back-end for SQLite" tar ((:commit . "1b37570bf5813e160fa18a766e20dfa690910519") (:url . "https://github.com/skeeto/emacsql"))]) (emacsql-psql . [(20170410 1008) ((emacs (24 3)) (cl-generic (0 3)) (cl-lib (0 3)) (emacsql (2 0 0)) (pg (0 12))) "EmacSQL back-end for PostgreSQL via psql and pg" tar ((:commit . "1b37570bf5813e160fa18a766e20dfa690910519") (:url . "https://github.com/skeeto/emacsql"))]) (emacsql-mysql . [(20170410 1008) ((emacs (24 3)) (cl-generic (0 3)) (cl-lib (0 3)) (emacsql (2 0 0))) "EmacSQL back-end for MySQL" single ((:commit . "1b37570bf5813e160fa18a766e20dfa690910519") (:url . "https://github.com/skeeto/emacsql"))]) (emacsql . [(20170410 1218) ((emacs (24 3)) (cl-generic (0 3)) (cl-lib (0 3)) (finalize (1 0 0))) "high-level SQL database front-end" tar ((:commit . "1b37570bf5813e160fa18a766e20dfa690910519") (:url . "https://github.com/skeeto/emacsql"))]) (emacsist-view . [(20160426 523) nil "Mode for viewing emacsist.com" single ((:commit . "f67761259ed779a9bc95c9a4e0474522990c5c6b") (:url . "https://github.com/lujun9972/emacsist-view") (:keywords "convenience" "usability"))]) (emacsc . [(20161028 1006) nil "helper for emacsc(1)" tar ((:commit . "421e0c567358769e32f670ae8e949d99abae0c28") (:url . "https://github.com/knu/emacsc") (:keywords "tools"))]) (emacsagist . [(20140331 1130) ((cl-lib (0 5))) "Search Packagist.org packages without leaving Emacs" single ((:commit . "aba342ba59c254a88017f25e9fb7a8cd6f2fda83") (:url . "http://github.com/echosa/emacsagist") (:keywords "tools"))]) (emacs-setup . [(20120727 726) nil "Package for maintaining your emacs configuration. Clean up your .emacs!" tar ((:commit . "cc36ad5318c6c0e65d1b9ff8dff5ea2437675de2"))]) (elx . [(20161104 1831) ((emacs (24 4))) "extract information from Emacs Lisp libraries" single ((:commit . "84c9cd5721be9594de743330e7abcec092d2838c") (:url . "https://github.com/tarsius/elx") (:keywords "docs" "libraries" "packages"))]) (elwm . [(20150817 307) ((dash (1 1 0))) "Minimalistic window manager for emacs" single ((:commit . "c33b183f006ad476c3a44dab316f580f8b369930") (:url . "https://github.com/Fuco1/elwm") (:keywords "docs"))]) (elscreen-separate-buffer-list . [(20161106 1958) ((emacs (24 4)) (elscreen (1 4 6))) "Separate buffer list manager for elscreen" single ((:commit . "7652d827aa1b8c1b04303c5b4b0bda5e8f85565e") (:keywords "elscreen"))]) (elscreen-persist . [(20160505 1829) ((elscreen (1 4 6)) (revive (2 19))) "persist the elscreen across sessions" single ((:commit . "79cb33909a9c66bb183432b956edffbc6b12ace3") (:keywords "elscreen" "frames"))]) (elscreen-multi-term . [(20151021 1933) ((emacs (24 4)) (elscreen (1 4 6)) (multi-term (1 3))) "Multi term for elscreen" single ((:commit . "7b6048a0dd80f69460a62bbc6f1af8856141a5ea") (:keywords "elscreen" "multi term"))]) (elscreen-mew . [(20160504 1135) ((elscreen (20120413 807))) "ElScreen Add-On for Mew" single ((:commit . "89871fad690ae161dc076e16ef481b1965612077") (:url . "https://github.com/masutaka/elscreen-mew"))]) (elscreen-fr . [(20160920 253) ((elscreen (0)) (seq (1 11))) "Use frame title as screen tab" single ((:commit . "b9c11f80d277086d5d5bf88623e15fc7adbbbe3c") (:url . "http://github.com/rocher/elscreen-fr"))]) (elscreen-buffer-group . [(20160105 803) ((emacs (24 4)) (elscreen (0)) (cl-lib (0 5))) "elscreen buffer group" single ((:commit . "06ea9384a642ff5c3a93f36aee9f5d6b5c17657e") (:url . "https://github.com/jeffgran/elscreen-buffer-group") (:keywords "buffer"))]) (elscreen . [(20160613 251) nil "Emacs window session manager" tar ((:commit . "35c68a7503179fa618639e1c90b43bec9812a988"))]) (elquery . [(20170624 1635) ((emacs (25 1)) (s (1 11 0)) (dash (2 13 0))) "The HTML library for elisp." single ((:commit . "7f6cffe6e1eb0fa1f7d6ea0144a34ae0b74f6f4b") (:url . "https://github.com/AdamNiederer/elquery") (:keywords "html" "hypermedia" "tools" "webscale"))]) (elpy . [(20170701 1412) ((company (0 9 2)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 11 0))) "Emacs Python Development Environment" tar ((:commit . "6b654b5fdc4e8f09cd842a0dde83ded284223c2f"))]) (elpa-mirror . [(20160917 10) nil "Create local package repository" single ((:commit . "dcadffd331ac70c59e1960d34b7f998302c616d6") (:url . "http://github.com/redguardtoo/elpa-mirror") (:keywords "cloud" "mirror" "elpa"))]) (elpa-clone . [(20170502 514) ((emacs (24 4)) (cl-lib (0))) "Clone ELPA archive" single ((:commit . "92f4c9d3570ad002575a90d0cc4a522c203a1110") (:url . "https://github.com/dochang/elpa-clone") (:keywords "comm" "elpa" "clone" "mirror"))]) (elpa-audit . [(20141023 631) nil "Handy functions for inspecting and comparing package archives" single ((:commit . "727da50e626977351aff2675b6540a36818bbbe6") (:url . "https://github.com/purcell/elpa-audit") (:keywords "maint"))]) (eloud . [(20160731 857) ((emacs (24 4))) "A lightweight, interactive screen reader" single ((:commit . "82c97918585bd2a749251ae87d7732ca9d856c16") (:url . "https://github.com/smythp/eloud") (:keywords "extensions"))]) (elogcat . [(20151120 1641) ((s (1 9 0)) (dash (2 10 0))) "logcat interface" single ((:commit . "4f311b7a07565b0d060334bc68edb36f2bff703f") (:keywords "tools"))]) (elog . [(20160724 1555) ((eieio (1 3))) "logging library extended from logito" single ((:commit . "a67237d9813c7591614d95e2ef31cc5e5ed3f31b") (:keywords "lisp" "tool" "log"))]) (elnode . [(20140203 1506) ((web (0 1 4)) (dash (1 1 0)) (noflet (0 0 7)) (s (1 5 0)) (creole (0 8 14)) (fakir (0 1 6)) (db (0 0 5)) (kv (0 0 17))) "The Emacs webserver." tar ((:commit . "3f2bf225853e40a2a10386ee5ae0bd6ba5d44ce9"))]) (elmine . [(20170511 20) ((s (1 10 0))) "Redmine API access via elisp." single ((:commit . "432d2f2f7cb5b533f25b993d1001abcadcebe8ed") (:url . "http://github.com/leoc/elmine") (:keywords "tools"))]) (elmacro . [(20170312 356) ((s (1 11 0)) (dash (2 13 0))) "Convert keyboard macros to emacs lisp" single ((:commit . "97c8ca4041e5082df243ad6371a091759c30d0f7") (:url . "https://github.com/Silex/elmacro") (:keywords "macro" "elisp" "convenience"))]) (elm-yasnippets . [(20160331 2224) ((yasnippet (0 8 0))) "Yasnippets for Elm" tar ((:commit . "45a11a0cef0c36633fb3477d3dc4167e82779ba4") (:keywords "snippets"))]) (elm-mode . [(20170603 2006) ((f (0 17)) (let-alist (1 0 4)) (s (1 7 0)) (emacs (24 4))) "Major mode for Elm" tar ((:commit . "053e68c821fd6b6a7e3a054f4e93c551e271db57") (:url . "https://github.com/jcollard/elm-mode"))]) (elixir-yasnippets . [(20150417 539) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar ((:commit . "980ca7626c14ef0573bec0035ec7942796062783"))]) (elixir-mode . [(20170102 942) ((emacs (24)) (pkg-info (0 4))) "Major mode for editing Elixir files" tar ((:commit . "384d8daf8ad563ebf2cb3437c71d30241adbe099") (:url . "https://github.com/elixir-lang/emacs-elixir") (:keywords "languages" "elixir"))]) (elisp-slime-nav . [(20160128 1109) ((cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" single ((:commit . "8a1c2717a6fb50b654b8d1ffa12a40420ee32990") (:url . "https://github.com/purcell/elisp-slime-nav") (:keywords "navigation" "slime" "elisp" "emacs-lisp"))]) (elisp-sandbox . [(20131116 1042) nil "Evaluate EmacsLisp expressions in a sandbox" single ((:commit . "d894d68934ef09c42f72ac4e1173a0bedc23f139") (:url . "https://github.com/joelmccracken/elisp-sandbox") (:keywords "lisp"))]) (elisp-refs . [(20170528 1223) ((dash (2 12 0)) (f (0 18 2)) (list-utils (0 4 4)) (loop (2 1)) (s (1 11 0))) "find callers of elisp functions or macros" single ((:commit . "8f2da5ba5b728a8f278813c95d0fda3364cca40c") (:keywords "lisp"))]) (elisp-lint . [(20150430 1558) nil "basic linting for Emacs Lisp" single ((:commit . "1168b12575f1ed54ee523d34a90757459a6e42a3") (:url . "http://github.com/nschum/elisp-lint/") (:keywords "lisp"))]) (elisp-format . [(20160508 252) nil "Format elisp code" single ((:commit . "03cc293eb2f78ec58fc1d84279af06816a04b979") (:url . "https://github.com/Yuki-Inoue/elisp-format"))]) (elisp-docstring-mode . [(20170304 815) nil "Major mode for editing elisp docstrings." single ((:commit . "f512e509dd690f65133e55563ebbfd2dede5034f") (:keywords "languages"))]) (elisp-depend . [(20161230 750) nil "Parse depend libraries of elisp file." single ((:commit . "e4b201ac7dcee4489d58800c299fd04aaa61d07a"))]) (elhome . [(20161025 1342) ((initsplit (20120630))) "A framework for a \"home\" Emacs configuration" tar ((:commit . "e789e806469af3e9705f72298683c21f6c3a516d") (:url . "http://github.com/demyanrogozhin/elhome") (:keywords "lisp"))]) (elfeed-web . [(20170402 1842) ((simple-httpd (1 4 3)) (elfeed (1 4 0)) (emacs (24 1))) "web interface to Elfeed" tar ((:commit . "f06c06d36117985d7a7b4aa799d256ca8ec25962"))]) (elfeed-org . [(20170423 128) ((elfeed (1 1 1)) (org (8 2 7)) (dash (2 10 0)) (s (1 9 0)) (cl-lib (0 5))) "Configure elfeed with one or more org-mode files" single ((:commit . "a54649f0fd83fd536213f58ee4268c67a799293a") (:url . "https://github.com/remyhonig/elfeed-org") (:keywords "news"))]) (elfeed-goodies . [(20160926 209) ((popwin (1 0 0)) (powerline (2 2)) (elfeed (2 0 0)) (cl-lib (0 5)) (noflet (0 0 10)) (ace-jump-mode (2 0))) "Elfeed goodies" tar ((:commit . "f3f2595c845a8001d1bb28a185cc05cf984998ef") (:url . "https://github.com/algernon/elfeed-goodies"))]) (elfeed . [(20170531 206) ((emacs (24 3))) "an Emacs Atom/RSS feed reader" tar ((:commit . "f3eaa7421af79db3d4203b4b3afdf84c4796cd55"))]) (elf-mode . [(20161009 48) ((emacs (24 3))) "Show symbols in binaries" single ((:commit . "cd280d683cd3341d8bb31af6db7e3b74a133e6ab") (:url . "https://github.com/abo-abo/elf-mode") (:keywords "matching"))]) (elein . [(20120120 316) nil "running leiningen commands from emacs" single ((:commit . "d4c0c0491dbb7c90e953d7a16172107c37103605") (:url . "https://github.com/remvee/elein") (:keywords "tools" "processes"))]) (electric-spacing . [(20161209 1157) nil "Insert operators with surrounding spaces smartly" single ((:commit . "9d0f8a213133f2619a4e9dfbba3b00d4348c07b0"))]) (electric-operator . [(20170311 533) ((dash (2 10 0)) (names (20150618 0)) (emacs (24 4))) "Automatically add spaces around operators" single ((:commit . "13b5c19049bd7ac9529ee6fb6171f9141311f277") (:url . "https://github.com/davidshepherd7/electric-operator") (:keywords "electric"))]) (electric-case . [(20150417 412) nil "insert camelCase, snake_case words without \"Shift\"ing" single ((:commit . "bac64e772107e3dc721a9819f63b9ebdc28a81f7") (:url . "http://hins11.yu-yake.com/"))]) (eldoc-overlay-mode . [(20170123 6) ((emacs (25 1)) (inline-docs (1 0 1))) "Display eldoc with contextual documentation overlay." single ((:commit . "a0f25710b6a1614ce93c71c7947108c09b587c48") (:url . "https://github.com/stardiviner/eldoc-overlay-mode") (:keywords "eldoc" "overlay"))]) (eldoc-extension . [(20140306 645) nil "Some extension for eldoc" single ((:keywords "eldoc"))]) (eldoc-eval . [(20150512 506) nil "Enable eldoc support when minibuffer is in use." single ((:commit . "e87b89f89a2aed0bb3b31c014fc1b72f00413866"))]) (el2org . [(20170502 550) ((emacs (25 1))) "Convert elisp file to org file" single ((:commit . "c85837d56ed8fe1b31927755294db49ac46f443e") (:url . "https://github.com/tumashu/el2org") (:keywords "convenience"))]) (el2markdown . [(20170630 1158) nil "Convert commentary section of elisp files to markdown." single ((:commit . "368d99313683cd943c99feaffca356be60bdb636") (:url . "https://github.com/Lindydancer/el2markdown"))]) (el-x . [(20140111 1401) nil "main entry point for el-x package" tar ((:commit . "417851972dd967ab82a772256c3d9c1b343e7f82") (:keywords "lisp"))]) (el-swank-fuzzy . [(20130824 457) nil "fuzzy symbol completion." single ((:keywords "matching" "completion" "string"))]) (el-spy . [(20131226 1208) nil "Mocking framework for Emacs lisp. It also support spy, proxy." single ((:commit . "b1dead9d1877660856ada22d906ac4e54695aec7") (:url . "https://github.com/uk-ar/el-spy") (:keywords "test"))]) (el-sprunge . [(20140106 1739) ((web-server (20140105 2246)) (htmlize (20130207 1202)) (emacs (24 3))) "Command line paste server with Emacs highlighting" tar ((:commit . "37855ec60aeb4d565c49a4d711edc7341e9a22cb"))]) (el-spice . [(20140805 1138) ((thingatpt+ (0))) "Extra spice for emacs lisp programming" tar ((:commit . "65d9ec84b581a5867eebbc58de93958e992ca80d") (:url . "https://github.com/vedang/el-spice") (:keywords "languages" "extensions"))]) (el-spec . [(20121018 4) nil "ruby's rspec like syntax test frame work" single ((:commit . "1dbc465401d4aea5560318c4f13ff30920a0718d") (:url . "https://github.com/uk-ar/el-spec") (:keywords "test"))]) (el-pocket . [(20160528 951) ((web (0 5 2)) (emacs (24))) "Read and write to Pocket (getpocket.com)" single ((:commit . "eb356e013c71903f2e946631ff58a1d0c2372389") (:url . "http://github.com/pterygota/el-pocket") (:keywords "emacs" "pocket" "bookmarks"))]) (el-patch . [(20170513 2050) ((emacs (25))) "Future-proof your Emacs Lisp customizations!" single ((:commit . "22682dd020ac93b621bf45e57c738e551e2cb14b") (:url . "https://github.com/raxod502/el-patch") (:keywords "extensions"))]) (el-mock . [(20170501 1123) nil "Tiny Mock and Stub framework in Emacs Lisp" single ((:commit . "e3017494230cb90c5f542acc07c539be1497123b") (:url . "http://github.com/rejeep/el-mock.el") (:keywords "lisp" "testing" "unittest"))]) (el-init-viewer . [(20150303 28) ((emacs (24)) (cl-lib (0 5)) (ctable (0 1 2)) (dash (2 10 0)) (anaphora (1 0 0)) (el-init (0 1 4))) "Record viewer for el-init" single ((:commit . "dbcb4418fe342dfd7da805f2d7caf1def68db7f9") (:url . "https://github.com/HKey/el-init-viewer"))]) (el-init . [(20150728 220) ((emacs (24)) (cl-lib (0 5)) (anaphora (1 0 0))) "A loader inspired by init-loader" single ((:commit . "6b45551b8ed473c8a0c897b743b0378a3501556c") (:url . "https://github.com/HKey/el-init"))]) (el-get . [(20170701 1607) nil "Manage the external elisp bits and pieces you depend upon" tar ((:commit . "d2b483130f1e7a2667f45fbf236ecedae9b61274") (:url . "http://www.emacswiki.org/emacs/el-get") (:keywords "emacs" "package" "elisp" "install" "elpa" "git" "git-svn" "bzr" "cvs" "svn" "darcs" "hg" "apt-get" "fink" "pacman" "http" "http-tar" "emacswiki"))]) (el-autoyas . [(20120918 617) nil "Automatically create Emacs-Lisp Yasnippets" tar ((:commit . "bde0251ecb504f585dfa27c205c8e312655310cc") (:url . "https://github.com/mlf176f2/el-autoyas.el") (:keywords "emacs" "lisp" "mode" "yasnippet"))]) (ejc-sql . [(20170621 348) ((emacs (24 4)) (clomacs (0 0 2)) (cider (0 14)) (dash (2 12 1)) (auto-complete (1 5 1)) (spinner (1 7 1)) (direx (1 0 0))) "Emacs SQL client uses Clojure JDBC." tar ((:commit . "438e4f5995285d28fe7dddceacac212c2250dfe2") (:url . "https://github.com/kostafey/ejc-sql") (:keywords "sql" "jdbc"))]) (eink-theme . [(20161207 410) nil "E Ink color theme" single ((:commit . "40e7a7d31ee160175aa89583609d3f953fb066c6") (:url . "http://github.com/maio/eink-emacs"))]) (ein-mumamo . [(20150301 1628) ((ein (0 4))) "Multiple major mode support for Emacs IPython Notebook" single ((:commit . "028fefec499598add1a87b92ed991891f38f0c7b"))]) (ein . [(20170616 1117) ((websocket (1 7)) (auto-complete (1 4 0)) (request (0 3)) (deferred (0 5)) (cl-generic (0 3)) (dash (2 13 0)) (skewer-mode (1 6 2))) "Emacs IPython Notebook" tar ((:commit . "d3a40af5743c865e71b165600e8f1d0d2b72df53"))]) (eimp . [(20120826 1339) nil "Emacs Image Manipulation Package" single ((:commit . "2e7536fe6d8f7faf1bad7a8ae37faba0162c3b4f") (:keywords "files" "frames"))]) (eide . [(20170420 1251) nil "IDE interface" tar ((:commit . "5f046ea74eee7af9afbd815c2bfd11fa9c72e6b3"))]) (ego . [(20170601 817) ((emacs (24 5)) (ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0)) (simple-httpd (1 4 5))) "a static site generator based on org mode, forked from org-page." tar ((:commit . "93ccd450d2d9e5db27aebb024a1b2ed56d5131dc"))]) (egison-mode . [(20160603 103) nil "Egison editing mode" single ((:commit . "c06b457113a7e9484f8f4ae079cb257d8eb65396") (:url . "https://github.com/egisatoshi/egison3/blob/master/elisp/egison-mode.el"))]) (egg . [(20160330 2047) nil "Emacs Got Git - Emacs interface to Git" tar ((:commit . "cadc5c7fd21142d7ea41732200ab52eac0b96d3f") (:keywords "git" "version control" "release management"))]) (efire . [(20151009 1331) ((circe (1 2))) "Use campfire from Emacs" single ((:commit . "91a644662afb352475efad0b377713656f131e5c") (:url . "https://github.com/capitaomorte/efire") (:keywords "convenience" "tools"))]) (edts . [(20170421 55) ((auto-complete (1 3 1)) (auto-highlight-symbol (1 53)) (dash (2 13)) (erlang (2 4 1)) (f (0 19 0)) (popup (0 4)) (s (1 11 0))) "Erlang Development Tool Suite" tar ((:commit . "3f90f4484ac03f06286b15b0c33ff0e5aeed2bb5"))]) (edn . [(20160215 419) ((cl-lib (0 3)) (emacs (24 1)) (peg (0 6))) "Support for reading and writing the edn data format from elisp" single ((:commit . "be9e32d1b49e35247b263b0243df7cfdc8d413ab") (:url . "https://www.github.com/expez/edn.el") (:keywords "edn" "clojure"))]) (editorconfig-domain-specific . [(20160705 802) ((cl-lib (0 5)) (editorconfig (0 6 0))) "Apply brace style and other \"domain-specific\" EditorConfig properties" single ((:commit . "0142ddff7b3293c82b0a83ad2c3edd6ee1a84ddd") (:url . "https://github.com/lassik/editorconfig-emacs-domain-specific") (:keywords "editorconfig" "util"))]) (editorconfig-custom-majormode . [(20170509 141) ((editorconfig (0 6 0))) "Decide major-mode and mmm-mode from EditorConfig" single ((:commit . "b5350d20b2730a0f029c9e1d651e50cf9a809fa9") (:url . "https://github.com/10sr/editorconfig-custom-major-mode-el") (:keywords "editorconfig" "util"))]) (editorconfig-charset-extras . [(20170508 112) ((editorconfig (0 6 0))) "Extra EditorConfig Charset Support" single ((:commit . "1b8248de9e85bc846af8dfb53b70fdae8900cc69") (:url . "https://github.com/10sr/editorconfig-charset-extras-el") (:keywords "tools"))]) (editorconfig . [(20170607 713) ((cl-lib (0 5))) "EditorConfig Emacs Plugin" tar ((:commit . "1543835ce00412c3cd34a61497af5f68ead250a6") (:url . "https://github.com/editorconfig/editorconfig-emacs#readme"))]) (edit-server-htmlize . [(20130329 1548) ((edit-server (1 9))) "(de)HTMLization hooks for edit-server.el" single ((:commit . "e7f8dadfabe869c77ca241cd6fbd4c52bd908392") (:url . "https://github.com/frobtech/edit-server-htmlize"))]) (edit-server . [(20141231 1358) nil "server that responds to edit requests from Chrome" single ((:commit . "0a50fbb524fe256560f481701c000309c627b9ca") (:url . "https://github.com/stsquad/emacs_chrome"))]) (edit-list . [(20100930 743) nil "edit a single list" single ((:commit . "f460d3f9e208a4e606fe6ded307f1b011916ca71") (:url . "http://mwolson.org/static/dist/elisp/edit-list.el"))]) (edit-indirect-region-latex . [(20161128 2245) ((emacs (24 3)) (ht (2 2)) (edit-indirect (0 1 4))) "Edit LaTeX regions in separate buffers, e.g. for English grammar checks" single ((:commit . "05043f2c0c9838947d3ca4b51b695deb7c47612e") (:url . "https://github.com/niitsuma/edit-indirect-region-latex"))]) (edit-indirect . [(20170310 1002) ((emacs (24 3))) "Edit regions in separate buffers" single ((:commit . "2fc8f382ee12fc8f7202288534258186bdf6068a") (:url . "https://github.com/Fanael/edit-indirect"))]) (edit-color-stamp . [(20130529 1033) ((es-lib (0 2)) (cl-lib (1 0))) "Edit a hex color stamp, using a QT or the internal color picker" tar ((:commit . "32dc1ca5bcf3dcf83fad5e39b55dc5b77becb3d3") (:url . "https://github.com/sabof/edit-color-stamp"))]) (edit-at-point . [(20150716 624) nil "edit(copy,cut..) current things(word,symbol..) under cursor" single ((:commit . "3b800c11685102e1eab62ec71c5fc1589ebb81a7") (:url . "http://github.com/enoson/edit-at-point.el"))]) (edebug-x . [(20130615 2325) nil "Extensions for Edebug" single ((:commit . "a2c2c42553d3bcbd5ac11898554865acbed1bc46") (:url . "https://github.com/ScottyB/edebug-x") (:keywords "extensions"))]) (ede-php-autoload-drupal . [(20170316 1458) ((ede-php-autoload (1 0 0)) (f (0 19 0)) (s (1 7 0))) "Drupal support for ede-php-autoload" single ((:commit . "54a04241d94fabc4f4d16ae4dc8ba4f0c6e3b435") (:keywords "programming" "php" "drupal"))]) (ede-php-autoload-composer-installers . [(20170221 1226) ((ede-php-autoload (1 0 0)) (f (0 19 0)) (s (1 7 0))) "Composer installers support for ede-php-autoload" single ((:commit . "7840439802c7d11ee086bbf465657f3da12f9f66") (:url . "https://github.com/xendk/ede-php-autoload-composer-installers") (:keywords "programming" "php"))]) (ede-php-autoload . [(20170428 933) nil "Simple EDE PHP Project" tar ((:commit . "65e502602dbc623257a820245d41f94cf2e1f07d") (:url . "https://github.com/stevenremot/ede-php-autoload") (:keywords "php" "project" "ede"))]) (ede-compdb . [(20150920 1333) ((ede (1 2)) (semantic (2 2)) (cl-lib (0 4))) "Support for compilation database projects in EDE" single ((:commit . "d6d8466cd62876fc90adeff5875a1a584fd846cd") (:keywords "development" "ninja" "build" "cedet" "ede"))]) (edbi-sqlite . [(20160221 1123) ((emacs (24)) (edbi (0 1 3))) "Open sqlite files with edbi" single ((:commit . "52cb9ca1af7691b592f2cfd2f007847e7a4ccd5f") (:url . "https://github.com/proofit404/edbi-sqlite"))]) (edbi-minor-mode . [(20160706 747) ((edbi (0 1 3))) "Use edbi with regular SQL files." single ((:commit . "566a2141a6eb9d9d5d7e1bd7c251d1c5e8f0d2ec") (:url . "https://github.com/proofit404/edbi-minor-mode"))]) (edbi-django . [(20160221 1123) ((emacs (24)) (edbi (0 1 3)) (f (0 17 1))) "Run edbi with django settings" tar ((:commit . "61c70d3a727ff28c1c7d1eb61af1efba7a268b8f") (:url . "https://github.com/proofit404/edbi-django"))]) (edbi-database-url . [(20160221 1123) ((emacs (24)) (edbi (0 1 3))) "Run edbi with database url" single ((:commit . "d56c580268cd93651998c4c6b1c5558e6b6ca90f") (:url . "https://github.com/proofit404/edbi-database-url"))]) (edbi . [(20160224 1741) ((concurrent (0 3 1)) (ctable (0 1 2)) (epc (0 1 1))) "Emacs Database Interface" tar ((:commit . "6f50aaf4bde75255221f2292c7a4ad3fa9d918c0"))]) (ecukes . [(20170104 1041) ((commander (0 6 1)) (espuds (0 2 2)) (ansi (0 3 0)) (dash (2 2 0)) (s (1 8 0)) (f (0 11 0))) "Cucumber for Emacs." tar ((:commit . "277d25cf8fc9548239599244ab15a2268a55b31b"))]) (eclipse-theme . [(20160430 322) nil "Theme based on Eclipse circa 2010" single ((:commit . "dc54d9312d97210823b922038076e2b1b132eff2") (:url . "https://github.com/abo-abo/eclipse-theme") (:keywords "themes"))]) (eclim . [(20170522 1354) ((dash (2 11 0)) (json (1 2)) (popup (0 5 2)) (s (1 9 0)) (cl-lib (0 5)) (yasnippet (0 10 0))) "An interface to the Eclipse IDE." tar ((:commit . "ebb844d1ebdd7eb347e89063a9b6e9f890a1ff57"))]) (echo-bell . [(20170221 1635) nil "Show visual bell at right in the echo area." single ((:url . "https://www.emacswiki.org/emacs/download/echo-bell.el") (:keywords "echo area" "bell" "ding"))]) (ecb . [(20160101 933) nil "a code browser for Emacs" tar ((:commit . "661edbfcddcdb75331cf28870e6a5fb4ba9ca27f") (:keywords "browser" "code" "programming" "tools"))]) (ebib . [(20170605 1440) ((dash (2 5 0)) (seq (2 15)) (parsebib (2 3)) (emacs (24 4))) "a BibTeX database manager" tar ((:commit . "4624e67ca26cb348063a97a8f59a3fbcbf8a5736") (:keywords "text" "bibtex"))]) (ebf . [(20160211 958) ((dash (2 11 0)) (dash-functional (1 2 0)) (cl-lib (0 5))) "brainfuck language transpiler to Emacs Lisp" tar ((:commit . "4cd9c26354d8be6571354b2954d21fba882e78a2") (:url . "http://github.com/rexim/ebf"))]) (ebal . [(20170520 130) ((emacs (24 4)) (f (0 18 0)) (ido-completing-read+ (3 6))) "Emacs interface to Cabal and Stack" single ((:commit . "2d274ee56d5a61152e846f9a759ebccd70dc8eb1") (:url . "https://github.com/mrkkrp/ebal") (:keywords "convenience" "cabal" "haskell"))]) (easy-repeat . [(20150516 148) ((emacs (24 4))) "Repeat easily" single ((:commit . "060f0e6801c82c40c06961dc0528a00e18947a8c") (:url . "https://github.com/xuchunyang/easy-repeat.el") (:keywords "repeat" "convenience"))]) (easy-lentic . [(20170309 2143) ((lentic (0 10)) (cl-lib (0 5))) "Write org style comment with lentic" single ((:commit . "d2b600cc3bd3166c3e4543435070b511ae9bf148") (:url . "https://github.com/tumashu/easy-lentic") (:keywords "convenience"))]) (easy-kill-extras . [(20161028 504) ((easy-kill (0 9 4))) "Extra functions for easy-kill." tar ((:commit . "e60a74d7121eff7c263098aea2901cc05a5f6acd") (:url . "https://github.com/knu/easy-kill-extras.el") (:keywords "killing" "convenience"))]) (easy-kill . [(20151030 2229) ((emacs (24)) (cl-lib (0 5))) "kill & mark things easily" single ((:commit . "e2b667f651a3531164d24ea4cbcd8c34fba0e17f") (:url . "https://github.com/leoliu/easy-kill") (:keywords "killing" "convenience"))]) (easy-hugo . [(20170531 216) ((emacs (24 4))) "Write blogs made with hugo by markdown or org-mode" single ((:commit . "451a37fb2e1f36d85a85973d4c41c7a249263f62") (:url . "https://github.com/masasam/emacs-easy-hugo"))]) (easy-escape . [(20161209 744) nil "Improve readability of escape characters in regular expressions" single ((:commit . "63fa5fcf9a53b7d3c1e872081e65afad5a722ba8") (:url . "https://github.com/cpitclaudel/easy-escape") (:keywords "convenience" "lisp" "tools"))]) (easy-after-load . [(20121224 1849) nil "eval-after-load for all files in a directory" single ((:commit . "f8e6e10725d80d3b7e8b1ca966de6190089d8f12") (:url . "https://github.com/pd/easy-after-load"))]) (e2wm-term . [(20141009 608) ((e2wm (1 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perspective of e2wm.el for work in terminal" single ((:commit . "65b5ac88043d5c4048920a048f3599904ca55981") (:url . "https://github.com/aki2o/e2wm-term") (:keywords "tools" "window manager"))]) (e2wm-sww . [(20140524 158) ((e2wm (1 2))) "Plugin of e2wm.el to switch plugin quickly" single ((:commit . "1063f9854bd34db5ac771cd1036cecc89834729d") (:url . "https://github.com/aki2o/e2wm-sww") (:keywords "tools" "window manager"))]) (e2wm-svg-clock . [(20150106 506) ((e2wm (20130225 1602)) (svg-clock (0 4))) "e2wm plugin for svg-clock" single ((:commit . "d425925e3afffcbe2ff74edc80b714e4319d4c94") (:url . "https://github.com/myuhe/e2wm-svg-clock.el") (:keywords "convenience" "e2wm"))]) (e2wm-pkgex4pl . [(20140525 347) ((e2wm (1 2)) (plsense-direx (0 2 0))) "Plugin of e2wm.el for package explorer of Perl" single ((:commit . "7ea994450727190c4f3cb46cb429ba41b692ecc0") (:url . "https://github.com/aki2o/e2wm-pkgex4pl") (:keywords "tools" "window manager" "perl"))]) (e2wm-direx . [(20170509 601) ((e2wm (1 2)) (direx (0 1 -3))) "Plugin of e2wm.el for direx.el" single ((:commit . "b47f19d15436cc28233a812a1150689f61d11046") (:url . "https://github.com/aki2o/e2wm-direx") (:keywords "tools" "window manager" "convenience"))]) (e2wm-bookmark . [(20151122 2121) ((e2wm (1 2))) "Bookmark plugin for e2wm.el" single ((:commit . "bad816b6d8049984d69bcd277b7d325fb84d55eb") (:keywords "convenience"))]) (e2wm-R . [(20151230 126) ((e2wm (1 3)) (inlineR (1 0)) (ess (15 3))) "some e2wm plugin and perspective for GNU R" single ((:commit . "4350601ee1a96bf89777b3f09f1b79b88e2e6e4d") (:url . "https://github.com/myuhe/e2wm-R.el") (:keywords "convenience" "e2wm"))]) (e2wm . [(20170214 1636) ((window-layout (1 4))) "simple window manager for emacs" tar ((:commit . "4353d3394c77a49f8f0291c239858c8c5e877549") (:keywords "tools" "window manager"))]) (e2ansi . [(20150220 1513) nil "Syntax highlighting support for `less', powered by Emacs." tar ((:commit . "bd047d3d6ad02a0679582d5786afe9aee656da90") (:url . "https://github.com/Lindydancer/e2ansi") (:keywords "faces" "languages"))]) (dynamic-ruler . [(20160602 108) nil "Displays a dynamic ruler at point." single ((:commit . "c9c0de6fe5721f06b50e01d9b4684b519c71b367") (:url . "http://rocher.github.io/dynamic-ruler") (:keywords "ruler" "tools" "convenience"))]) (dynamic-fonts . [(20140731 526) ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Set faces based on available fonts" single ((:commit . "ab0c65accbdb59acaed5b263327e22ec019b3e82") (:url . "http://github.com/rolandwalker/dynamic-fonts") (:keywords "faces" "frames"))]) (dylan-mode . [(20160405 1514) nil "Major mode for editing Dylan programs." tar ((:commit . "7e8ba16bf125f0066d3e1caeefaba94a6d32ac72"))]) (dyalog-mode . [(20170519 704) ((cl-lib (0 2)) (emacs (24))) "Major mode for editing Dyalog APL source code" tar ((:url . "https://bitbucket.org/harsman/dyalog-mode/") (:keywords "languages"))]) (duplicate-thing . [(20120515 948) nil "Duplicate current line & selection" single ((:commit . "f6ed0232fd0653621afe450d53775a32a9d0e328") (:keywords "command" "duplicate" "line" "selection"))]) (dummyparens . [(20141009 324) nil "parenthesis auto-pairing and wrapping" single ((:commit . "9798ef1d0eaa24e4fe66f8aa6022a8c62714cc89") (:url . "https://github.com/snosov1/dummyparens") (:keywords "dummyparens" "auto-pair" "wrapping"))]) (dummy-h-mode . [(20160603 417) nil "switch major mode to c-/c++-/objc-mode on .h file" single ((:keywords "c-mode" "c++-mode" "objc-mode"))]) (dumb-jump . [(20170627 1309) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." single ((:commit . "0328d922da4b1bbbb8f41848585c920608f6e9d3") (:keywords "programming"))]) (ducpel . [(20140702 454) ((cl-lib (0 5))) "Logic game with sokoban elements" tar ((:commit . "b53b935ab95c02b82ccf38f63c89e39e99477a55") (:url . "https://github.com/alezost/ducpel") (:keywords "games"))]) (dts-mode . [(20161103 523) nil "Major mode for Devicetree source code" single ((:commit . "9ee0854446dcc6c53d2b8d2941051768dba50344") (:keywords "languages"))]) (dtrt-indent . [(20160620 329) nil "Adapt to foreign indentation offsets" tar ((:commit . "a54871bedadabede505b3913ee1039f5ab36cad2") (:keywords "convenience" "files" "languages" "c"))]) (dtrace-script-mode . [(20150213 2223) nil "DTrace code editing commands for Emacs" single ((:commit . "801af1ef16075d31a19830ebb8404bbf3a322f10"))]) (dsvn . [(20130120 1257) nil "Subversion interface" single ((:keywords "docs"))]) (drupal-spell . [(20130520 955) nil "Aspell extra dictionary for Drupal" tar ((:commit . "a69f5e3b62c4c0da74ce26c1d00d5b8f7395e4ae") (:url . "https://github.com/arnested/drupal-spell") (:keywords "wp"))]) (drupal-mode . [(20170112 1136) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar ((:commit . "9d5808972f344a09dcf665d5113ae81e39ac1051") (:url . "https://github.com/arnested/drupal-mode") (:keywords "programming" "php" "drupal"))]) (dropdown-list . [(20120329 936) nil "Drop-down menu interface" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/download/dropdown-list.el") (:keywords "menu" "convenience" "dropdown"))]) (dropbox . [(20170502 1722) ((json (1 2)) (oauth (1 0 3))) "Emacs backend for dropbox" single ((:commit . "d85bbf6caa4203d6088ea29f5c057c1e9bcacd85") (:keywords "dropbox"))]) (drone . [(20161106 118) nil "Launch your drone test suite if drone.yml is present" single ((:commit . "1d4ee037ad3208847a4235426edf0c4a3e7b1899") (:url . "https://github.com/olymk2/emacs-drone") (:keywords "drone" "tests" "ci"))]) (drill-instructor-AZIK-force . [(20151122 2114) ((popup (0 5))) "Support AZIK input" tar ((:commit . "008cea202dc31d7d6fb1e7d8e6334d516403b7a5"))]) (drawille . [(20160418 1138) ((cl-lib (0 5))) "Drawille implementation in elisp" tar ((:commit . "d914845725719d8293e2f0dea3c9c7e0a1e0e62a") (:url . "https://github.com/sshbio/elisp-drawille") (:keywords "graphics"))]) (drag-stuff . [(20161107 2349) nil "Drag stuff (lines, words, region, etc...) around" tar ((:commit . "d49fe376d24f0f8ac5ade67b6d7fccc2487c81db"))]) (draft-mode . [(20140609 756) nil "Rough drafting for Emacs." single ((:commit . "4779fb32daf53746459da2def7e08004492d4f18") (:url . "https://github.com/gaudecker/draft-mode") (:keywords "draft" "drafting"))]) (dracula-theme . [(20170412 845) ((emacs (24))) "Dracula Theme" single ((:commit . "62df5de68c73d34faaa0191a92ce3ebce589bf24") (:url . "https://github.com/dracula/emacs"))]) (dr-racket-like-unicode . [(20161021 511) ((emacs (24 1))) "DrRacket-style unicode input" single ((:commit . "4953f1c8a68472e157a0dcd0a7e35a4ec2577133") (:keywords "i18n" "tools"))]) (dpaste_de . [(20131015 525) ((web (0 3 7))) "Emacs mode to paste to dpaste.de" single ((:commit . "f0c39e8864299f735642f7d9fa490689398ce39d") (:keywords "pastebin"))]) (dpaste . [(20160303 1312) nil "Emacs integration for dpaste.com" single ((:commit . "5ebabb466a6ae70882549855b6b2194fc32189f8") (:keywords "paste" "pastie" "pastebin" "dpaste" "python"))]) (downplay-mode . [(20151125 1209) nil "focus attention on a region of the buffer" single ((:commit . "4a2c3addc73c8ca3816345c3c11c08af265baedb") (:url . "https://github.com/tobias/downplay-mode/"))]) (download-region . [(20160430 1116) ((cl-lib (0 3))) "Simple in-buffer download manager" single ((:commit . "eb9e557529a73b4cfc8281c70dd0d95db333fffa") (:url . "http://hins11.yu-yake.com/"))]) (dot-mode . [(20161025 1037) ((emacs (24 3))) "minor mode to repeat typing or commands" single ((:commit . "cde2d593cb3f8e31db8778e434d3a4550707d2cc") (:url . "https://github.com/wyrickre/dot-mode") (:keywords "convenience"))]) (doremi-mac . [(20170221 1633) nil "A macro for defining Do Re Mi commands." single ((:url . "https://www.emacswiki.org/emacs/download/doremi-mac.el") (:keywords "extensions" "convenience" "keys" "repeat" "cycle"))]) (doremi-frm . [(20170221 1632) ((doremi (0)) (faces+ (0)) (frame-fns (0)) (hexrgb (0))) "Incrementally adjust face attributes and frame parameters." single ((:url . "https://www.emacswiki.org/emacs/download/doremi-frm.el") (:keywords "frames" "extensions" "convenience" "keys" "repeat" "cycle"))]) (doremi-cmd . [(20170221 1631) ((doremi (0))) "Miscellaneous Do Re Mi commands" single ((:url . "https://www.emacswiki.org/emacs/download/doremi-cmd.el") (:keywords "keys" "cycle" "repeat"))]) (doremi . [(20170221 1634) nil "Do Re Mi: Incremental change using arrow keys or mouse wheel." single ((:url . "https://www.emacswiki.org/emacs/download/doremi.el") (:keywords "keys" "cycle" "repeat" "higher-order"))]) (doom-themes . [(20170630 922) ((emacs (24 4)) (all-the-icons (1 0 0)) (cl-lib (0 5))) "an opinionated pack of modern color-themes" tar ((:commit . "dc9c0b938ea0bc7a30a79fb74f2e66f1fb2128be") (:url . "https://github.com/hlissner/emacs-doom-theme") (:keywords "dark" "blue" "atom" "one" "theme" "neotree" "icons" "faces"))]) (doom . [(20160121 722) ((cl-lib (0 5))) "DOM implementation and manipulation library" single ((:commit . "5e2d3f54e5b84eaa533cbdb6cf17b1b6009f0730") (:url . "http://www.github.com/toroidal-code/doom.el/") (:keywords "xml" "doom"))]) (dollaro . [(20151123 502) ((s (1 6 0))) "simple text templates" single ((:commit . "500127f0172ac7a1eec627e026b59136580a74ac") (:keywords "tools" "convenience"))]) (dokuwiki-mode . [(20170223 501) nil "Major mode for DokuWiki document" single ((:commit . "e4e116f6fcc373e3f5937c1a7daa5c2c9c6d3fa1") (:url . "https://github.com/kai2nenobu/emacs-dokuwiki-mode") (:keywords "hypermedia" "text" "dokuwiki"))]) (dokuwiki . [(20170213 122) ((emacs (24 3)) (xml-rpc (1 6 8))) "Edit Remote DokuWiki Pages Using XML-RPC" single ((:commit . "a78289d99068ec3dfb4945877c32751e789d099d") (:url . "http://www.github.com/accidentalrebel/emacs-dokuwiki") (:keywords "convenience"))]) (dockerfile-mode . [(20170418 1024) nil "Major mode for editing Docker's Dockerfiles" single ((:commit . "3c6bc90360a2df53caad1721ee4c8285e2e22369"))]) (docker-tramp . [(20170206 1925) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar ((:commit . "8e2b671eff7a81af43b76d9dfcf94ddaa8333a23") (:url . "https://github.com/emacs-pe/docker-tramp.el") (:keywords "docker" "convenience"))]) (docker-api . [(20160525 20) ((dash (2 12 1)) (request (0 2 0)) (s (1 11 0))) "Emacs interface to the Docker API" tar ((:commit . "206144346b7fa4165223349cfeb64a75d47ddd1b") (:url . "https://github.com/Silex/docker-api.el"))]) (docker . [(20170601 1345) ((emacs (24 4)) (dash (2 12 1)) (docker-tramp (0 1)) (magit-popup (2 6 0)) (s (1 11 0)) (tablist (0 70)) (json-mode (1 7 0))) "Emacs interface to Docker" tar ((:commit . "d3bdb09af10c7aa466b25e0c65a3d21fdf44514e") (:url . "https://github.com/Silex/docker.el") (:keywords "filename" "convenience"))]) (docean . [(20150927 1118) ((emacs (24)) (cl-lib (0 5)) (request (0 2 0))) "Interact with DigitalOcean from Emacs." single ((:commit . "dcc296782b08531b768d3cf851cc7959ec486bf1") (:url . "https://github.com/emacs-pe/docean.el") (:keywords "convenience"))]) (docbook-snippets . [(20150714 925) ((yasnippet (0 8 0))) "Yasnippets for DocBook" tar ((:commit . "b06297fdec039a541aaa6312cb328a11062cfab4") (:url . "https://github.com/jhradilek/emacs-docbook-snippets") (:keywords "snippets" "docbook"))]) (dna-mode . [(20130821 1105) nil "a major mode for editing dna sequences" tar ((:commit . "c3fed6b9d98deafbc1525d445a920b969120fe6a") (:url . "http://www.mahalito.net/~harley/elisp/dna-mode.el") (:keywords "dna" "emacs" "editing"))]) (dmenu . [(20160228 627) ((cl-lib (0 5))) "simulate the dmenu command line program" single ((:commit . "8dffd614e37d3971f989cbce5849d04d84ee8c76") (:keywords "convenience" "usability"))]) (dkmisc . [(20131110 315) ((emacs (24 1))) "Miscellaneous functions required by dk* packages." tar ((:commit . "fe3d49c6f8322b6f89466361acd97585bdfe0608"))]) (dklrt . [(20131110 541) ((dkmisc (0 50)) (ledger-mode (20130908 1357)) (emacs (24 1))) "Ledger Recurring Transactions." tar ((:commit . "5d6c99f8018335256ab934b4c1049708ae2d48ba"))]) (dkl . [(20161004 1707) nil "Display keyboard layout." tar ((:commit . "6b4584f86037bda3383960c678d51f340229fb91") (:url . "https://github.com/flexibeast/dkl") (:keywords "input" "keyboard" "layout"))]) (dkdo . [(20131110 319) ((dkmisc (0 50)) (emacs (24 1))) "Do List major mode based on org-mode." tar ((:commit . "fd6bb105e8331fafb6385c5238c988c4c5bbe2da"))]) (django-theme . [(20131022 202) nil "Custom face theme for Emacs" single ((:commit . "86c8142b3eb1addd94a43aa6f1d98dab06401af0") (:url . "http://github/anrzejsliwa/django-theme"))]) (django-snippets . [(20131229 811) ((yasnippet (0 8 0))) "Yasnippets for django" tar ((:commit . "561a3a7359a1526b67688239cdee67e0425b6a01") (:url . "https://github.com/myfreeweb/django-mode"))]) (django-mode . [(20170522 14) ((projectile (0)) (s (0)) (helm-make (0))) "Major mode for Django web framework." tar ((:commit . "a71b8dd984e7f724b8321246e5c353a4ae5c986e") (:keywords "languages"))]) (django-manage . [(20160818 1912) ((hydra (0 13 2))) "Django minor mode for commanding manage.py" single ((:commit . "876fb2cb627d465adfdc905841279784bcdd7ee8") (:keywords "languages"))]) (dizzee . [(20111009 616) nil "A more pleasant way to manage your project's subprocesses in Emacs." tar ((:commit . "37629f390afb8da03ef0ce81c2b3caff660e12f6"))]) (dix-evil . [(20170105 623) ((dix (0 3 0)) (evil (1 0 7))) "optional evil-integration with dix.el" single ((:commit . "bcc7fd7aef5d25171978c386c620e09d0ba8d2f8") (:url . "http://wiki.apertium.org/wiki/Emacs") (:keywords "languages"))]) (dix . [(20170224 615) ((cl-lib (0 5))) "minor mode for editing Apertium XML dictionary files" tar ((:commit . "bcc7fd7aef5d25171978c386c620e09d0ba8d2f8") (:url . "http://wiki.apertium.org/wiki/Emacs") (:keywords "languages"))]) (ditz-mode . [(20150729 240) nil "Emacs interface to Ditz issue tracking system" single ((:keywords "tools"))]) (distinguished-theme . [(20151216 1215) nil "A dark and elegant theme for emacs." single ((:commit . "9b1d25ac59465a5016d187ea84b7614c95a29b3b") (:url . "https://github.com/Lokaltog/distinguished-theme"))]) (distel-completion-lib . [(20160816 406) nil "Completion library for Erlang/Distel" single ((:commit . "2ba4eea51cecfa75cf62f58180460ee9ff43131f") (:url . "github.com/sebastiw/distel-completion") (:keywords "erlang" "distel" "completion"))]) (display-theme . [(20140115 756) ((emacs (24))) "display current theme(s) at mode-line" single ((:commit . "b180b3be7a74ae4799a14e7e4bc2fe10e3ff7a15") (:url . "https://github.com/kawabata/emacs-display-theme/") (:keywords "tools"))]) (dispass . [(20140202 731) ((dash (1 0 0))) "Emacs wrapper for DisPass" single ((:commit . "b6e8f89040ebaaf0e7609b04bc27a8979f0ae861") (:url . "http://projects.ryuslash.org/dispass.el/") (:keywords "processes"))]) (disk . [(20081128 706) nil "simplified find-file, revert-file, save-buffer interface" single ((:url . "http://www.emacswiki.org/emacs/DiskKey") (:keywords "convenience"))]) (discover-my-major . [(20170113 2306) ((makey (0 2))) "Discover key bindings and their meaning for the current Emacs major mode" single ((:commit . "ac83b24b5130eb0944f820736012df0924cce528") (:url . "https://github.com/steckerhalter/discover-my-major") (:keywords "discover" "help" "major-mode" "keys"))]) (discover-js2-refactor . [(20140129 752) ((js2-refactor (20131221 501)) (discover (20140103 1339))) "Adds discover context menu for js2-refactor" single ((:commit . "3812abf61f39f3e73a9f3daefa6fed4f21a429ba") (:keywords "js2-refactor" "discover"))]) (discover-clj-refactor . [(20150328 759) ((clj-refactor (0 14 0)) (discover (0 3))) "Adds discover context menu for clj-refactor" single ((:commit . "3fbd5c1162739e606d7cf5d4f5d7426547d99647") (:keywords "clj-refactor" "discover" "convenience"))]) (discover . [(20140103 1339) ((makey (0 3))) "discover more of Emacs" single ((:commit . "7b0044bbb3b3bd5d811fdfb0f5ac6ec8de1239df"))]) (discourse . [(20160911 119) ((cl-lib (0 5)) (request (0 2)) (s (1 11 0))) "discourse api" single ((:commit . "a86c7e608851e186fe12e892a573994f08c8e65e") (:url . "https://github.com/lujun9972/discourse-api") (:keywords "lisp" "discourse"))]) (disaster . [(20170507 1626) nil "Disassemble C/C++ code under cursor in Emacs" single ((:commit . "3bab3c0db29c6d5484ab8aacbf29490e3aa2d713") (:url . "https://github.com/jart/disaster") (:keywords "tools"))]) (disable-mouse . [(20160630 1903) nil "Disable mouse commands globally" single ((:commit . "3b8681b099eb0c3af6078fa0e479d0d0ce6686ad") (:url . "https://github.com/purcell/disable-mouse") (:keywords "mouse"))]) (dirtree-prosjekt . [(20140129 104) ((prosjekt (0 3)) (dirtree (0 1))) "dirtree integration for prosjekt." single ((:commit . "a864a8be5842223043702395f311e3350c28e9db") (:url . "https://github.com/abingham/prosjekt"))]) (dirtree . [(20140129 32) ((tree-mode (1 1 1 1)) (windata (0))) "Directory tree views" single ((:commit . "ba55f1e716e386fdd37cb8e7f48616e405dc7251"))]) (direx-grep . [(20140515 806) ((direx (0 1 -3))) "Grep node of direx.el using incremental search like anything.el/helm.el" single ((:commit . "1109a512a80b2673a70b18b8568514049017faad") (:url . "https://github.com/aki2o/direx-grep") (:keywords "convenience"))]) (direx . [(20170422 627) nil "Simple Directory Explorer" tar ((:commit . "a79bfdb5980cf6ed7bfb3b41ddc471a7b6c0ede4") (:keywords "convenience"))]) (direnv . [(20170622 1128) ((emacs (24 4)) (dash (2 13 0)) (with-editor (2 5 10))) "direnv support for emacs" single ((:commit . "3c632dd1fdf0ad1edb6d9b0a4a09cdbb420c27aa") (:url . "https://github.com/wbolster/emacs-direnv") (:keywords "direnv" "environment"))]) (diredful . [(20160529 1317) nil "colorful file names in dired buffers" single ((:commit . "c08e163d9d6c62f7b07e94d54c96c2e364e67e0e") (:url . "https://github.com/thamer/diredful") (:keywords "dired" "colors" "extension" "widget"))]) (dired-toggle-sudo . [(20151109 206) nil "Browse directory with sudo privileges." single ((:commit . "02449dbda4e168f99fe5352c9628df5d39e11483") (:keywords "emacs" "dired"))]) (dired-toggle . [(20140907 1349) nil "provide a simple way to toggle dired buffer for current directory" single ((:commit . "84efb9ec9c327e4da53cdb7cda5b51dcd0ede0e5") (:url . "https://github.com/fasheng/dired-toggle") (:keywords "dired" "toggle"))]) (dired-subtree . [(20160920 130) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Insert subdirectories in a tree-like fashion" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-sort-menu . [(20130824 507) nil "provide menu/dialogue for dired sort options" single ((:url . "http://centaur.maths.qmw.ac.uk/Emacs/") (:keywords "dired" "sort" "menu" "dialogue"))]) (dired-sort-menu+ . [(20170221 1630) ((dired-sort-menu (0))) "Extensions to `dired-sort-menu.el'" single ((:url . "https://www.emacswiki.org/emacs/download/dired-sort-menu%2b.el") (:keywords "directories" "diredp" "dired"))]) (dired-sort . [(20090208 2038) nil "Sort files in dired." single ((:url . "http://www.emacswiki.org/emacs/download/dired-sort.el") (:keywords "dired" "sort"))]) (dired-single . [(20151230 1758) nil "Reuse the current dired buffer to visit a directory" single ((:commit . "71ffc5decd048d3c420d9cdd5ac66e72ca18e934") (:keywords "dired" "reuse" "buffer"))]) (dired-ranger . [(20160924 335) ((dash (2 7 0)) (dired-hacks-utils (0 0 1))) "Implementation of useful ranger features for dired" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-rainbow . [(20170531 816) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Extended file highlighting according to its type" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-quick-sort . [(20161208 1312) ((hydra (0 13 0))) "Persistent quick sorting of dired buffers in various ways." single ((:commit . "1845f978d313f750a5b70b832457ed803c4ffbdb") (:url . "https://gitlab.com/xuhdev/dired-quick-sort#dired-quick-sort") (:keywords "convenience" "files"))]) (dired-open . [(20160205 1213) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "Open files from dired using using custom actions" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-narrow . [(20170309 329) ((dash (2 7 0)) (dired-hacks-utils (0 0 1))) "Live-narrowing of search results for dired" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-launch . [(20170409 1923) nil "Use dired as a launcher" single ((:commit . "9dea31574dcf006d5247b488a1942faaac434362") (:url . "https://github.com/thomp/dired-launch") (:keywords "dired" "launch"))]) (dired-k . [(20170313 803) ((emacs (24 3))) "highlight dired buffer by file size, modified time, git status" tar ((:commit . "c50e8f73358060a448bff66db2d330b52bbeffc1") (:url . "https://github.com/syohex/emacs-dired-k"))]) (dired-imenu . [(20140109 810) nil "imenu binding for dired mode" single ((:commit . "610e21fe0988c85931d34894d3eee2442c79ab0a") (:url . "https://github.com/DamienCassou/dired-imenu") (:keywords "dired" "imenu"))]) (dired-icon . [(20170222 2126) ((emacs (24 3))) "A minor mode to display a list of associated icons in dired buffers." tar ((:commit . "f60e10757a5011235b519231ad35974ff25963ed") (:url . "https://gitlab.com/xuhdev/dired-icon") (:keywords "dired" "files"))]) (dired-hide-dotfiles . [(20170314 1339) ((emacs (25 1))) "Hide dotfiles in dired" single ((:commit . "b715f643ec805b3b8aca334595e6589320f04a49") (:url . "https://github.com/mattiasb/dired-hide-dotfiles") (:keywords "files"))]) (dired-hacks-utils . [(20160527 1436) ((dash (2 5 0))) "Utilities and helpers for dired-hacks collection" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-filter . [(20161009 530) ((dash (2 10 0)) (dired-hacks-utils (0 0 1)) (f (0 17 0)) (cl-lib (0 3))) "Ibuffer-like filtering for dired" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-filetype-face . [(20160822 655) nil "Set different faces for different filetypes in dired" single ((:commit . "72b3c88e8b82b3f8681d940757f7b2992bd80793") (:url . "https://github.com/jixiuf/dired-filetype-face") (:keywords "dired" "filetype" "face"))]) (dired-fdclone . [(20170413 747) nil "dired functions and settings to mimic FDclone" single ((:commit . "f55b69e5cd1d45699a0f37468ac8e20fa7a0cff6") (:url . "https://github.com/knu/dired-fdclone.el") (:keywords "unix" "directories" "dired"))]) (dired-explorer . [(20170614 1956) ((cl-lib (0 5))) "minor-mode provides Explorer like select file at dired." single ((:commit . "b02b08d73821512853c6a14113c794dded1df75a") (:keywords "dired" "explorer"))]) (dired-efap . [(20140122 856) nil "Edit Filename At Point in a dired buffer" single ((:commit . "624757b2e54d9a13e2183118d6c113e37684b90c") (:url . "https://github.com/juan-leon/dired-efap") (:keywords "dired" "environment" "files" "renaming"))]) (dired-dups . [(20130527 1425) nil "Find duplicate files and display them in a dired buffer" single ((:commit . "694ad128c822c59348ced16c4a0c1356d43da47a") (:url . "https://github.com/vapniks/dired-dups") (:keywords "unix"))]) (dired-details . [(20130824 458) nil "make file details hide-able in dired" single ((:keywords "dired" "hide"))]) (dired-details+ . [(20170221 1629) ((dired-details (0))) "Enhancements to library `dired-details+.el'." single ((:url . "https://www.emacswiki.org/emacs/download/dired-details%2b.el") (:keywords "dired" "frames"))]) (dired-avfs . [(20161012 404) ((dash (2 5 0)) (dired-hacks-utils (0 0 1))) "AVFS support for dired" single ((:commit . "eda68006ce73bbf6b9b995bfd70d08bec8cade36") (:keywords "files"))]) (dired-atool . [(20160208 433) ((emacs (24))) "Pack/unpack files with atool on dired." single ((:commit . "f188ccf6092330dbbefc0e75aa4fad3e7258749d") (:url . "https://github.com/HKey/dired-atool") (:keywords "files"))]) (dired+ . [(20170630 752) nil "Extensions to Dired." single ((:url . "https://www.emacswiki.org/emacs/download/dired%2b.el") (:keywords "unix" "mouse" "directories" "diredp" "dired"))]) (dircmp . [(20141204 956) nil "Compare and sync directories." tar ((:commit . "558ee0b601c2de9d247612085aafe2926f56a09f") (:url . "https://github.com/matthewlmcclure/dircmp-mode") (:keywords "unix" "tools"))]) (dionysos . [(20160810 356) ((libmpdee (2 1 0)) (alert (1 2)) (s (1 11 0)) (dash (2 12 1)) (pkg-info (0 5 0)) (cl-lib (0 5))) "Dionysos, a music player for Emacs" tar ((:commit . "0aac21caadabc5a7f09e18a9dcb02f3dec26588b") (:url . "https://github.com/nlamirault/dionysos") (:keywords "music"))]) (diminish . [(20170419 1036) nil "Diminished modes are minor modes with no modeline display" single ((:commit . "d5c61a14e1a5590a65f83c099a5bd42fcadff24d") (:url . "https://github.com/myrjola/diminish.el") (:keywords "extensions" "diminish" "minor" "codeprose"))]) (dim-autoload . [(20161023 1329) nil "dim or hide autoload cookie lines" single ((:commit . "c91edab065f413910354940742b35bdffeb52029") (:url . "https://github.com/tarsius/dim-autoload") (:keywords "convenience"))]) (dim . [(20160818 249) ((emacs (24 4))) "Change mode-line names of major/minor modes" single ((:commit . "4b00587dfaabc1f2393b9a9f9993996c288d4445") (:url . "https://github.com/alezost/dim.el") (:keywords "convenience"))]) (digit-groups . [(20160816 1926) ((dash (2 11 0))) "Highlight place-value positions in numbers" single ((:url . "http://bitbucket.com/adamsmd/digit-groups"))]) (digistar-mode . [(20160218 1155) nil "major mode for Digistar scripts" single ((:commit . "15288b1e1a04b79b5ab7097fdd26d48b2ff41076") (:keywords "languages"))]) (diffview . [(20150928 2211) nil "View diffs in side-by-side format" single ((:commit . "031b70913e755c5e55222680f80185032a7d1728") (:url . "https://github.com/mgalgs/diffview-mode") (:keywords "convenience" "diff"))]) (diffscuss-mode . [(20141014 1657) nil "Major mode for diffscuss files." single ((:commit . "e0aacd8b3d9f886f27222c1397f0655e849e0af7") (:keywords "tools"))]) (diff-hl . [(20170617 1540) ((cl-lib (0 2)) (emacs (24 3))) "Highlight uncommitted changes using VC" tar ((:commit . "09b9354a8e703d24c132ee08d6c92eee1421fbd9") (:url . "https://github.com/dgutov/diff-hl") (:keywords "vc" "diff"))]) (dictionary . [(20140717 2029) ((connection (1 10)) (link (1 10))) "Client for rfc2229 dictionary servers" single ((:commit . "a23b8f4a422d0de69a006ed010eff5795319db98") (:keywords "interface" "dictionary"))]) (dictcc . [(20170318 1232) ((emacs (24)) (cl-lib (0 5)) (s (1 0)) (dash (2 0)) (helm (1 0))) "Look up translations on dict.cc" single ((:commit . "24fb40d0822f97c3d796ae81cb6684cd97263248") (:keywords "convenience"))]) (dic-lookup-w3m . [(20170427 732) ((w3m (20120723 324)) (stem (20120826))) "look up dictionaries on the Internet" tar ((:keywords "emacs-w3m" "w3m" "dictionary"))]) (dfmt . [(20160911 228) nil "Emacs Interface to D indenting/formatting tool dfmt." single ((:commit . "f07512fc8555ecd592d8a44722baf922f9f77aaf") (:url . "https://github.com/qsimpleq/elisp-dfmt") (:keywords "tools" "convenience" "languages" "dlang"))]) (devdocs . [(20160607 540) nil "Launch DevDocs search" single ((:commit . "1bff4bd406fc71199d9dcac503269f7aa8fcebe6") (:url . "https://github.com/xuchunyang/DevDocs.el"))]) (desktop-registry . [(20140119 1343) nil "Keep a central registry of desktop files" single ((:commit . "244c2e7f9f0a1050aa8a47ad0b38f4e4584682dd") (:url . "http://projects.ryuslash.org/desktop-registry/") (:keywords "convenience"))]) (desktop+ . [(20170107 1332) ((emacs (24 4)) (dash (2 11 0)) (f (0 17 2))) "Handle special buffers when saving & restoring sessions" single ((:commit . "88055cee526a000056201898499cebbd35e3ea76") (:url . "https://github.com/ffevotte/desktop-plus"))]) (describe-number . [(20151031 1755) ((yabin (1 1))) "Describe arbitrarily large number at point." single ((:commit . "40618345a37831804b29589849a785ef5aa5ac24") (:url . "https://github.com/netromdk/describe-number") (:keywords "describe" "value" "help"))]) (demo-it . [(20170628 1503) nil "Create demonstrations" tar ((:commit . "1e8b42ff6479fa541eeec5699b4727af136d40da") (:keywords "demonstration" "presentation" "test"))]) (demangle-mode . [(20170526 1508) ((cl-lib (0 1)) (emacs (24))) "Automatically demangle C++ symbols" single ((:commit . "d3fce31974b1c9f659da427f3c69c2e6168df508") (:url . "https://github.com/liblit/demangle-mode") (:keywords "c" "tools"))]) (delim-kill . [(20100516 2320) nil "Kill text between delimiters." single ((:commit . "1dbe47344f2d2cbc8c54beedf0cf0bf10fd203c1") (:url . "http://github.com/thomas11/delim-kill/tree/master") (:keywords "convenience" "languages"))]) (deft . [(20160610 1739) nil "quickly browse, filter, and edit plain text notes" single ((:commit . "59173ba0c048ead287dd1171a5a52ce53fd9a0cb") (:url . "http://jblevins.org/projects/deft/") (:keywords "plain text" "notes" "simplenote" "notational velocity"))]) (defproject . [(20151201 1419) ((emacs (24))) "Manager dir-locals and project specific variables" single ((:commit . "674d48a5e34cb4bba76faa38ee901322ec649086") (:url . "https://github.com/kotfic/defproject") (:keywords "convenience"))]) (define-word . [(20150709 1223) ((emacs (24 1))) "display the definition of word at point." single ((:commit . "64d98b7748686c51261fe6e8d42078c6284feb13") (:url . "https://github.com/abo-abo/define-word") (:keywords "dictionary" "convenience"))]) (deferred . [(20170531 2135) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" single ((:commit . "d012a1ab50edcc2c44e3e49006f054dbff47cb6c") (:url . "https://github.com/kiwanami/emacs-deferred") (:keywords "deferred" "async"))]) (default-text-scale . [(20150227 956) nil "Easily adjust the font size in all frames" single ((:commit . "c680861a459e5a1b4cea0da1b99d2a22f08fdcd2") (:keywords "frames" "faces"))]) (dedukti-mode . [(20170225 722) nil "Major mode for Dedukti files" single ((:commit . "49d7a83d3e966e0913e3969000701d4159dfab2f"))]) (dedicated . [(20090428 1231) nil "A very simple minor mode for dedicated buffers" single ((:commit . "8275fb672f9cc4ba6682ebda0ef91db827e32992") (:keywords "dedicated" "buffer"))]) (decl . [(20170314 23) ((dash (2 5 0)) (emacs (24 3)) (cl-lib (0 3))) "Library for organizing code declaratively" single ((:commit . "b25825de88289fab5212dfd6d18874ca2748123f") (:url . "https://github.com/preetpalS/decl.el"))]) (decide . [(20170702 1617) nil "rolling dice and other random things" single ((:commit . "90133687118c236142b8110571c463304b3192f9"))]) (debug-print . [(20140125 1619) ((emacs (24))) "A nice printf debugging environment by the way Gauche do" single ((:commit . "d817fd9ea2d3f8d2c1ace4d8af155684f3a99dc5") (:url . "https://github.com/kenoss/debug-print") (:keywords "extensions" "lisp" "tools" "maint"))]) (debpaste . [(20160113 1547) ((xml-rpc (1 6 7))) "Interface for getting/posting/deleting pastes from paste.debian.net" single ((:commit . "6f2a400665062468ebd03a2ce1de2a73d9084958") (:url . "http://github.com/alezost/debpaste.el") (:keywords "paste"))]) (debian-changelog-mode . [(20140131 929) nil "major mode for Debian changelog files." single nil]) (debian-bug . [(20140131 929) nil "report a bug to Debian's bug tracking system" single ((:keywords "debian" "bug" "reporter"))]) (ddskk . [(20170630 317) ((ccc (1 43)) (cdb (20141201 754))) "Simple Kana to Kanji conversion program." tar ((:commit . "b3ecbe267c4975dc4318cd69a0fbfc994d6cb0d6"))]) (db-pg . [(20130131 1102) ((pg (0 12)) (db (0 0 6))) "A PostgreSQL adapter for emacs-db" single ((:commit . "7d5ab86b74b05fe003b3b434d4835f37f3f3eded") (:keywords "data" "comm" "database" "postgresql"))]) (db . [(20140421 1411) ((kv (0 0 11))) "A database for EmacsLisp" single ((:commit . "b3a423fb8e72f9013009cbe033d654df2ce31438") (:keywords "data" "lisp"))]) (dayone . [(20160105 440) ((uuid (0 0 3)) (mustache (0 22)) (ht (1 5))) "Utility script for Day One" tar ((:commit . "ab628274f0806451f23bce16f62a6a11cbf91a2b") (:url . "https://github.com/mori-dev/emacs-dayone") (:keywords "day one" "tools" "convenience"))]) (datomic-snippets . [(20130707 1315) ((s (1 4 0)) (dash (1 2 0)) (yasnippet (0 6 1))) "Yasnippets for Datomic" tar ((:commit . "7116eac8e15a16fc72973b96fa855fd9784bbbb8"))]) (datetime-format . [(20160612 1015) nil "Datetime functions" single ((:commit . "e6427538b547cbe02e1bd6ed4b765c73620bdae8") (:url . "https://github.com/zonuexe/emacs-datetime") (:keywords "datetime" "calendar"))]) (datetime . [(20170318 254) ((emacs (24 1))) "Parsing, formatting and matching timestamps" single ((:commit . "3ecf9985250ecd441e91614b44cf12323af907c0") (:url . "https://github.com/doublep/datetime") (:keywords "lisp" "i18n"))]) (date-field . [(20141128 1705) ((dash (2 9 0)) (log4e (0 2 0)) (yaxception (0 3 2))) "Date widget" single ((:commit . "11c9170d1f7b343233f7716d4c0a62be024c1654") (:url . "https://github.com/aki2o/emacs-date-field") (:keywords "widgets"))]) (date-at-point . [(20150308 543) nil "Add `date' to `thing-at-point' function" single ((:commit . "38df823d05df08ec0748a4185113fae5f99090e9") (:url . "https://github.com/alezost/date-at-point.el") (:keywords "convenience"))]) (dashboard . [(20170419 2358) ((emacs (24 4)) (page-break-lines (0 11))) "A startup screen extracted from Spacemacs" tar ((:commit . "27c559952483301cc92539f68a89a047a0cc69ad") (:url . "https://github.com/rakanalh/emacs-dashboard") (:keywords "startup" "screen" "tools"))]) (dash-functional . [(20160615 1351) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single ((:commit . "1e14307e2d829d3e4d502991d572eb9a5d7f173f") (:keywords "lisp" "functions" "combinators"))]) (dash-at-point . [(20140626 35) nil "Search the word at point with Dash" single ((:commit . "ed872b4fcbe02ef1a5bac0337afe19a7a747f34c") (:url . "https://github.com/stanaka/dash-at-point"))]) (dash . [(20170613 151) nil "A modern list library for Emacs" single ((:commit . "1e14307e2d829d3e4d502991d572eb9a5d7f173f") (:keywords "lists"))]) (dart-mode . [(20170525 1236) ((cl-lib (0 5)) (dash (2 10 0)) (flycheck (0 23))) "Major mode for editing Dart files" single ((:commit . "9b11e8fb63549ee3700fb53e92e4ce2cb302c971") (:url . "http://code.google.com/p/dart-mode") (:keywords "language"))]) (darktooth-theme . [(20170629 1848) ((autothemer (0 2))) "From the darkness... it watches" single ((:commit . "475fd1b583958d40b1cba6cfaf4ccfd7d5ca8f18") (:url . "http://github.com/emacsfodder/emacs-theme-darktooth"))]) (darkokai-theme . [(20160803 2058) nil "A darker variant on Monokai." single ((:commit . "5c5cee814c370f99db486ad11165f2023a22f7be") (:url . "http://github.com/sjrmanning/darkokai"))]) (darkmine-theme . [(20160405 2324) nil "Yet another emacs dark color theme." single ((:commit . "7f7e82ca03bcad52911fa41fb3e204e32d6ee63e") (:url . "https://github.com/pierre-lecocq/darkmine-theme"))]) (darkburn-theme . [(20170423 952) nil "A not-so-low contrast color theme for Emacs." single ((:commit . "0af794ff7fac19778ac8a7efb92455c6f6c2158f") (:url . "http://github.com/gorauskas/darkburn-theme"))]) (darkane-theme . [(20161111 1304) ((emacs (24))) "A dark theme with strong colors" single ((:commit . "afa346c793b74645392677b276c56b87c354b8ef") (:url . "https://github.com/felixfortis/emacs-darkane-theme") (:keywords "theme" "dark" "strong colors"))]) (dark-souls . [(20140314 428) nil "Prepare to die" single ((:commit . "94122b1215423e58dcf18584a2bd022029d54d4b") (:url . "http://github.com/tomjakubowski/dark-souls.el") (:keywords "games"))]) (dark-mint-theme . [(20160301 2242) nil "dark & minty fresh theme" single ((:commit . "95c30a26de31549cd341184ba9ab2be8fdc67eba"))]) (dark-krystal-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Dark Krystal (tmTheme)" single ((:commit . "bcb3c4ccf17db541e319d60e2eca38a5b22d5664") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (darcula-theme . [(20161004 2218) nil "Inspired by IntelliJ's Darcula theme" single ((:commit . "834202004507221c3bdf49457219a56760b13d22") (:url . "https://github.com/fommil/darcula-theme-emacs") (:keywords "faces"))]) (darcsum . [(20140315 2110) nil "a pcl-cvs like interface for managing darcs patches" tar ((:keywords "completion" "convenience" "tools" "vc"))]) (dante . [(20170622 34) ((flycheck (0 30)) (emacs (25 1)) (dash (2 13 0)) (f (0 19 0)) (s (1 11 0))) "Development mode for Haskell" single ((:commit . "b4e8e2b735408087a338813fc56979a5f2556d59") (:url . "https://github.com/jyp/dante") (:keywords "haskell" "tools"))]) (danneskjold-theme . [(20170702 1007) nil "Beautiful high-contrast Emacs theme." tar ((:commit . "f4de0fa84bec756ea31419f8db0b900fd1603c83"))]) (dakrone-theme . [(20140211 2045) nil "dakrone's custom dark theme" single ((:commit . "281ac9f9080a94bf9dada2f40cdba58e50f94235") (:url . "https://github.com/dakrone/dakrone-theme") (:keywords "color" "themes" "this" "file" "is" "not" "part" "of" "gnu" "emacs."))]) (dakrone-light-theme . [(20170501 654) nil "dakrone's custom light theme" single ((:commit . "4b3f3ba8e2ffc35e537507894620245c96ff8965") (:url . "https://github.com/dakrone/dakrone-light-theme") (:keywords "color" "themes" "faces" "this" "file" "is" "not" "part" "of" "gnu" "emacs."))]) (dad-joke . [(20170626 252) ((emacs (24))) "Get/display dad jokes" single ((:commit . "98e5e5ed4c57f6076afb55d75af66e787867d9f9") (:url . "https://github.com/davep/dad-joke.el") (:keywords "games"))]) (dactyl-mode . [(20140906 1025) nil "Major mode for editing Pentadactyl config files" single ((:commit . "cc55fe6b987271d9647492b8df4c812d884f661f") (:url . "https://github.com/luxbock/dactyl-mode") (:keywords "languages" "vim"))]) (d-mode . [(20161022 717) nil "D Programming Language major mode for (X)Emacs" single ((:commit . "a97c92ced57224287a84e7fc48ba9aac6b2afc08") (:keywords "d" "programming" "language" "emacs" "cc-mode"))]) (czech-holidays . [(20160113 952) nil "Adds a list of Czech public holidays to Emacs calendar" single ((:commit . "d136fa09a152b3cd80db6d55c7b4ddfe07b90fbf") (:keywords "calendar"))]) (cython-mode . [(20140705 1229) nil "Major mode for editing Cython files" single ((:commit . "c986610a6b7dc81be8ee953256c5ccf9b4bec51b"))]) (cypher-mode . [(20151110 342) nil "major mode for editing cypher scripts" single ((:commit . "ce8543d7877c736c574a17b49874c9dcdc7a06d6") (:url . "http://github.com/fxbois/cypher-mode") (:keywords "cypher" "graph"))]) (cyphejor . [(20170518 2255) ((emacs (24 4))) "Shorten major mode names using user-defined rules" single ((:commit . "d7842388a1872b165489624a1a68f536de97e28d") (:url . "https://github.com/mrkkrp/cyphejor") (:keywords "mode-line" "major-mode"))]) (cygwin-mount . [(20131111 1346) nil "Teach EMACS about cygwin styles and mount points." single ((:keywords "files" "mount" "cygwin"))]) (cycle-themes . [(20150402 2009) ((cl-lib (0 5))) "A global minor mode to make switching themes easier" single ((:commit . "6e125d11fdbc6b78fc9f219eb2609a5e29815898") (:url . "http://github.com/toroidal-code/cycle-themes.el") (:keywords "themes" "utility" "global minor mode"))]) (cycle-resize . [(20160521 857) nil "Cycle resize the current window horizontally or vertically" single ((:commit . "7d255d6fe85f12c967a0f7fcfcf18633be194c88") (:url . "https://github.com/pierre-lecocq/cycle-resize"))]) (cycbuf . [(20131203 1237) nil "Cycle buffers, inspired by swbuff.el, swbuff-x.el, and bs.el" single ((:commit . "1079b41c3eb27d65b66d4399959bb6253f84858e") (:url . "https://github.com/martinp26/cycbuf") (:keywords "files" "convenience" "buffer switching"))]) (cyberpunk-theme . [(20170524 803) nil "Cyberpunk Color Theme" single ((:commit . "8c3cc39bcff5def0d476c080b5248436da7f990f") (:keywords "color" "theme" "cyberpunk"))]) (cus-edit+ . [(20170604 1000) nil "Enhancements to `cus-edit.el'." single ((:url . "http://www.emacswiki.org/cus-edit+.el") (:keywords "help" "customize" "help" "faces"))]) (cursor-test . [(20131207 932) ((emacs (24))) "testing library for cursor position in emacs." single ((:commit . "e09956e048b88fd2ee8dd90b5678baed8b04d31b") (:url . "https://github.com/ainame/cursor-test.el"))]) (cursor-in-brackets . [(20160603 416) nil "move cursor in brackets/quotes when right bracket/quote is inserted" single ((:keywords "cursor" "bracket" "quote"))]) (cursor-chg . [(20170221 1610) nil "Change cursor dynamically, depending on the context." single ((:url . "https://www.emacswiki.org/emacs/download/cursor-chg.el") (:keywords "cursor" "accessibility"))]) (cuda-mode . [(20151213 1921) nil "NVIDIA CUDA Major Mode" single ((:commit . "9ae9eacfdba3559b5456342d0d03296290df8ff5") (:keywords "c" "languages"))]) (cucumber-goto-step . [(20131209 2119) ((pcre2el (1 5))) "Jump to cucumber step definition" single ((:commit . "f2713ffb26ebe1b757d1f2ea80e900b55e5895aa") (:url . "http://orthogonal.me"))]) (cubicaltt . [(20170421 1132) ((emacs (24 1)) (cl-lib (0 5))) "Mode for cubical type theory" single ((:commit . "3c024a91109657088eda0f858be639c8d40c451c") (:url . "https://github.com/mortberg/cubicaltt") (:keywords "languages"))]) (ctxmenu . [(20140303 1342) ((popup (20140205 103)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a context menu like right-click." tar ((:commit . "5c2376859562b98c07c985d2b483658e4c0e888e") (:url . "https://github.com/aki2o/emacs-ctxmenu") (:keywords "popup"))]) (ctl-mode . [(20151202 206) nil "Major mode for editing GrADS script files" single ((:commit . "1a13051db21b999c7682a015b33a03096ff9d891") (:keywords "grads" "script" "major-mode"))]) (ctags-update . [(20170120 2313) nil "(auto) update TAGS in parent directory using exuberant-ctags" single ((:commit . "9c58084395bd5c62c3fe500cd56d62bfc1dcee51") (:url . "https://github.com/jixiuf/ctags-update") (:keywords "exuberant-ctags" "etags"))]) (ctable . [(20140304 1659) nil "Table component for Emacs Lisp" single ((:commit . "cd673a09a80ce4e9e102ffe2e3d7e6bfb9d652b0") (:url . "https://github.com/kiwanami/emacs-ctable") (:keywords "table"))]) (csv-nav . [(20130407 1120) nil "navigate and edit CSV files" single nil]) (csv . [(20161113 710) nil "Functions for reading and parsing CSV files." single ((:commit . "aa1dfa1263565d5fac3879c21d8ddf5f8915e411") (:keywords "extensions" "data" "csv"))]) (cssh . [(20150810 1009) nil "clusterssh implementation for emacs" single ((:commit . "2fe2754235225a59b63f08b130cfd4352e2e1c3f") (:url . "http://tapoueh.org/emacs/cssh.html") (:keywords "clusterssh" "ssh" "cssh"))]) (css-eldoc . [(20150124 1923) nil "an eldoc-mode plugin for CSS source code" tar ((:commit . "c558ac4c470742c98a37290e6b409db28183df30"))]) (css-comb . [(20160415 2259) nil "Sort CSS properties in a particular order using CSS Comb" single ((:commit . "6fa45e5af8a8bd3af6c1154cde3540e32c4206ee") (:url . "https://github.com/channikhabra/css-comb.el"))]) (csharp-mode . [(20170502 158) nil "C# mode derived mode" single ((:commit . "628a4e2afa0e9c4672e8654c86240cb7f7bdf444") (:url . "https://github.com/josteink/csharp-mode") (:keywords "c#" "languages" "oop" "mode"))]) (csgo-conf-mode . [(20161209 819) nil "CS:GO Configuration files syntax highlighting" single ((:commit . "57e7224f87a3ccc76b5564cc95fa0ff43bb6807c") (:url . "https://github.com/wynro/emacs-csgo-conf-mode") (:keywords "languages"))]) (cryptsy-public-api . [(20141008 528) ((json (1 2))) "Library for working with the Cryptsy public API" single ((:commit . "795c204452f880c0087663e7c35faf26ea34af4d") (:keywords "cryptsy" "bitcoin" "litecoin" "dogecoin"))]) (cryptol-mode . [(20160819 1444) nil "Cryptol major mode for Emacs" single ((:commit . "9bf28f865d30d23b8b4fdef16a79ab66abbcc41f") (:url . "http://github.com/thoughtpolice/cryptol-mode") (:keywords "cryptol" "cryptography"))]) (crux . [(20170626 632) ((seq (1 11))) "A Collection of Ridiculously Useful eXtensions" single ((:commit . "e805ab780a4a1ce22a4436bde09b95e97d150e51") (:url . "https://github.com/bbatsov/crux") (:keywords "convenience"))]) (crosshairs . [(20170626 1548) ((hl-line+ (0)) (col-highlight (0)) (vline (0))) "Highlight the current line and column." single ((:url . "http://www.emacswiki.org/emacs/download/crosshairs.el") (:keywords "faces" "frames" "emulation" "highlight" "cursor" "accessibility"))]) (crontab-mode . [(20090510 1355) nil "Mode for editing crontab files" single ((:commit . "68341c82b26462a6af4a5e2b624b1c2165243b8e") (:url . "http://www.mahalito.net/~harley/elisp/crontab-mode.el") (:keywords "cron" "crontab" "emacs"))]) (crm-custom . [(20160116 1606) ((cl-lib (0 5))) "Alternate `completing-read-multiple' that uses `completing-read'" single ((:commit . "f1aaccf64306a5f99d9bf7ba815d7ea41c15518d") (:url . "https://github.com/DarwinAwardWinner/crm-custom") (:keywords "completion" "minibuffer" "multiple elements"))]) (cricbuzz . [(20161130 2036) ((enlive (0 0 1)) (dash (2 13 0)) (s (1 11 0))) "Cricket scores from cricbuzz in emacs" single ((:commit . "5fe51347f5d6e7636ece5e904e4bdec0be21db45") (:url . "https://github.com/lepisma/cricbuzz.el") (:keywords "cricket" "score"))]) (creole-mode . [(20130721 1750) nil "a markup mode for creole" single ((:commit . "b5e79b2ec5f19fb5aacf689b5febc3e0b61515c4") (:url . "https://github.com/nicferrier/creole-mode") (:keywords "hypermedia" "wp"))]) (creole . [(20140924 800) ((noflet (0 0 3)) (kv (0 0 17))) "A parser for the Creole Wiki language" single ((:commit . "7d5cffe93857f6c75ca09ac79c0e47b8d4410e53") (:keywords "lisp" "creole" "wiki"))]) (creds . [(20140510 1006) ((s (1 9 0)) (dash (2 5 0))) "A parser credentials file library (not limited to credentials entries)" tar ((:commit . "b059397a7d59481f05fbb1bb9c8d3c2c69226482"))]) (creamsody-theme . [(20170222 258) ((autothemer (0 2))) "Straight from the soda fountain." single ((:commit . "32fa3f4e461da92700523b1b20e7b28974c19a26") (:url . "http://github.com/emacsfodder/emacs-theme-creamsody"))]) (crappy-jsp-mode . [(20140311 231) nil "A pretty crappy major-mode for jsp." single ((:commit . "6c45ab92b452411cc0fab9bcee2f456276b4fc40") (:keywords "jsp" "major" "mode"))]) (crab . [(20150126 2137) ((websocket (1 0)) (json (1 2))) "WebSocket server to remotely control a browser" single ((:commit . "6d66844856c1864157cef3dea9332c319b05d7d5") (:url . "https://github.com/puffnfresh/crab-emacs"))]) (cql-mode . [(20160720 2039) ((emacs (24))) "Major mode for editting CQLs" single ((:commit . "2529ade55c125a89d8215f096a74733a90611c5d") (:url . "https://github.com/Yuki-Inoue/cql-mode") (:keywords "cql" "cassandra"))]) (cpputils-cmake . [(20170507 629) nil "Easy realtime C++ syntax check and IntelliSense with CMake." single ((:commit . "0d4b22cbf548e0d1ce4e79cc82ada3747bb5d389") (:url . "http://github.com/redguardtoo/cpputils-cmake") (:keywords "cmake" "intellisense" "flymake" "flycheck"))]) (cpanfile-mode . [(20161001 10) ((emacs (24 4))) "Major mode for cpanfiles" single ((:commit . "eda675703525198df1f76ddf250bffa40217ec5d") (:url . "https://github.com/zakame/cpanfile-mode") (:keywords "perl"))]) (cp5022x . [(20120323 1635) nil "cp50220, cp50221, cp50222 coding system" single ((:commit . "ea7327dd75e54539576916f592ae1be98179ae35") (:keywords "languages" "cp50220" "cp50221" "cp50222" "cp51932" "cp932"))]) (coverlay . [(20160507 955) ((emacs (24 1)) (cl-lib (0 5))) "Test coverage overlays" single ((:commit . "11068e2e4ed971b757ac0294528d4beb91124e58") (:url . "https://github.com/twada/coverlay.el") (:keywords "coverage" "overlay"))]) (coverage . [(20160222 114) ((ov (1 0)) (cl-lib (0 5))) "Code coverage line highlighting" single ((:commit . "d68e5d20108e280b11a802a671bd009c7dcfff89") (:url . "https://github.com/trezona-lecomte/coverage") (:keywords "coverage" "metrics" "simplecov" "ruby" "rspec"))]) (cov . [(20170405 1508) ((emacs (24 4)) (f (0 18 2)) (s (1 11 0))) "Show coverage stats in the fringe." single ((:commit . "519239cc37d3ad0204fecac99f42e1694ce57d3d") (:url . "https://github.com/AdamNiederer/cov") (:keywords "coverage" "gcov" "c"))]) (counsel-spotify . [(20170612 1132) ((emacs (25)) (ivy (0 9 0))) "Control Spotify search and select music with Ivy." single ((:commit . "dba8c1bf92e15f34f12a9e22b5958a93f10b46c5"))]) (counsel-projectile . [(20170216 1426) ((counsel (0 8 0)) (projectile (0 14 0))) "Ivy integration for Projectile" single ((:commit . "aefd25c74718e66f180127c0d273eade887325b0") (:url . "https://github.com/ericdanan/counsel-projectile") (:keywords "project" "convenience"))]) (counsel-osx-app . [(20160821 109) ((ivy (0 8 0)) (emacs (24 3))) "launch osx applications via ivy interface" single ((:commit . "b1c54cbc033c4939966910d85ce035503079e108") (:url . "https://github.com/d12frosted/counsel-osx-app"))]) (counsel-gtags . [(20170326 559) ((emacs (24 3)) (counsel (0 8 0))) "ivy for GNU global" single ((:commit . "220ebb48419ee6891ecbf9ea8fe130b494b17ee2") (:url . "https://github.com/syohex/emacs-counsel-gtags"))]) (counsel-dash . [(20160729 829) ((emacs (24 4)) (dash (2 12 1)) (dash-functional (1 2 0)) (helm-dash (1 3 0)) (counsel (0 8 0))) "Browse dash docsets using Ivy" single ((:commit . "07fa74a94ff4da5b6c8c4810f5e143e701b480d2") (:url . "https://github.com/nathankot/counsel-dash") (:keywords "dash" "ivy" "counsel"))]) (counsel-bbdb . [(20161105 350) ((ivy (0 8 0)) (emacs (24 3))) "Quick search&input email from BBDB based on ivy" single ((:commit . "297d0c7e6e1eaafcd5e188724fea8e8f26b95555") (:url . "https://github.com/redguard/counsel-bbdb") (:keywords "bbdb" "email" "completion"))]) (counsel . [(20170701 413) ((emacs (24 3)) (swiper (0 9 0))) "Various completion functions using Ivy" single ((:commit . "d785f98ab4aab615c05ba610812932faa2e5f96e") (:url . "https://github.com/abo-abo/swiper") (:keywords "completion" "matching"))]) (corral . [(20160502 1) nil "Quickly surround text with delimiters" single ((:commit . "e7ab6aa118e46b93d4933d1364bc273f57cd6911") (:url . "http://github.com/nivekuil/corral"))]) (coq-commenter . [(20170607 1355) ((dash (2 13 0)) (s (1 11 0)) (cl-lib (0 5))) "Coq commenting minor mode for proof" single ((:commit . "6100933cadea289cdaabf2f56f2a0dd72385c1fe") (:url . "http://github.com/ailrun/coq-commenter") (:keywords "comment" "coq" "proof"))]) (copyit-pandoc . [(20160624 1328) ((emacs (24)) (copyit (0 0 1)) (pandoc (0 0 1))) "Copy it, yank anything!" single ((:commit . "f50d033b129d467fb517a351adf3f16cabd82a62") (:url . "https://github.com/zonuexe/emacs-copyit") (:keywords "convinience" "yank" "clipboard"))]) (copyit . [(20161126 429) ((emacs (24)) (cl-lib (0 5)) (s (1 9 0))) "Copy it, yank anything!" single ((:commit . "f50d033b129d467fb517a351adf3f16cabd82a62") (:url . "https://github.com/zonuexe/emacs-copyit") (:keywords "convenience" "yank" "clipboard"))]) (copy-as-format . [(20170603 945) ((cl-lib (0 5))) "Copy buffer locations as GitHub/Slack/JIRA/HipChat/... formatted code" single ((:commit . "fba9fe57a310a71c5aac90a26434df4c08214833") (:url . "https://github.com/sshaw/copy-as-format") (:keywords "github" "slack" "jira" "hipchat" "gitlab" "bitbucket" "org-mode" "pod" "rst" "tools" "convenience"))]) (control-mode . [(20160624 1010) nil "A \"control\" mode, similar to vim's \"normal\" mode" single ((:commit . "72d6179b60adc438aada74083b2bf4264b575de3") (:url . "https://github.com/stephendavidmarsh/control-mode") (:keywords "convenience" "emulations"))]) (contrast-color . [(20160903 1107) ((emacs (24 3)) (cl-lib (0 5))) "Pick best contrast color for you" single ((:commit . "c5fb77a211ebbef3185ada37bea7420534c33f94") (:url . "https://github.com/yuutayamada/contrast-color-el") (:keywords "color" "convenience"))]) (contextual . [(20160131 1037) ((emacs (24)) (dash (2 12 1)) (cl-lib (0 5))) "Contextual profile management system" single ((:commit . "9e009614fb72ef14964d7107abd44de5aed21659") (:url . "https://github.com/lshift-de/contextual") (:keywords "convenience" "tools"))]) (connection . [(20140717 2029) nil "TCP-based client connection" single ((:commit . "a23b8f4a422d0de69a006ed010eff5795319db98") (:keywords "network"))]) (conkeror-minor-mode . [(20150114 804) nil "Mode for editing conkeror javascript files." single ((:commit . "476e81c27b056e21c192391fe674a2bf875466b0") (:url . "http://github.com/Bruce-Connor/conkeror-minor-mode") (:keywords "programming" "tools"))]) (confluence . [(20151020 1828) ((xml-rpc (1 6 4))) "Emacs mode for interacting with confluence wikis" tar ((:url . "http://code.google.com/p/confluence-el/") (:keywords "confluence" "wiki" "xmlrpc"))]) (config-parser . [(20160426 519) ((emacs (24 4))) "a library for parsing config file" single ((:commit . "85d559e7889d8f5b98b8794b79426ae25ec3caa5") (:url . "https://github.com/lujun9972/el-config-parser") (:keywords "convenience" "config"))]) (conda . [(20170608 756) ((emacs (24 4)) (pythonic (0 1 0)) (dash (2 13 0)) (s (1 11 0)) (f (0 18 2))) "Work with your conda environments" single ((:commit . "0257cd83796c3bdc357b69c1ecaf6d7eb6e2bf53") (:url . "http://github.com/necaris/conda.el") (:keywords "python" "environment" "conda"))]) (concurrent . [(20161228 1930) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" single ((:commit . "d012a1ab50edcc2c44e3e49006f054dbff47cb6c") (:url . "https://github.com/kiwanami/emacs-deferred/blob/master/README-concurrent.markdown") (:keywords "deferred" "async" "concurrent"))]) (composer . [(20170304 1647) ((emacs (24)) (s (1 9 0)) (f (0 17)) (request (0 2 0)) (seq (1 9))) "Interface to PHP Composer" single ((:commit . "43e50a5e626bedb3c46c875ac765daf615f18ce9") (:url . "https://github.com/zonuexe/composer.el") (:keywords "tools" "php" "dependency" "manager"))]) (composable . [(20170426 459) ((emacs (24 4))) "composable editing" tar ((:commit . "09020605ee7f4e52ff2fa2f6d68d826db1ee7565") (:keywords "lisp"))]) (company-ycmd . [(20170622 146) ((ycmd (1 2)) (company (0 9 3)) (deferred (0 5 1)) (s (1 11 0)) (dash (2 13 0)) (let-alist (1 0 5)) (f (0 19 0))) "company-mode backend for ycmd" single ((:commit . "43d690e4922dbf44e5deffc89cd06f2b1bd79ad2") (:url . "https://github.com/abingham/emacs-ycmd"))]) (company-ycm . [(20140904 1117) ((ycm (0 1))) "company-ycm" single ((:commit . "4da8a14abcd0f4fa3235042ade2e12b5068c0601") (:keywords "abbrev"))]) (company-web . [(20160502 658) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar ((:commit . "2915da21c6327c7eaa0d03e237163228c9681224") (:url . "https://github.com/osv/company-web") (:keywords "html" "company"))]) (company-try-hard . [(20150902 1506) ((emacs (24 3)) (company (0 8 0)) (dash (2 0))) "get all completions from company backends" single ((:commit . "70b94cfc40c576af404e743133979048e1bd2610") (:keywords "matching"))]) (company-tern . [(20161004 1147) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" single ((:commit . "10ac058b065ae73c1f30e9fb7d969dd1a79387be") (:url . "https://github.com/proofit404/company-tern"))]) (company-statistics . [(20170210 1133) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" single ((:commit . "e62157d43b2c874d2edbd547c3bdfb05d0a7ae5c") (:url . "https://github.com/company-mode/company-statistics") (:keywords "abbrev" "convenience" "matching"))]) (company-sourcekit . [(20170126 353) ((emacs (24 3)) (company (0 8 12)) (dash (2 12 1)) (dash-functional (1 2 0)) (sourcekit (0 2 0))) "company-mode completion backend for SourceKit" single ((:commit . "8ba62ac25bf533b7f148f333bcb5c1db799f749b") (:url . "https://github.com/nathankot/company-sourcekit") (:keywords "abbrev"))]) (company-shell . [(20170517 2241) ((emacs (24 4)) (company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for shell functions" single ((:commit . "6ae625f80d90e0779c79de38e8f83a336c1d00fa") (:url . "https://github.com/Alexander-Miller/company-shell") (:keywords "company" "shell" "auto-completion"))]) (company-rtags . [(20170522 2154) ((emacs (24 3)) (company (0 8 1)) (rtags (2 10))) "RTags back-end for company" single ((:commit . "7e6b6f21935eedbe4678ba91c5531ac162b51a5a") (:url . "http://rtags.net"))]) (company-restclient . [(20151202 401) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24)) (know-your-http-well (0 2 0)) (restclient (0 0 0))) "company-mode completion back-end for restclient-mode" single ((:commit . "7b41cd58ffdf965480f1cf52d58d718009ba6fe7") (:url . "https://github.com/iquiw/company-restclient"))]) (company-racer . [(20160722 1658) ((emacs (24)) (cl-lib (0 5)) (company (0 8 0)) (deferred (0 3 1)) (dash (2 12 0))) "Company integration for racer" single ((:commit . "c2afd3d989ec2bca7dac094b684063a1922905f6") (:url . "https://github.com/emacs-pe/company-racer") (:keywords "convenience"))]) (company-quickhelp . [(20170429 1052) ((emacs (24 3)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates" single ((:commit . "432c62f034a5097d3f85d7f54afcdc016d7afa12") (:url . "https://www.github.com/expez/company-quickhelp") (:keywords "company" "popup" "documentation" "quickhelp"))]) (company-qml . [(20170428 1008) ((qml-mode (0 1)) (company (0 8 12))) "Company backend for QML files" tar ((:commit . "4af4f32a7ad86d86bb9293fb0b675aec513b5736") (:keywords "extensions"))]) (company-pollen . [(20160812 810) ((company (0 9 0)) (pollen-mode (1 0))) "company-mode completion backend for pollen" single ((:commit . "de762bd7f9760185dae8ef025ca9a9126ae78de0") (:url . "https://github.com/lijunsong/pollen-mode") (:keywords "languages" "pollen" "pollenpub" "company"))]) (company-php . [(20170314 2141) ((cl-lib (0 5)) (ac-php-core (1)) (company (0 9))) "company completion source for php" single ((:commit . "e0aaae30e4e5f18390e5d00953db02c1f03c44f6") (:url . "https://github.com/xcwen/ac-php") (:keywords "completion" "convenience" "intellisense"))]) (company-nixos-options . [(20160215 57) ((company (0 8 0)) (nixos-options (0 0 1)) (cl-lib (0 5 0))) "Company Backend for nixos-options" single ((:commit . "ace629f7645d12778c96ff7b5cf4b1e41a98af29") (:url . "http://www.github.com/travisbhartwell/nix-emacs/") (:keywords "unix"))]) (company-ngram . [(20170129 1113) ((cl-lib (0 5)) (company (0 8 0))) "N-gram based completion" tar ((:commit . "09a68b802e64799e95f205b438d469bbd78cd2e6") (:url . "https://github.com/kshramt/company-ngram"))]) (company-nand2tetris . [(20161011 1748) ((nand2tetris (1 0 0)) (company (0 5)) (cl-lib (0 5 0))) "Company backend for nand2tetris major mode" single ((:commit . "9f7c605a1d030aed933e86b45c9f7232dbbcfb6e") (:url . "http://www.github.com/CestDiego/nand2tetris.el/") (:keywords "nand2tetris" "hdl" "company"))]) (company-math . [(20170221 751) ((company (0 8 0)) (math-symbol-lists (1 2))) "Completion backends for unicode math symbols and latex tags" single ((:commit . "34b4b52f67e5c1ffaf807e4be1512fca4695eea8") (:url . "https://github.com/vspinu/company-math") (:keywords "unicode" "symbols" "completion"))]) (company-lua . [(20161227 1139) ((company (0 8 12)) (s (1 10 0)) (f (0 17 0)) (lua-mode (20151025))) "Company backend for Lua" tar ((:commit . "0be8122f3adf57ad27953bf4b03545d6298d3da4"))]) (company-jedi . [(20151216 1921) ((emacs (24)) (cl-lib (0 5)) (company (0 8 11)) (jedi-core (0 2 7))) "company-mode completion back-end for Python JEDI" single ((:commit . "2f54e791e10f5dc0ff164bfe97f1878359fab6f6"))]) (company-irony-c-headers . [(20151018 209) ((cl-lib (0 5)) (company (0 9 0)) (irony (0 2 0))) "Company mode backend for C/C++ header files with Irony" single ((:commit . "5bbd427a2d3d4445e3413f7516def9aa80543b2a") (:url . "https://github.com/hotpxl/company-irony-c-headers") (:keywords "c" "company"))]) (company-irony . [(20170612 1308) ((emacs (24 1)) (company (0 8 0)) (irony (1 0 0)) (cl-lib (0 5))) "company-mode completion back-end for irony-mode" single ((:commit . "b8001ffc4da7403172835d47bc740cfbac35364d") (:url . "https://github.com/Sarcasm/company-irony/") (:keywords "convenience"))]) (company-inf-ruby . [(20140805 1354) ((company (0 6 10)) (inf-ruby (2 2 7)) (emacs (24 1))) "company-mode completion back-end for inf-ruby" single ((:commit . "fe3e4863bc971fbb81edad447efad5795ead1b17") (:url . "https://github.com/company-mode/company-inf-ruby"))]) (company-go . [(20170420 515) ((company (0 8 0)) (go-mode (1 0 0))) "company-mode backend for Go (using gocode)" single ((:commit . "f1eef9a6ba005abb145d7b58fdd225e83a3c6a05") (:keywords "languages"))]) (company-ghci . [(20160310 1800) ((company (0 8 11)) (haskell-mode (13))) "company backend which uses the current ghci process." single ((:commit . "c2d74a41166e76de2e78c87f582ba3a1179b2aa6"))]) (company-ghc . [(20160315 710) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "company-mode ghc-mod backend" single ((:commit . "ff2205c0b309467eea763521d30220e7849c75b0") (:url . "https://github.com/iquiw/company-ghc") (:keywords "haskell" "completion"))]) (company-flx . [(20161228 1736) ((emacs (24)) (company (0 8 12)) (flx (0 5))) "flx based fuzzy matching for company" single ((:commit . "0c9fddf7c11c918ed42bd6a5108f8969b37704d5") (:url . "https://github.com/PythonNut/company-flx") (:keywords "convenience" "company" "fuzzy" "flx"))]) (company-flow . [(20170325 810) ((company (0 8 0)) (dash (2 13 0))) "Flow backend for company-mode" single ((:commit . "339f502e46e7d9214b61498d539b17f8f0322d17") (:url . "https://github.com/aaronjensen/company-flow"))]) (company-erlang . [(20170122 2138) ((emacs (24 4)) (ivy-erlang-complete (0 1)) (company (0 9 2))) "company backend based on ivy-erlang-complete" single ((:commit . "bc0524a16f17b66c7397690e4ca0e004f09ea6c5") (:keywords "tools"))]) (company-emoji . [(20161230 1937) ((cl-lib (0 5)) (company (0 8 0))) "company-mode backend for emoji" tar ((:commit . "8dc88ffe0773ef44321f245d39430c14a1bc2b82") (:url . "https://github.com/dunn/company-emoji.git") (:keywords "emoji" "company"))]) (company-emacs-eclim . [(20170104 743) ((eclim (0 3)) (company (0 7)) (cl-lib (0 5))) "company-mode backend for eclim" single ((:commit . "ebb844d1ebdd7eb347e89063a9b6e9f890a1ff57"))]) (company-edbi . [(20160221 1123) ((company (0 8 5)) (edbi (0 1 3)) (cl-lib (0 5 0)) (s (1 9 0))) "Edbi backend for company-mode" single ((:commit . "ffaeff75d0457285d16d11db772881542a6026ad") (:url . "https://github.com/proofit404/company-edbi"))]) (company-distel . [(20161002 2339) ((distel-completion-lib (1 0 0))) "Erlang/distel completion backend for company-mode" single ((:commit . "2ba4eea51cecfa75cf62f58180460ee9ff43131f") (:url . "github.com/sebastiw/distel-completion") (:keywords "erlang" "distel" "company"))]) (company-dict . [(20160528 53) ((emacs (24 4)) (company (0 8 12)) (parent-mode (2 3))) "A backend that emulates ac-source-dictionary" single ((:commit . "0589c2c3980a8f0df1705e3c0e5e075557eaac75") (:url . "https://github.com/hlissner/emacs-company-dict") (:keywords "company" "dictionary" "ac-source-dictionary"))]) (company-dcd . [(20170516 210) ((company (0 9)) (flycheck-dmd-dub (0 7)) (yasnippet (0 8)) (popwin (0 7)) (cl-lib (0 5)) (ivy (20160804 326))) "Company backend for Dlang using DCD." single ((:commit . "4832188a9e42287539a69c372fe1643166a6a7aa") (:url . "http://github.com/tsukimizake/company-dcd") (:keywords "languages"))]) (company-coq . [(20170615 1842) ((company-math (1 1)) (company (0 8 12)) (yasnippet (0 11 0)) (dash (2 12 1)) (cl-lib (0 5))) "A collection of extensions for Proof General's Coq mode" tar ((:commit . "642c0b5b539692242c476eb00af7bacc91d7fcc0"))]) (company-cabal . [(20151216 720) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24))) "company-mode cabal backend" tar ((:commit . "05886d6f2621b019fafb40cff4d2567e5d8045b4") (:url . "https://github.com/iquiw/company-cabal"))]) (company-c-headers . [(20170531 1330) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single ((:commit . "e959d43bebf0a524f7378669983a39ee1379cc21") (:keywords "development" "company"))]) (company-bibtex . [(20170125 2135) ((company (0 9 0)) (cl-lib (0 5)) (parsebib (1 0))) "Company completion for bibtex keys" single ((:commit . "2cea36c24c35c1e9fafce7526781f119a48b5e82") (:url . "https://github.com/gbgar/company-bibtex") (:keywords "company-mode" "bibtex"))]) (company-auctex . [(20161025 24) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Company-mode auto-completion for AUCTeX" single ((:commit . "d3727c9f5bb13c52b4a345bc8f895d3dbd9178b3") (:url . "https://github.com/alexeyr/company-auctex/"))]) (company-arduino . [(20160306 939) ((emacs (24 1)) (company (0 8 0)) (irony (0 1 0)) (cl-lib (0 5)) (company-irony (0 1 0)) (company-c-headers (20140930)) (arduino-mode (1 0))) "company-mode for Arduino" single ((:commit . "d7e369702b8eee63e6dfdeba645ce28b6dc66fb1") (:url . "https://github.com/yuutayamada/company-arduino") (:keywords "convenience" "development" "company"))]) (company-ansible . [(20170430 53) ((emacs (24 4)) (company (0 8 12))) "A company back-end for ansible" tar ((:commit . "2c30c3bdb8316b27d5c1832b944cb146d00de456") (:url . "https://github.com/krzysztof-magosa/company-ansible") (:keywords "ansible"))]) (company-anaconda . [(20160809 705) ((company (0 8 0)) (anaconda-mode (0 1 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (s (1 9))) "Anaconda backend for company-mode" single ((:commit . "b268a00821c79d7e4c5da0d7035356afb389b3a7") (:url . "https://github.com/proofit404/anaconda-mode"))]) (company . [(20170617 1502) ((emacs (24 3))) "Modular text completion framework" tar ((:commit . "9dbabd146c5884c1a1940eef010bcf834510a8e2") (:url . "http://company-mode.github.io/") (:keywords "abbrev" "convenience" "matching"))]) (common-lisp-snippets . [(20170522 2147) ((yasnippet (0 8 0))) "Yasnippets for Common Lisp" tar ((:commit . "46f1de08c8d86b72b474c2f8e1c1b313ac70f23d") (:url . "https://github.com/mrkkrp/common-lisp-snippets") (:keywords "snippets"))]) (commify . [(20161106 1534) ((s (1 9 0))) "Toggle grouping commas in numbers" single ((:commit . "78732c2fa6c1a10288b7436d7c561ec9ebdd41be") (:url . "https://github.com/ddoherty03/commify") (:keywords "convenience" "editing" "numbers" "grouping" "commas"))]) (commenter . [(20160219 827) ((emacs (24 4)) (let-alist (1 0 4))) "multiline-comment support package" single ((:commit . "6d1885419434ba779270c6fda0e30d390bb074bd") (:url . "https://github.com/yuutayamada/commenter") (:keywords "comment"))]) (comment-dwim-2 . [(20150825 1549) nil "An all-in-one comment command to rule them all" single ((:commit . "8cedecde018b5872195bfead6511af822776a430") (:url . "https://github.com/remyferre/comment-dwim-2") (:keywords "convenience"))]) (commander . [(20140120 1052) ((s (1 6 0)) (dash (2 0 0)) (cl-lib (0 3)) (f (0 6 1))) "Emacs command line parser" single ((:commit . "2a4f1fd6cf9aa1798559dbdd5fbd9dcd327cd859") (:url . "http://github.com/rejeep/commander.el") (:keywords "cli" "argv"))]) (command-queue . [(20160328 1025) ((emacs (24 3))) "shell command queue" single ((:commit . "f327c6f852592229a755ec6de0c62c6aeafd6659") (:url . "https://github.com/Yuki-Inoue/command-queue"))]) (command-log-mode . [(20160412 2147) nil "log keyboard commands to buffer" single ((:commit . "af600e6b4129c8115f464af576505ea8e789db27") (:url . "https://github.com/lewang/command-log-mode") (:keywords "help"))]) (comint-intercept . [(20170317 528) ((emacs (24 3))) "Intercept input in comint-mode" single ((:commit . "a329abf01fa8e0c6b02b46b29bcb421a21120dc5") (:url . "https://github.com/hying-caritas/comint-intercept") (:keywords "processes" "terminals"))]) (column-marker . [(20121128 43) nil "Highlight certain character columns" single ((:keywords "tools" "convenience" "highlight"))]) (column-enforce-mode . [(20170103 1231) nil "Highlight text that extends beyond a  column" single ((:commit . "379366fe0a5bcb333db2d55cddcf18d6e76ab3fc") (:url . "www.github.com/jordonbiondo/column-enforce-mode"))]) (color-theme-x . [(20160924 854) ((cl-lib (0 5))) "convert color themes to X11 resource settings" single ((:commit . "7cba227f8bd4c82269405848550a4f4475057c65") (:url . "https://github.com/ajsquared/color-theme-x") (:keywords "convenience" "faces" "frames"))]) (color-theme-solarized . [(20160626 743) ((color-theme (6 5 5))) "Solarized themes for Emacs" tar ((:commit . "797229d0d3c9a2233fd8c69c0c2d9948be1d0685"))]) (color-theme-sanityinc-tomorrow . [(20170626 1417) nil "A version of Chris Kempson's various Tomorrow themes" tar ((:commit . "ffcec9177c8b4393f036acb5ca51b33b53916ea8"))]) (color-theme-sanityinc-solarized . [(20160429 1903) nil "A version of Ethan Schoonover's Solarized themes" tar ((:commit . "99fb4753f071542690e7a17b3dd76b5f2a05e9fc"))]) (color-theme-modern . [(20161219 344) ((emacs (24))) "Reimplement colortheme with Emacs 24 theme framework." tar ((:commit . "42a79266f1d7b473e9328e67a455e505e6c3eff5") (:url . "https://github.com/emacs-jp/replace-colorthemes/"))]) (color-theme-buffer-local . [(20170125 2201) ((color-theme (0))) "Install color-themes by buffer." single ((:commit . "e606dec66f16a06140b9aad625a4fd52bca4f936") (:url . "http://github.com/vic/color-theme-buffer-local") (:keywords "faces"))]) (color-theme-approximate . [(20140227 2036) nil "Makes Emacs theme works on terminal transparently" single ((:commit . "f54301ca39bc5d2ffb000f233f8114184a3e7d71"))]) (color-theme . [(20080305 34) nil "install color themes" tar ((:url . "http://www.emacswiki.org/cgi-bin/wiki.pl?ColorTheme") (:keywords "faces"))]) (color-moccur . [(20141222 1635) nil "multi-buffer occur (grep) mode" single ((:commit . "4f1c59ffd1ccc2ab1a171cd6b721e8cb9e002fb7") (:url . "http://www.bookshelf.jp/elc/color-moccur.el") (:keywords "convenience"))]) (color-identifiers-mode . [(20170615 1338) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" single ((:commit . "d57e162c2dcb926291ded21cbe46b98ad0ca32c8") (:url . "https://github.com/ankurdave/color-identifiers-mode") (:keywords "faces" "languages"))]) (colonoscopy-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Colonoscopy (tmTheme)" single ((:commit . "7b873d7e7e091b71bf4fdd23ded19e261a1e3936") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (colemak-evil . [(20170401 1626) ((evil (20170323 1140))) "Colemak-friendly keybindings for Evil." single ((:commit . "b01296a50ee225d0e21e81f99c3c01432f89a7c7") (:url . "https://github.com/patbl/colemak-evil"))]) (col-highlight . [(20170510 1541) ((vline (0))) "Highlight the current column." single ((:url . "https://www.emacswiki.org/emacs/download/col-highlight.el") (:keywords "faces" "frames" "emulation" "highlight" "cursor" "accessibility"))]) (coin-ticker . [(20170611 27) ((request (0 3 0)) (emacs (25))) "Show a cryptocurrency price ticker" single ((:commit . "45108e239e1d129c0cc1ff37f2870cf73087780b") (:url . "https://github.com/eklitzke/coin-ticker-mode") (:keywords "news"))]) (coffee-mode . [(20170324 240) ((emacs (24 3))) "Major mode for CoffeeScript code" single ((:commit . "86ab8aae8662e8eff54d3013010b9c693b16eac5") (:url . "http://github.com/defunkt/coffee-mode") (:keywords "coffeescript" "major" "mode"))]) (coffee-fof . [(20131012 530) ((coffee-mode (0 4 1))) "A coffee-mode configuration for `ff-find-other-file'." single ((:commit . "211529594bc074721c6cbc4edb73a63cc05f89ac") (:url . "http://github.com/yasuyk/coffee-fof") (:keywords "coffee-mode"))]) (codic . [(20150926 427) ((emacs (24)) (cl-lib (0 5))) "Search Codic (codic.jp) naming dictionaries" tar ((:commit . "52bbb6997ef4ab9fb7fea43bbfff7f04671aa557") (:url . "https://github.com/syohex/emacs-codic"))]) (codesearch . [(20160806 57) ((dash (2 8 0))) "Easy access to the codesearch tools" single ((:commit . "7013d933cd9d3c04f19a6572176483b48a311807") (:url . "https://github.com/abingham/codesearch.el") (:keywords "tools" "development" "search"))]) (codebug . [(20140929 1437) nil "Interact with codebug" single ((:commit . "ac0e4331ba94ccb5203fa492570e1ca6b90c3d52") (:url . "http://www.shanedowling.com/"))]) (code-library . [(20160426 518) ((gist (1 3 1))) "use org-mode to collect code snippets" single ((:commit . "32d59c5c845d6dbdda18f9bd1c03a58d55417fc5") (:keywords "lisp" "code"))]) (cobra-mode . [(20140116 1316) nil "Major mode for .NET-based Cobra language" single ((:commit . "acd6e53f6286af5176471d01f25257e5ddb6dd01") (:url . "http://github.com/Nekroze/cobra-mode") (:keywords "languages"))]) (cn-outline . [(20100321 914) nil "No description available." single ((:commit . "47d33a99b7ae26b1cd456441970b4bab2173d981"))]) (cmm-mode . [(20150224 2346) nil "Major mode for C-- source code" single ((:commit . "c3ad514dff3eb30434f6b20d953276d4c00de1ee"))]) (cmds-menu . [(20170221 1557) nil "`Recent Commands' submenu for the menu-bar `Tools' menu." single ((:url . "https://www.emacswiki.org/emacs/download/cmds-menu.el") (:keywords "convenience" "command" "menu"))]) (cmd-to-echo . [(20161203 1333) ((emacs (24 4)) (s (1 11 0)) (shell-split-string (20151224 208))) "Show the output of long-running commands in the echo area" single ((:commit . "e0e874fc0e1ad6d291e39ed76023445297ad438a"))]) (cmake-project . [(20150720 1359) nil "Integrates CMake build process with Emacs" single ((:commit . "5212063b6276f8b9af8b48b4052e5ec97721c08b") (:url . "http://github.com/alamaison/emacs-cmake-project") (:keywords "c" "cmake" "languages" "tools"))]) (cmake-mode . [(20160928 505) nil "major-mode for editing CMake sources" single ((:commit . "43fc13f8258251ca946cd07abd1cf32e5725722e"))]) (cmake-ide . [(20170626 509) ((emacs (24 4)) (cl-lib (0 5)) (seq (1 11)) (levenshtein (0)) (s (1 11 0))) "Calls CMake to find out include paths and other compiler flags" single ((:commit . "0d05b0d4cf7252a381a28bd19577fb0d4ce6067b") (:url . "http://github.com/atilaneves/cmake-ide") (:keywords "languages"))]) (cmake-font-lock . [(20170117 1225) ((cmake-mode (0 0))) "Advanced, type aware, highlight support for CMake" single ((:commit . "8be491b4b13338078e524e2fe6213c93e18a101e") (:url . "https://github.com/Lindydancer/cmake-font-lock") (:keywords "faces" "languages"))]) (cm-mode . [(20170203 1307) ((cl-lib (0 5))) "Minor mode for CriticMarkup" single ((:commit . "276d49c859822265070ae5dfbb403fd7d8d06436") (:keywords "text" "markdown"))]) (clues-theme . [(20161213 327) ((emacs (24 0))) "an Emacs 24 theme which may well be fully awesome..." single ((:commit . "abd61f2b7f3e98de58ca26e6d1230e70c6406cc7") (:url . "https://github.com/emacsfodder/emacs-clues-theme"))]) (cloud-to-butt-erc . [(20130627 1608) nil "Replace 'the cloud' with 'my butt'" single ((:commit . "6710c03d1bc91736435cbfe845924940cae34e5c") (:url . "http://www.github.com/leathekd/cloud-to-butt-erc"))]) (closure-lint-mode . [(20101118 1324) nil "minor mode for the Closure Linter" single ((:commit . "bc3d2fd5c35580bf1b8af43b12484c95a343b4b5") (:url . "https://github.com/r0man/closure-lint-mode") (:keywords "tools" "closure" "javascript" "lint" "flymake"))]) (closql . [(20170204 1022) ((emacs (25 1)) (emacsql-sqlite (2 0 2))) "store EIEIO objects using EmacSQL" single ((:url . "https://github.com/emacscollective/closql") (:keywords "extensions"))]) (clomacs . [(20170128 850) ((emacs (24 3)) (cider (0 11)) (s (1 10 0))) "Simplifies Emacs Lisp interaction with Clojure." single ((:commit . "0c7793b52166730a563c3318cdcb9f2b423bc675") (:url . "https://github.com/clojure-emacs/clomacs") (:keywords "clojure" "interaction"))]) (clojure-snippets . [(20170508 42) ((yasnippet (0 10 0))) "Yasnippets for clojure" tar ((:commit . "1c6b37578c38d538ae017b23d4cd8697963b077e"))]) (clojure-quick-repls . [(20150814 36) ((cider (0 8 1)) (dash (2 9 0))) "Quickly create Clojure and ClojureScript repls for a project." single ((:commit . "730311dd3ac4e0aceb0204f818b422017873467f") (:url . "https://github.com/symfrog/clojure-quick-repls") (:keywords "languages" "clojure" "cider" "clojurescript"))]) (clojure-mode-extra-font-locking . [(20170303 2310) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" single ((:commit . "197298e93af19f755cc2c54049dc5aeb04ce6553") (:url . "http://github.com/clojure-emacs/clojure-mode") (:keywords "languages" "lisp"))]) (clojure-mode . [(20170622 2345) ((emacs (24 4))) "Major mode for Clojure code" single ((:commit . "197298e93af19f755cc2c54049dc5aeb04ce6553") (:url . "http://github.com/clojure-emacs/clojure-mode") (:keywords "languages" "clojure" "clojurescript" "lisp"))]) (clojure-cheatsheet . [(20161004 2328) ((helm (1 7 7)) (cider (0 9 0))) "The Clojure Cheatsheet for Emacs" single ((:commit . "57e877d9466934b5319989b542f93b42dffec9ae") (:url . "https://github.com/clojure-emacs/clojure-cheatsheet") (:keywords "clojure" "cider" "cheatsheet" "helm"))]) (clojars . [(20161109 1448) ((request-deferred (0 2 0))) "clojars.org search interface" single ((:commit . "8f4ca8a283d4e9acaab912bb7217ffb5800b01a7") (:url . "https://github.com/joshuamiller/clojars.el") (:keywords "docs" "help" "tools"))]) (clocker . [(20160125 1505) ((projectile (0 11 0)) (dash (2 10))) "Note taker and clock-in enforcer" single ((:commit . "4a4831ed4e42e18976edd16b844cb16cb78f3c17") (:keywords "org"))]) (cloc . [(20151007 201) ((cl-lib (0 5))) "count lines of code over emacs buffers" single ((:commit . "15e63b83dd6261f543d25aac4c72e764e3274d53") (:url . "https://github.com/cosmicexplorer/cloc-emacs") (:keywords "cloc" "count" "source" "code" "lines"))]) (clmemo . [(20160326 923) nil "Change Log MEMO" tar ((:commit . "846a81b984d71edf8278a4d9f9b886e44d5b8365") (:url . "https://github.com/ataka/clmemo") (:keywords "convenience"))]) (cljsbuild-mode . [(20160402 1000) nil "A minor mode for the ClojureScript 'lein cljsbuild' command" single ((:commit . "fa2315660cb3ce944b5e16c679dcf5afd6a97f4c") (:url . "http://github.com/kototama/cljsbuild-mode") (:keywords "clojure" "clojurescript" "leiningen" "compilation"))]) (cljr-helm . [(20160913 128) ((clj-refactor (0 13 0)) (helm-core (1 7 7)) (cl-lib (0 5))) "Wraps clojure refactor commands with helm" single ((:commit . "f2fc7b698a56e4a44d5dfbc6a55d77a93c0fa9a4") (:url . "https://github.com/philjackson/cljr-helm") (:keywords "helm" "clojure" "refactor"))]) (clj-refactor . [(20170608 320) ((emacs (24 4)) (s (1 8 0)) (seq (2 19)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 6 1)) (cider (0 11 0)) (edn (1 1 2)) (inflections (2 3)) (hydra (0 13 2))) "A collection of clojure refactoring functions" tar ((:commit . "769eb06ac82dff8aa0239b9ca47cf3240ff0857f") (:keywords "convenience" "clojure" "cider"))]) (clips-mode . [(20131012 1401) nil "Major mode for editing CLIPS code and REPL" tar ((:commit . "a3ab4a3e958d54a16544ec38fe6338f27df20817"))]) (clippy . [(20161028 1254) ((pos-tip (1 0))) "Show tooltip with function documentation at point" single ((:commit . "ad4b5dba4cede6d4b21533186303d3d3e9a2510f") (:url . "https://github.com/Fuco1/clippy.el") (:keywords "docs"))]) (clipmon . [(20160926 329) nil "Clipboard monitor - watch system clipboard, add changes to kill ring/autoinsert" tar ((:commit . "3f985aa2a55fbfd8566425c90e1968998f57b8ee") (:url . "https://github.com/bburns/clipmon") (:keywords "convenience"))]) (cliphist . [(20170208 514) ((popup (0 5 0))) "Read data from clipboard managers at Linux and Mac" tar ((:commit . "acbd9782d82d7ae6bfb22fb0955597b9c5fcbb6c") (:url . "http://github.com/redguardtoo/cliphist") (:keywords "clipboard" "manager" "history"))]) (click-mode . [(20170105 20) ((emacs (24))) "Major mode for the Click Modular Router Project" single ((:commit . "3c31e65b0b8476a15a3e2394fa05477ce42ea790") (:url . "https://github.com/bmalehorn/click-mode") (:keywords "click" "router"))]) (clevercss . [(20131228 1755) nil "A major mode for editing CleverCSS files" single ((:commit . "b8a3c0dd674367c62b1a1ffec84d88fe0c0219bc") (:keywords "languages" "css"))]) (clear-text . [(20160406 1343) nil "Make you use clear text" tar ((:commit . "b50669b6077d6948f72cb3c649281d206e0c2f2b") (:url . "https://github.com/xuchunyang/clear-text.el") (:keywords "convenience"))]) (clean-buffers . [(20160529 1559) ((cl-lib (0 5))) "clean useless buffers" single ((:commit . "1be6c54e3095761b6b64bf749faae3dfce94e72a") (:keywords "convenience" "usability" "buffers"))]) (clean-aindent-mode . [(20150816 2029) nil "Simple indent and unindent, trims indent white-space" single ((:commit . "9ae15997cd75c5625a4f759a3aff39bf202fc36f") (:url . "https://github.com/pmarinov/clean-aindent-mode") (:keywords "indentation" "whitespace" "backspace"))]) (clang-format . [(20170120 137) ((cl-lib (0 3))) "Format code using clang-format" single ((:keywords "tools" "c"))]) (cl-lib-highlight . [(20140127 1312) ((cl-lib (0 3))) "full cl-lib font-lock highlighting" single ((:commit . "fd1b308e6e989791d1df14438efa6b77d20f7c7e") (:url . "https://github.com/skeeto/cl-lib-highlight"))]) (cl-format . [(20160412 1745) nil "CL format routine." tar ((:commit . "4380cb8009c47cc6d9098b383082b93b1aefa460"))]) (circe-notifications . [(20160902 42) ((emacs (24 4)) (circe (2 3)) (alert (1 2))) "Add desktop notifications to Circe." single ((:commit . "80c44441ecd3ae04ae63760aa20afa837c1ed05b") (:url . "https://github.com/eqyiel/circe-notifications"))]) (circe . [(20170528 731) ((cl-lib (0 5))) "Client for IRC in Emacs" tar ((:commit . "13c605e639194c3da0c2e685056fac685f8c76a0") (:url . "https://github.com/jorgenschaefer/circe"))]) (cinspect . [(20150715 1933) ((emacs (24)) (cl-lib (0 5)) (deferred (0 3 1)) (python-environment (0 0 2))) "Use cinspect to look at the CPython source of builtins and other C objects!" single ((:commit . "4e199a90f89b335cccda1518aa0963e0a1d4fbab") (:url . "https://github.com/inlinestyle/cinspect-mode") (:keywords "python"))]) (cil-mode . [(20160622 730) nil "Common Intermediate Language mode" single ((:commit . "a78a88ca9a66a82f069329a96e34b67478ae2d9b") (:url . "https://github.com/ForNeVeR/cil-mode") (:keywords "languages"))]) (ciel . [(20170330 526) ((emacs (24))) "A command that is clone of \"ci\" in vim." single ((:commit . "8c73f78d60ef52d3c395a9629963a63439b8a83e") (:url . "https://github.com/cs14095/ciel.el") (:keywords "convinience"))]) (cider-spy . [(20160313 740) ((emacs (24 4)) (cider (0 10 0)) (dash (2 5 0)) (cl-lib (0 5)) (noflet (0 0 15))) "Spy on CIDER to get info" single ((:commit . "0224608d240e9900e588b6df049c2a87c24fc936") (:url . "http://www.github.com/jonpither/cider-spy") (:keywords "languages" "clojure" "cider" "nrepl"))]) (cider-profile . [(20141120 625) ((cider (0 8 0))) "CIDER profiling support" single ((:commit . "9aa7e404f53f5136ac8d15301ce8ca2924785cb3") (:url . "http://github.com/thunknyc/nrepl-profile") (:keywords "cider" "clojure" "profiling"))]) (cider-hydra . [(20161018 2254) ((cider (0 14 0)) (hydra (0 13 0))) "Hydras for CIDER." single ((:commit . "6bb341143fe16f12be2262b2bcd003a246962676") (:url . "https://github.com/clojure-emacs/cider-hydra") (:keywords "convenience" "tools"))]) (cider-eval-sexp-fu . [(20160907 100) ((emacs (24)) (highlight (0)) (eval-sexp-fu (0 4 0))) "Briefly highlights an evaluated sexp." single ((:commit . "5687e7b33e17f2be40b036dac82da4a5bc6705fb") (:keywords "languages" "clojure" "cider"))]) (cider-decompile . [(20151121 2137) ((cider (0 3 0)) (javap-mode (9))) "decompilation extension for cider" single ((:commit . "5d87035f3c3c14025e8f01c0c53d0ce2c8f56651") (:url . "http://www.github.com/clojure-emacs/cider-decompile") (:keywords "languages" "clojure" "cider"))]) (cider . [(20170630 2342) ((emacs (24 4)) (clojure-mode (5 6 0)) (pkg-info (0 4)) (queue (0 1 1)) (spinner (1 7)) (seq (2 16))) "Clojure Interactive Development Environment that Rocks" tar ((:commit . "d4841ce7c6ba315e8f2f5a4f48fcfb5a773d7d59") (:url . "http://www.github.com/clojure-emacs/cider") (:keywords "languages" "clojure" "cider"))]) (chruby . [(20170509 700) ((cl-lib (0 5))) "Emacs integration for chruby" single ((:commit . "3eddd2f5fc2ac979b496394c74e4aee436b64a28") (:url . "https://github.com/plexus/chruby.el") (:keywords "languages"))]) (chronos . [(20150602 829) nil "multiple simultaneous countdown / countup timers" tar ((:commit . "b360d9dae57aa553cf2a14ffa0756a51ad71de09") (:url . "http://github.com/dxknight/chronos") (:keywords "calendar"))]) (choice-program . [(20161230 1721) ((emacs (24)) (cl-lib (0 5))) "parameter based program" tar ((:commit . "691ced104adc6dbb3ddf8c28563c1cd36eb165b1") (:url . "https://github.com/plandes/choice-program") (:keywords "exec" "execution" "parameter" "option"))]) (chm-view . [(20110616 1019) nil "View CHM file." single ((:url . "http://www.emacswiki.org/emacs/download/chm-view.el") (:keywords "chm" "chm-view"))]) (chinese-yasdcv . [(20170504 321) ((cl-lib (0 5)) (chinese-pyim (0 0 1))) "Yet another frontend for the StarDict command-line program" single ((:commit . "92231de8771f2ffc9f5bb9b4ee08700fdb1a9dcb") (:url . "https://github.com/tumashu/chinese-yasdcv") (:keywords "convenience" "chinese" "dictionary"))]) (chinese-word-at-point . [(20150618 1838) ((cl-lib (0 5))) "Add `chinese-word' thing to `thing-at-point'" single ((:commit . "36a03cce32fe059d2b581cb2e029715c0be81074") (:url . "https://github.com/xuchunyang/chinese-word-at-point.el") (:keywords "convenience" "chinese"))]) (chinese-wbim . [(20150623 2050) nil "Enable Wubi Input Method in Emacs." tar ((:commit . "57ff61ff3895d77335709d24b40cefc4d10b0095"))]) (chinese-remote-input . [(20150110 2103) nil "Input Chinese with a remote input method (e.g. Android Voice Input Method)" single ((:commit . "d05d0bd116421e6fd19f52e9e576431ee5de0858") (:url . "https://github.com/tumashu/chinese-remote-input") (:keywords "convenience" "chinese"))]) (chinese-pyim-wbdict . [(20170217 15) ((chinese-pyim (1 0))) "Some wubi dicts for chinese-pyim" tar ((:commit . "59856a7199dde278c33f6f8d8e21df4944ba996a") (:url . "https://github.com/tumashu/chinese-pyim-wbdict") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete"))]) (chinese-pyim-greatdict . [(20170513 1833) nil "A chinese-pyim dict, which include three million words." tar ((:commit . "8efd9321d21d5daabdb32cb3696bc7c7b83ce991") (:url . "https://github.com/tumashu/chinese-pyim-greatdict") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete"))]) (chinese-pyim-basedict . [(20160723 438) nil "The default pinyin dict of chinese-pyim" tar ((:commit . "3bca2760d78fd1195dbd4c2d570db955023a5623") (:url . "https://github.com/tumashu/chinese-pyim-basedict") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete"))]) (chinese-pyim . [(20170512 735) ((cl-lib (0 5)) (pos-tip (0 4)) (popup (0 1)) (async (1 6)) (chinese-pyim-basedict (0 1))) "A Chinese input method which support quanpin, shuangpin and wubi." tar ((:commit . "d57d0fd47565dc087724a68c6b3abd16a58625ae") (:url . "https://github.com/tumashu/chinese-pyim") (:keywords "convenience" "chinese" "pinyin" "input-method"))]) (chinese-number . [(20161007 2209) nil "Convert numbers between Arabic and Chinese formats" single ((:commit . "7311c2a0c5eea5f016a90d733dfe75144c302fb2") (:url . "https://github.com/zhcosin/chinese-number"))]) (chinese-fonts-setup . [(20170512 1) ((cl-lib (0 5))) "Emacs fonts config tool enforcing double-width Chinese character display" tar ((:commit . "a88f45239ca73e95eb6bac923590f1d108b822ca") (:url . "https://github.com/tumashu/chinese-fonts-setup") (:keywords "convenience" "chinese" "font"))]) (chinese-conv . [(20160218 1315) ((cl-lib (0 5))) "Conversion between Chinese Characters with opencc or cconv" single ((:commit . "2e5ba28b24c32d8d1da81cf9877c79abbf2e9bbb") (:url . "https://github.com/gucong/emacs-chinese-conv"))]) (chicken-scheme . [(20141116 1139) nil "Scheme-mode extensions for Chicken Scheme" single ((:commit . "19b0b08b5592063e852cae094b394c7d1f923639") (:url . "http://github.com/dleslie/chicken-scheme"))]) (cherry-blossom-theme . [(20150621 2042) ((emacs (24 0))) "a soothing color theme for Emacs24." single ((:commit . "eea7653e00f35973857ee23b27bc2fae5e753e50") (:url . "https://github.com/inlinestyle/emacs-cherry-blossom-theme"))]) (chef-mode . [(20111121 700) nil "minor mode for editing an opscode chef repository" single ((:commit . "c333dd3f9229c4f35fe8c4495b21049ba730cc42") (:keywords "chef" "knife"))]) (cheerilee . [(20160313 1135) ((xelb (0 1))) "Toolkit library" tar ((:commit . "41bd81b5b0bb657241ceda5be6af5e07254d7376") (:keywords "tools"))]) (chee . [(20161212 1525) ((dash (2 12 1)) (s (1 10 0)) (f (0 18 2))) "Interface to chee using dired and image-dired" tar ((:commit . "a986cce6fe0290934dedfb7afcfdcf5f5eb47a30") (:url . "https://github.com/eikek/chee/tree/master/emacs"))]) (checkbox . [(20141116 1658) ((emacs (24)) (cl-lib (0 5))) "Quick manipulation of textual checkboxes" single ((:commit . "335afa4404adf72973195a580458927004664d98") (:url . "http://github.com/camdez/checkbox.el") (:keywords "convenience"))]) (cheatsheet . [(20170126 1350) ((emacs (24)) (cl-lib (0 5))) "create your own cheatsheet" single ((:commit . "e4f8e0110167ea16a17a74517d1f10cb7ff805b8") (:url . "http://github.com/darksmile/cheatsheet/") (:keywords "convenience" "usability"))]) (cheat-sh . [(20170627 422) ((emacs (24))) "Interact with cheat.sh" single ((:commit . "6409bb66241255cc9a0362f2acdcb0b34344f9f2") (:url . "https://github.com/davep/cheat-sh.el") (:keywords "docs" "help"))]) (chatwork . [(20170510 2142) nil "ChatWork client for Emacs" single ((:commit . "fea231d479f06bf40dbfcf45de143eecc9ed744c") (:url . "https://github.com/ataka/chatwork") (:keywords "web"))]) (charmap . [(20160309 146) nil "Unicode table for Emacs" single ((:commit . "bd4b3e466d7a9433cf35167e3a68ec74fe631bb2") (:url . "https://github.com/lateau/charmap") (:keywords "unicode" "character" "ucs"))]) (char-menu . [(20170518 2247) ((emacs (24 3)) (avy-menu (0 1))) "Create your own menu for fast insertion of arbitrary symbols" single ((:commit . "f4d8bf8fa6787e2aaca2ccda5223646541d7a4b2") (:url . "https://github.com/mrkkrp/char-menu") (:keywords "convenience" "editing"))]) (chapel-mode . [(20160504 108) nil "a CC Mode for Chapel derived from derived-mode-ex.el" single ((:commit . "6e095edd7639f5f0a81e14d6412410b49466697e") (:keywords "chapel" "languages" "oop"))]) (change-inner . [(20150707 844) ((expand-region (0 7))) "Change contents based on semantic units" single ((:commit . "52c543a4b9808c0d15b565fcdf646c9779de33e8") (:keywords "convenience" "extensions"))]) (challenger-deep-theme . [(20170623 311) ((emacs (24))) "challenger-deep Theme" single ((:commit . "22022667437e94c2309c7c77a14268970de16146") (:url . "https://github.com/MaxSt/challenger-deep"))]) (cg . [(20170201 347) nil "major mode for editing Constraint Grammar files" single ((:url . "http://beta.visl.sdu.dk/constraint_grammar.html") (:keywords "languages"))]) (cff . [(20160118 1218) ((cl-lib (0 5)) (emacs (24))) "Search of the C/C++ file header by the source and vice versa" single ((:commit . "b6ab2a28e64ef06f281ec74cfe3114e450644dfa") (:url . "https://github.com/fourier/cff") (:keywords "find-file"))]) (cfengine-code-style . [(20131209 411) nil "C code style for CFEngine project." single ((:commit . "e33115d8a7516c49ea6ac7c570e9c63d34650672") (:url . "https://github.com/cfengine/core"))]) (ceylon-mode . [(20170626 1403) ((emacs (24))) "Major mode for editing Ceylon source code" single ((:commit . "cd027d71a6cd29b94ba46919b4e067b86f267fc6") (:url . "https://github.com/lucaswerkmeister/ceylon-mode") (:keywords "languages" "ceylon"))]) (cerbere . [(20140418 715) ((s (1 9 0)) (f (0 16 0)) (pkg-info (0 5))) "Unit testing in Emacs for several programming languages" tar ((:commit . "dd2105c372b469954e665a5aa0c3766b4922ce6a") (:url . "https://github.com/nlamirault/cerbere") (:keywords "python" "go" "php" "tests" "tdd"))]) (centimacro . [(20140306 627) nil "Assign multiple macros as global key bindings" single ((:commit . "1b97a9b558ed9c49d5da1bfbf29b2506575c2742") (:url . "https://github.com/abo-abo/centimacro") (:keywords "macros"))]) (centered-window-mode . [(20170528 25) ((emacs (24 4))) "Center the text when there's only one window" single ((:commit . "c46af782ada0d4062d7de5cbbdc7c7471fdd0d15") (:url . "https://github.com/anler/centered-window-mode") (:keywords "faces" "windows"))]) (centered-cursor-mode . [(20151001 634) nil "cursor stays vertically centered" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/centered-cursor-mode.el") (:keywords "convenience"))]) (celery . [(20170225 124) ((emacs (24)) (dash-functional (2 11 0)) (s (1 9 0)) (deferred (0 3 2))) "a minor mode to draw stats from celery and more?" single ((:commit . "51197d74f5eaa8ae09144af7663a2f4277f07d16") (:url . "https://github.com/ardumont/emacs-celery") (:keywords "celery" "convenience"))]) (cedit . [(20141231 814) nil "paredit-like commands for c-like languages" single ((:commit . "0878d851b6307c162bfbddd2bb02789e5e27bc2c") (:url . "http://hins11.yu-yake.com/"))]) (cdnjs . [(20161031 822) ((dash (2 13 0)) (deferred (0 4)) (f (0 17 2)) (pkg-info (0 5))) "A front end for http://cdnjs.com" single ((:commit . "ce19880d3ec3d81e6c665d0b1dfea99cc7a3f908") (:url . "https://github.com/yasuyk/cdnjs.el") (:keywords "tools"))]) (cdlatex . [(20140707 426) nil "Fast input methods for LaTeX environments and math" single ((:commit . "ff534912b93fc2c7a6b191b1c8d6d699a46bbb01") (:keywords "tex"))]) (cdb . [(20151205 543) nil "constant database (cdb) reader for Emacs Lisp" single ((:commit . "d6e662ffce7a48b86328071ce78010d39d2a672c") (:keywords "cdb"))]) (cd-compile . [(20141108 1157) nil "run compile in a specific directory" single ((:commit . "10284ccae86afda4a37b09ba90acd1e2efedec9f"))]) (ccc . [(20151205 543) nil "buffer local cursor color control library" single ((:commit . "d6e662ffce7a48b86328071ce78010d39d2a672c") (:url . "https://github.com/skk-dev/ddskk/blob/master/READMEs/README.ccc.org") (:keywords "cursor"))]) (cbm . [(20160926 1150) ((cl-lib (0 5))) "Switch to similar buffers." single ((:commit . "bf8cbbcef82e4643c5f0399f0198f606275af08c") (:url . "http://github.com/akermu/cbm.el") (:keywords "buffers"))]) (caskxy . [(20140513 839) ((log4e (0 2 0)) (yaxception (0 1))) "Control Cask in Emacs" single ((:commit . "dc18dcab7ed526070ab76de071c9c5272e6ac40e") (:url . "https://github.com/aki2o/caskxy") (:keywords "convenience"))]) (cask-package-toolset . [(20170411 1430) ((emacs (24)) (cl-lib (0 3)) (s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) "Toolsettize your package" tar ((:commit . "aed1f12b6072a2467e0efa23c3265aaa9f414425") (:url . "http://github.com/AdrieanKhisbe/cask-package-toolset.el") (:keywords "convenience" "tools"))]) (cask-mode . [(20160410 749) ((emacs (24 3))) "major mode for editing Cask files" single ((:commit . "7c6719d3bb4fe552958634bd5a11abc56681f3a7"))]) (cask . [(20161024 1205) ((s (1 8 0)) (dash (2 2 0)) (f (0 16 0)) (epl (0 5)) (shut-up (0 1 0)) (cl-lib (0 3)) (package-build (0 1))) "Cask: Project management for Emacs package development" tar ((:commit . "0a2e8436e02af6ca688b25ba90a19505a6113296") (:url . "http://github.com/cask/cask") (:keywords "speed" "convenience"))]) (caseformat . [(20160115 815) ((emacs (24)) (cl-lib (0 5)) (dash (2 12 1)) (s (1 10 0))) "Format based letter case converter" single ((:commit . "92a31f6a7cae0b4e2af106cd6f2b0abe6c2d8921") (:url . "https://github.com/HKey/caseformat") (:keywords "convenience"))]) (caroline-theme . [(20160317 2220) ((emacs (24))) "A trip down to New Orleans..." single ((:commit . "222fd483db304509f9e422dc82883d808e023ceb") (:url . "https://github.com/xjackk/carolines-theme"))]) (cargo . [(20170621 1316) ((emacs (24 3)) (rust-mode (0 2 0))) "Emacs Minor Mode for Cargo, Rust's Package Manager." tar ((:commit . "b0487f95a7de7a1d6f03cdd05220f633977d65a2") (:keywords "tools"))]) (capture . [(20130828 944) nil "screencasting with \"avconv\" or \"ffmpeg\"" tar ((:commit . "1bb26060311da76767f70096218313fc93b0c806"))]) (caml . [(20151009 845) nil "No description available." tar nil]) (camcorder . [(20160404 2134) ((emacs (24)) (names (20150000)) (cl-lib (0 5))) "Record screencasts in gif or other formats." single ((:commit . "b13d939990e6709492efefc0945798adc1c0fcb9") (:url . "http://github.com/Bruce-Connor/camcorder.el") (:keywords "multimedia" "screencast"))]) (calmer-forest-theme . [(20130925 2210) nil "Darkish theme with green/orange tint" single ((:commit . "87ba7bae389084d13fe3bc34e0c923017eda6ba0") (:url . "https://github.com/caldwell/calmer-forest-theme"))]) (calfw-gcal . [(20120111 200) nil "edit Google calendar for calfw.el." tar ((:commit . "14aab20687d6cc9e6c5ddb9e11984c4e14c3d870") (:url . "https://github.com/myuhe/calfw-gcal.el") (:keywords "convenience" "calendar" "calfw.el"))]) (calfw . [(20170410 1920) nil "Calendar view framework on Emacs" tar ((:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:url . "https://github.com/kiwanami/emacs-calfw") (:keywords "calendar"))]) (calendar-norway . [(20160827 1316) nil "Norwegian calendar" single ((:commit . "8501b2ee515e995f345365391b03f44c812cabdf") (:keywords "calendar" "norwegian" "localization"))]) (cal-china-x . [(20170122 1100) ((cl-lib (0 5))) "Chinese localization, lunar/horoscope/zodiac info and more..." tar ((:commit . "2e9f8e17969a32268fa1c69b500d28590338a98e") (:url . "https://github.com/xwl/cal-china-x"))]) (cake2 . [(20140626 542) ((dash (2 6 0)) (s (1 9 0)) (f (0 16 2)) (ht (2 0)) (json (1 2)) (cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP2 Minor Mode" tar ((:commit . "caffb646c86333b8747cefeba070d57ac4fbaf00") (:url . "http://code.101000lab.org"))]) (cake-inflector . [(20140415 158) ((s (1 9 0))) "Lazy porting CakePHP infrector.php to el" single ((:commit . "a1d338ec4840b1b1bc14f7f9298c07e2c1d2d8fc") (:url . "https://github.com/k1LoW/emacs-cake-inflector"))]) (cake . [(20140603 2131) ((cake-inflector (1 1 0)) (historyf (0 0 8)) (anything (1 3 9))) "CakePHP Minor Mode" tar ((:commit . "a7c9f3bee71eb3865060123d4d98e5397c2f967e") (:url . "https://github.com/k1LoW/emacs-cake"))]) (cacoo . [(20120319 1659) ((concurrent (0 3 1))) "Minor mode for Cacoo : http://cacoo.com" tar ((:commit . "c9fa04fbe97639b24698709530361c2bb5f3273c"))]) (cache . [(20111019 1600) nil "implementation of a hash table whose key-value pairs expire" single ((:commit . "7499586b6c8224df9f5c5bc4dec96b008258d580"))]) (cabledolphin . [(20160204 138) ((emacs (24 4)) (seq (1 0))) "capture Emacs network traffic" single ((:commit . "fffc192cafa61558e924323d6da8166fe5f2a6f9") (:keywords "comm"))]) (c0-mode . [(20151110 1052) nil "Major mode for editing C0 files" tar ((:commit . "c214093c36864d6208fcb9e6a72413ed17ed5d60") (:url . "http://c0.typesafety.net/") (:keywords "c0" "languages"))]) (c-eldoc . [(20170618 845) nil "helpful description of the arguments to C functions" single ((:commit . "0899f497e98e285d7d2e9cf897e305587b4b0790") (:url . "http://github.com/nflath/c-eldoc"))]) (c-c-combo . [(20151223 1855) nil "Make stuff happen when you reach a target wpm" tar ((:commit . "a261a833499a7fdc29610863b3aafc74818770ba") (:url . "https://www.github.com/CestDiego/c-c-combo.el"))]) (button-lock . [(20150223 554) nil "Clickable text defined by regular expression" single ((:commit . "f9082feb329432fcf2ac49a95e64bed9fda24d58") (:url . "http://github.com/rolandwalker/button-lock") (:keywords "mouse" "button" "hypermedia" "extensions"))]) (buttercup . [(20170701 429) nil "Behavior-Driven Emacs Lisp Testing" tar ((:commit . "b6deeffe032527696e32623b69bdf07b538a315e"))]) (butler . [(20150811 1708) ((deferred (0 3 2)) (json (1 2)) (emacs (24))) "Emacs client for Jenkins" tar ((:commit . "8ceb35737107572455cca9a61ff46b3ff78f1016"))]) (busybee-theme . [(20130920 942) nil "port of vim's mustang theme" single ((:commit . "70850d1781ff91c4ce125a31ed451d080f8da643") (:url . "http://github.com/mswift42/busybee-theme"))]) (buster-snippets . [(20151125 210) ((yasnippet (0 8 0))) "Yasnippets for the Buster javascript testing framework" tar ((:commit . "bb8769dae132659858e74d52f3f4e8790399423a") (:keywords "snippets"))]) (buster-mode . [(20140928 513) nil "Minor mode to speed up development when writing tests with Buster.js" single ((:commit . "de6958ef8369400922618b8d1e99abfa91b97ac5") (:keywords "buster" "testing" "javascript"))]) (bury-successful-compilation . [(20150328 1728) nil "Bury the *compilation* buffer after successful compilation" single ((:commit . "52da2c07419beceab9b4d426d76adb3dcf2548d1") (:keywords "compilation"))]) (bundler . [(20160815 215) ((inf-ruby (2 1)) (cl-lib (0 5))) "Interact with Bundler from Emacs" single ((:commit . "f981f67c33b42243e57a78c358dffff70022b56b") (:url . "http://github.com/endofunky/bundler.el") (:keywords "bundler" "ruby"))]) (build-status . [(20170323 1621) ((cl-lib (0 5))) "Mode line build status indicator" single ((:commit . "01bb9cc1776e8eaab68147175aee9879d9541c4b") (:url . "http://github.com/sshaw/build-status") (:keywords "mode-line" "ci" "circleci" "travis-ci"))]) (build-helper . [(20161009 1055) ((projectile (0 9 0))) "Utilities to help build code" single ((:commit . "7a6fe71125a26ed1c492dab77cc688a7fe1d68ac") (:url . "http://github.com/afonso360/build-helper") (:keywords "convenience"))]) (bui . [(20170125 14) ((emacs (24 3)) (dash (2 11 0))) "Buffer interface library" tar ((:commit . "2742bd1cd9e232cac68d5843e05c043827a2669f") (:url . "https://github.com/alezost/bui.el") (:keywords "tools"))]) (bug-reference-github . [(20131202 1303) nil "Automatically set `bug-reference-url-format' in Github repositories." tar ((:commit . "6f693e1f659d9a75abea3f23e95946c7f67138cd") (:url . "https://github.com/arnested/bug-reference-github") (:keywords "programming" "tools"))]) (bufshow . [(20130726 1138) ((emacs (24 1))) "A simple presentation tool for Emacs." single ((:commit . "d60a554e7239e6f7520d9c3436d5ecdbc9cf6957") (:url . "https://github.com/pjones/bufshow"))]) (buffer-utils . [(20140512 700) nil "Buffer-manipulation utility functions" single ((:commit . "685b13457e3a2085b7584e41365d2aa0779a1b6f") (:url . "http://github.com/rolandwalker/buffer-utils") (:keywords "extensions"))]) (buffer-stack . [(20101223 220) nil "Enhanced intelligent switch-to-other-buffer replacement." single ((:url . "http://www.sixfingeredman.net/proj/xemacs") (:keywords "buffer" "buffers" "switching buffers"))]) (buffer-sets . [(20170505 829) ((cl-lib (0 5))) "Sets of Buffers for Buffer Management" tar ((:commit . "dd47af82f6cd5c4bab304e41518d4dc06bd6e353") (:url . "http://github.com/swflint/buffer-sets") (:keywords "buffer-management"))]) (buffer-move . [(20160615 1103) nil "easily swap buffers" single ((:commit . "cb517ecf8409b5fdcda472d7190c6021f0c49751") (:url . "https://github.com/lukhas/buffer-move") (:keywords "lisp" "convenience"))]) (buffer-manage . [(20170109 1220) ((emacs (25)) (choice-program (0 1))) "manage buffers" single ((:commit . "e320ae7e05803551d8b534aaee84cae6e53155e2") (:url . "https://github.com/plandes/buffer-manage") (:keywords "interactive" "buffer" "management"))]) (buffer-flip . [(20160811 713) ((key-chord (20150808))) "Use key-chord to cycle through buffers like Alt-Tab in Windows" single ((:commit . "386067141ca77848b266e068f8c6baf6b4c2ab5b") (:url . "https://github.com/killdash9/buffer-flip.el") (:keywords "convenience"))]) (buffer-buttons . [(20150106 639) nil "Define, save, and load code-safe buttons in files for emacs" single ((:commit . "2feb8494fa7863b98256bc85da670d74a3a8a975") (:url . "https://github.com/rpav/buffer-buttons"))]) (bubbleberry-theme . [(20141017 244) ((emacs (24 1))) "A theme based on LightTable for Emacs24" single ((:commit . "22e9adf4586414024e4592972022ec297321b320") (:url . "https://github.com/jasonm23/emacs-bubbleberry-theme"))]) (bts-github . [(20170401 549) ((bts (0 0 1)) (gh (0 8 2))) "A plugin of bts.el for GitHub" single ((:commit . "ef2cf9202dc2128e5efdb613bfde9276a8cd95ad") (:url . "https://github.com/aki2o/emacs-bts-github") (:keywords "convenience" "git" "github"))]) (bts . [(20151109 533) ((widget-mvc (0 0 2)) (log4e (0 3 0)) (yaxception (0 3 3)) (dash (2 9 0)) (s (1 9 0)) (pos-tip (0 4 5))) "A unified UI for various bug tracking systems" single ((:commit . "df42d58a36447697f93b56e69f5e700b2baef1f9") (:url . "https://github.com/aki2o/emacs-bts") (:keywords "convenience"))]) (btc-ticker . [(20151113 659) ((json (1 2)) (request (0 2 0))) "Shows latest bitcoin price" single ((:commit . "845235b545f070d0812cd1654cbaa4997565824f") (:keywords "news"))]) (bshell . [(20170116 1117) ((emacs (25)) (buffer-manage (0 1))) "manage and track multiple inferior shells" single ((:commit . "0abd93439895851c1ad3037b0df7443e577ed1ba") (:url . "https://github.com/plandes/bshell") (:keywords "interactive" "shell" "management"))]) (bs-ext . [(20130824 459) nil "Extensions to emacs buffer-selection library (bs.el)" single ((:url . "http://www.emacswiki.org/emacs/download/bs-ext.el") (:keywords "convenience" "files"))]) (browse-url-dwim . [(20140731 1222) ((string-utils (0 3 2))) "Context-sensitive external browse URL or Internet search" single ((:commit . "3d611dbb167c286109ac53995ad68286d87aafb9") (:url . "http://github.com/rolandwalker/browse-url-dwim") (:keywords "hypermedia"))]) (browse-kill-ring . [(20160125 9) nil "interactively insert items from kill-ring" single ((:commit . "c7df6c8f5fe1e82d17b23da6d43a038784721d10") (:url . "https://github.com/browse-kill-ring/browse-kill-ring") (:keywords "convenience"))]) (browse-kill-ring+ . [(20170221 757) ((browse-kill-ring (0))) "Extensions to `browse-kill-ring.el'." single ((:url . "https://www.emacswiki.org/emacs/download/browse-kill-ring%2b.el") (:keywords "convenience"))]) (browse-at-remote . [(20170624 309) ((f (0 17 2)) (s (1 9 0)) (cl-lib (0 5))) "Open github/gitlab/bitbucket/stash page from Emacs" single ((:commit . "e8b7533f6c37c4660e4ba97cd4856383f4e4ce32") (:keywords "github" "gitlab" "bitbucket" "convenience"))]) (broadcast . [(20151204 1812) ((emacs (24 4))) "Links buffers together for simultaneous editing." single ((:commit . "f6f9cd2e0e3f8c31d6b8e7446c27eb0e50b25f16") (:url . "https://github.com/killdash9/broadcast.el") (:keywords "convenience" "frames" "link" "cursors"))]) (brainfuck-mode . [(20150113 42) ((langdoc (20130601 1450))) "Brainfuck mode for Emacs" single ((:commit . "36e69552bb3b97a4f888d362c59845651bd0d492") (:url . "https://github.com/tom-tan/brainfuck-mode/") (:keywords "brainfuck" "langdoc"))]) (bracketed-paste . [(20160407 1648) ((emacs (24 3))) "bracketed paste mode support within emacs -nw" single ((:commit . "843ce3bbb63d560face889e13a57a2f7543957d5") (:keywords "terminals"))]) (bpr . [(20160514 458) ((emacs (24))) "Background Process Runner" tar ((:commit . "8efa52363ae8f86ff06f2677e2e0fb963aa4c186") (:url . "https://github.com/ilya-babanov/emacs-bpr") (:keywords "background" "async" "process" "management"))]) (bpe . [(20141228 1405) ((emacs (24 1))) "Blog from Org mode to Blogger" single ((:commit . "7b5b25f83506e6c9f4075d3803fa32404943a189") (:url . "https://github.com/yuutayamada/bpe") (:keywords "blogger" "blog"))]) (boxquote . [(20170418 835) ((cl-lib (0 5))) "Quote text with a semi-box." single ((:commit . "b6a4ad3ee5b327bd3b1bf65f8733bd301fe59883") (:url . "https://github.com/davep/boxquote.el") (:keywords "quoting"))]) (boron-theme . [(20150117 952) ((emacs (24 0))) "an Emacs 24 theme based on Boron (tmTheme)" single ((:commit . "ea5873139424d6ca013b915876daf0399432015b") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (borland-blue-theme . [(20160117 521) ((emacs (24 1))) "Blue/yellow theme based on old DOS Borland/Turbo C IDE" single ((:commit . "db74eefebbc89d3c62575f8f50b319e87b4a3470") (:url . "http://github.com/fourier/borland-blue-theme") (:keywords "themes"))]) (boon . [(20170528 2317) ((emacs (25 1)) (expand-region (0 10 0)) (dash (2 12 0)) (multiple-cursors (1 3 0))) "Ergonomic Command Mode for Emacs." tar ((:commit . "4b76f0a86c84b0e4032cdee787c3ee55372e6c31"))]) (bool-flip . [(20161215 739) ((emacs (24 3))) "flip the boolean under the point" single ((:commit . "f58a9a7b9ab875bcfbd57c8262697ae404eb4485") (:url . "http://github.com/michaeljb/bool-flip/") (:keywords "boolean" "convenience" "usability"))]) (bookmark+ . [(20170626 844) nil "Bookmark+: extensions to standard library `bookmark.el'." tar ((:url . "https://www.emacswiki.org/emacs/download/bookmark%2b.el") (:keywords "bookmarks" "bookmark+" "projects" "placeholders" "annotations" "search" "info" "url" "eww" "w3m" "gnus"))]) (boogie-friends . [(20170621 1207) ((cl-lib (0 5)) (dash (2 10 0)) (flycheck (0 23)) (yasnippet (0 9 0 1)) (company (0 8 12))) "A collection of programming modes for Boogie, Dafny, and Z3 (SMTLIB v2)." tar ((:commit . "27c372592e19678bda5012f1ec3c60bcf9df78d4"))]) (bonjourmadame . [(20160112 156) nil "Say \"Hello ma'am!\"" single ((:commit . "4b4baaec19d8893268a2c93b3c35ac2581d02ba4"))]) (bongo . [(20170312 808) ((cl-lib (0 5)) (emacs (24 1))) "play music with Emacs" tar ((:commit . "1961b2e05c01c03d0dd6527988d1348610359d0d"))]) (bog . [(20161109 1647) ((cl-lib (0 5))) "Extensions for research notes in Org mode" single ((:commit . "cf7817de3f37ce2404ee637a655f1a511b829585") (:url . "https://github.com/kyleam/bog") (:keywords "bib" "outlines"))]) (bnfc . [(20160605 1227) ((emacs (24 3))) "Define context-free grammars for the BNFC tool" single ((:commit . "1b58df1dd0cb9b81900632fb2843a03b94f56fdb") (:url . "https://github.com/jmitchell/bnfc-mode") (:keywords "languages" "tools"))]) (bm . [(20170103 1424) nil "Visible bookmarks in buffer." tar ((:commit . "dd5dc454c62ceae6432cef6639e08db6ea6a865f") (:url . "https://github.com/joodland/bm") (:keywords "bookmark" "highlight" "faces" "persistent"))]) (blog-minimal . [(20170311 555) ((ht (1 5)) (simple-httpd (1 4 6)) (mustache (0 22)) (s (1 11 0)) (org (9 0 3))) "a very simple static site generator based on org mode" tar ((:commit . "d679d74039ecc114b037800c8a94303265b9542a") (:url . "https://github.com/thiefuniverse/blog-minimal") (:keywords "blog" "org"))]) (blog-admin . [(20170430 721) ((ctable (0 1 1)) (s (1 10 0)) (f (0 17 3)) (names (20151201 0)) (cl-lib (0 5))) "Blog admin for emacs with hexo/org-page supported" tar ((:commit . "a7d3fa9317e9aa0b492e61b0706c4d9ca2f7a4b5") (:keywords "tools" "blog" "org" "hexo" "org-page"))]) (blockdiag-mode . [(20160426 2224) ((emacs (24 3))) "Major mode for editing blockdiag files" single ((:commit . "f3b21ba433d60327cebd103ae4492200750e24a9") (:url . "https://github.com/xcezx/xdiag-mode"))]) (bln-mode . [(20170112 527) nil "binary line navigation minor mode for cursor movement in long lines" single ((:commit . "1de92cec97a4693b8b932713e333730118db9183") (:url . "https://github.com/mgrachten/bln-mode") (:keywords "motion" "location" "cursor" "convenience"))]) (bliss-theme . [(20141115 2301) ((emacs (24 0))) "an Emacs 24 theme based on Bliss (tmTheme)" single ((:commit . "2c6922cb24118722819bea79a981f066039d34a3") (:url . "https://github.com/emacsfodder/tmtheme-to-deftheme"))]) (blgrep . [(20150401 716) ((clmemo (20140321 715))) "Block grep" tar ((:commit . "605beda210610a5829750a987f5fcebea97af546") (:keywords "tools" "convenience"))]) (blank-mode . [(20130824 459) nil "minor mode to visualize TAB, (HARD) SPACE, NEWLINE" single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ViniciusJoseLatorre") (:keywords "data" "wp"))]) (blackboard-theme . [(20161215 2256) ((emacs (24))) "TextMate Blackboard Theme" single ((:commit . "d8b984f2541bb86eb4363a2b4c94631e49843d4a") (:url . "https://github.com/don9z/blackboard-theme"))]) (blackboard-bold-mode . [(20160812 1906) ((cl-lib (0 5))) "Easily insert Unicode mathematical double-struck characters" single ((:commit . "5299cb064ba71baa3e331b8560bf8dd38cbbc4ed") (:url . "https://github.com/grettke/blackboard-bold-mode") (:keywords "unicode" "double struck" "blackboard bold" "math" "mathematical"))]) (bitlbee . [(20151202 1600) nil "Help get Bitlbee (http://www.bitlbee.org) up and running." single ((:commit . "3a92a4119e0c007df2c7dcf1b1c3a5f23ee40e05"))]) (bitbucket . [(20170404 2146) ((emacs (24)) (request (0 1 0)) (s (1 9 0))) "Bitbucket API wrapper" tar ((:commit . "5e663da1bd38a14c1ecf4d66a79d4321ac833bcf") (:url . "http://github.com/tjaartvdwalt/bitbucket.el/") (:keywords "bitbucket"))]) (bitbake . [(20160613 156) ((emacs (24 1)) (dash (2 6 0)) (mmm-mode (0 5 4)) (s (1 10 0))) "Running bitbake from emacs" single ((:commit . "4d9f0a4ffb7b9c6cd4d8271f1b429ca1bb7e9130") (:url . "https://github.com/canatella/bitbake-el") (:keywords "convenience"))]) (bison-mode . [(20160616 2252) nil "Major mode for editing bison, yacc and lex files." single ((:commit . "314af3b7af7eb897fd3932616cb8600a85228cea") (:keywords "bison-mode" "yacc-mode"))]) (birds-of-paradise-plus-theme . [(20130419 1429) nil "A brown/orange light-on-dark theme for Emacs 24 (deftheme)." single ((:commit . "bb9f9d4ef7f7872a388ec4eee1253069adcadb6f") (:url . "https://github.com/jimeh/birds-of-paradise-plus-theme.el") (:keywords "themes"))]) (bing-dict . [(20170604 1831) nil "Minimalists' English-Chinese Bing dictionary" single ((:commit . "d4b261739e53e8ed8fa5db3d3946de82c0ab8e34") (:url . "https://github.com/cute-jumper/bing-dict.el") (:keywords "extensions"))]) (bind-map . [(20161207 711) ((emacs (24 3))) "Bind personal keymaps in multiple locations" single ((:commit . "bf4181e3a41463684adfffc6c5c305b30480e30f") (:url . "https://github.com/justbur/emacs-bind-map"))]) (bind-key . [(20161218 1520) nil "A simple way to manage personal keybindings" single ((:commit . "fd462e8aeaf858fec0bc63a41bd10ff8d445490c") (:url . "https://github.com/jwiegley/use-package") (:keywords "keys" "keybinding" "config" "dotemacs"))]) (bind-chord . [(20160530 1042) ((bind-key (1 0)) (key-chord (0 6))) "key-chord binding helper for use-package-chords" single ((:commit . "e8551ce8a514d865831d3a889acece79103fc627") (:url . "https://github.com/waymondo/use-package-chords") (:keywords "convenience" "tools" "extensions"))]) (binclock . [(20170418 812) ((cl-lib (0 5))) "Display the current time using a binary clock." single ((:commit . "38ef6531fed16eb2fa69824fbdafac998cf201ac") (:url . "https://github.com/davep/binclock.el") (:keywords "games" "time" "display"))]) (bifocal . [(20170625 1258) ((emacs (24 4))) "Split-screen scrolling for comint-mode buffers" single ((:commit . "19b54d1de8938448c88afd495d749fc7b6f6d281") (:url . "https://github.com/riscy/bifocal-mode") (:keywords "frames" "processes" "tools"))]) (bibtex-utils . [(20170221 1757) nil "Provides utilities for extending BibTeX mode" single ((:commit . "36953c6bd1e14eac553834720f383d4114585f55") (:url . "https://github.com/plantarum/bibtex-utils") (:keywords "bibtex"))]) (bibslurp . [(20151202 1546) ((s (1 6 0)) (dash (1 5 0))) "retrieve BibTeX entries from NASA ADS" single ((:commit . "aeba96368f2a06959e4fe945375ce2a54d34b189") (:url . "https://github.com/mkmcc/bibslurp") (:keywords "bibliography" "nasa ads"))]) (bibretrieve . [(20170417 620) ((auctex (11 87)) (emacs (24 3))) "Retrieving BibTeX entries from the web" tar ((:commit . "813730a8967e003ca67342cc45b62c17cda77a7c") (:keywords "bibtex" "latex" "mathscinet" "arxiv" "zbmath"))]) (biblio-core . [(20160901 1115) ((emacs (24 3)) (let-alist (1 0 4)) (seq (1 11)) (dash (2 12 1))) "A framework for looking up and displaying bibliographic entries" single ((:commit . "a5a68fcf677f286f205f32dc7486f6c9f66aa6af") (:url . "http://github.com/cpitclaudel/biblio.el") (:keywords "bib" "tex" "convenience" "hypermedia"))]) (biblio . [(20161014 1604) ((emacs (24 3)) (biblio-core (0 2))) "Browse and import bibliographic references from CrossRef, arXiv, DBLP, HAL, Dissemin, and doi.org" tar ((:commit . "a5a68fcf677f286f205f32dc7486f6c9f66aa6af"))]) (bfbuilder . [(20150924 950) ((cl-lib (0 3))) "A brainfuck development environment with interactive debugger" single ((:commit . "49560bdef131fa5672dab660e0c62376dbdcd906") (:url . "http://hins11.yu-yake.com/"))]) (bf-mode . [(20130403 742) nil "Browse file persistently on dired" single ((:commit . "7cc4d09aed64d9db6be95646f5f5067de68f8895") (:url . "https://github.com/emacs-jp/bf-mode") (:keywords "convenience"))]) (better-shell . [(20170215 1020) ((emacs (24 4))) "Better shell management" single ((:commit . "4ee06b8791f7363a19109d9ea6c5ee95ce998d33") (:url . "https://github.com/killdash9/better-shell") (:keywords "convenience"))]) (better-registers . [(20140813 119) nil "facilities for more powerful registers" single ((:keywords "register" "macro"))]) (better-defaults . [(20170613 2104) nil "Fixing weird quirks and poor defaults" single ((:commit . "12d9e6dbf24a8a3369b19650d74471b17b27f78d") (:url . "https://github.com/technomancy/better-defaults") (:keywords "convenience"))]) (bert . [(20131117 214) nil "BERT serialization library for Emacs" single ((:commit . "a3eec6980a725aa4abd2019e4c00246450260490") (:keywords "comm" "data"))]) (benchmark-init . [(20150905 238) nil "Benchmarks Emacs require and load calls" tar ((:commit . "8e4c32f32ec869fe521fb4d3c0a69406830b4178") (:keywords "benchmark"))]) (beginend . [(20170625 850) ((emacs (24 4))) "Redefine M-< and M-> for some modes" single ((:commit . "c99bb0b2674ab704ba537fb46e5bf5d60376ea55"))]) (beeminder . [(20160209 1903) ((org (7))) "Emacs interface for Beeminder" single ((:commit . "a4e159250bac89bc25ced8523a5eac2a951cd5b6") (:url . "http://www.philnewton.net/code/beeminder-el/") (:keywords "beeminder"))]) (beacon . [(20170404 906) ((seq (2 14))) "Highlight the cursor whenever the window scrolls" single ((:commit . "f1a3ff5ea8fecf9bf250205de66aedf0bf49c35b") (:url . "https://github.com/Malabarba/beacon") (:keywords "convenience"))]) (bdo . [(20140126 101) nil "Do things to a browser page from Emacs. BETA!" tar ((:commit . "c96cb6aa9e97fa3491185c50dee0f77a13241010") (:keywords "development"))]) (bbyac . [(20170127 516) ((browse-kill-ring (1 3)) (cl-lib (0 5))) "Type a little Bit, and Bang! You Are Completed." single ((:commit . "4dfb1f7c7f0402a0abf45e00007edc2c7f98a25a") (:url . "https://github.com/baohaojun/bbyac") (:keywords "abbrev"))]) (bbdb2erc . [(20170221 554) ((bbdb (3 0))) "make bbdb show if pal is online with ERC, click i to chat" single ((:commit . "15db2bd29df0f6ee32c499fdeffb960b6a7f97a0") (:keywords "irc" "contacts" "chat" "client" "internet"))]) (bbdb-vcard . [(20150713 1350) ((bbdb (3 0))) "vCard import/export for BBDB" tar ((:commit . "c3aafd4160854a38fd92afcdade32b9a13abe82c") (:url . "http://github.com/vgeddes/bbdb-vcard") (:keywords "data" "calendar" "mail" "news"))]) (bbdb-handy . [(20150707 1752) ((bbdb (3 1))) "BBDB window as email-address chooser when write an email" single ((:commit . "67936204488b539fac9b4a7bfbf11546f3b13de2") (:url . "https://github.com/tumashu/bbdb-handy"))]) (bbdb-ext . [(20151220 1213) ((bbdb (2 36))) "Extra commands for BBDB" single ((:commit . "fee97b1b3faa83edaea00fbc5ad3cbca5e791a55") (:url . "https://github.com/vapniks/bbdb-ext") (:keywords "extensions"))]) (bbdb-csv-import . [(20140802 442) ((pcsv (1 3 3)) (dash (2 5 0)) (bbdb (20140412 1949))) "import csv to bbdb version 3+" single ((:commit . "dc9e722d1c1fcd55b71625ee3f05a4921851d186") (:url . "https://gitlab.com/iankelling/bbdb-csv-import") (:keywords "csv" "util" "bbdb"))]) (bbdb-china . [(20150615 1856) ((bbdb-vcard (0 4 1)) (chinese-pyim (0 0 1))) "BBDB utils, which let Chinese BBDB users feel easy" single ((:commit . "a64725ca6dbb5ec1825f3a9112df9aa54bb14f6c") (:url . "https://github.com/tumashu/bbdb-china"))]) (bbdb-android . [(20150705 2224) ((bbdb-vcard (20150705 341))) "Android phone contacts import/export for BBDB" single ((:commit . "60641acf8b90e34b70f783b3d6e7789a4272f2b4") (:url . "https://github.com/tumashu/bbdb-android"))]) (bbdb . [(20170129 2224) nil "The Insidious Big Brother Database for GNU Emacs" tar ((:commit . "8998b3416b36873f4e49454879f2eed20c31b384"))]) (bbdb- . [(20140221 1554) ((bbdb (20140123 1541)) (log4e (0 2 0)) (yaxception (0 1))) "provide interface for more easily search/choice than BBDB." single ((:commit . "2839e84c894de2513af41053e80a277a1b483d22") (:url . "https://github.com/aki2o/bbdb-") (:keywords "bbdb" "news" "mail"))]) (bbcode-mode . [(20141103 1341) nil "Major mode for writing BBCode markup" single ((:commit . "b6ff1bfb8041b1435ebfc0a7d8e5e34eeb1b6aae") (:url . "https://github.com/ejmr/bbcode-mode"))]) (bats-mode . [(20160513 2315) nil "Emacs mode for editing and running Bats tests" single ((:commit . "d519f7c89f5ae17dfc33400596df4564b478315f") (:url . "https://github.com/dougm/bats-mode") (:keywords "bats" "tests"))]) (batch-mode . [(20140807 1350) nil "major mode for editing ESRI batch scrips" single nil]) (basic-theme . [(20160817 127) ((emacs (24))) "Minimalistic light color theme" single ((:commit . "e2a855bd39f4b78296228d4b790f9123156f7d7e") (:url . "http://github.com/fgeller/basic-theme.el") (:keywords "theme" "basic" "minimal" "colors"))]) (basic-c-compile . [(20170302 312) ((cl-lib (0 5)) (f (0 19 0))) "Quickly create a Makefile, compile and run C." single ((:commit . "335e96e19647ad7245fb68cf7e68cf86c5023d23") (:url . "https://github.com/nick96/basic-c-compile") (:keywords "c" "makefile" "compilation" "convenience"))]) (bash-completion . [(20150514 728) nil "BASH completion for the shell buffer" tar ((:commit . "1659c7ca38e2cf591525a3d0b9d97461de33916d"))]) (base16-theme . [(20170626 1114) nil "Collection of themes built on combinations of 16 base colors" tar ((:commit . "eeb0fbbc0115d87eeae4392d4d51f35346798bc0") (:url . "https://github.com/belak/base16-emacs"))]) (bar-cursor . [(20160923 920) nil "package used to switch block cursor to a bar" single ((:commit . "afa1d4bc1937610cc30575d71aab85ea20ebf2ea") (:url . "https://github.com/ajsquared/bar-cursor") (:keywords "files"))]) (baidu-life . [(20160426 519) ((cl-lib (0 5))) "Use baidu api to do some interesting things" single ((:commit . "5c4b3dbc016a2656cc2febaa2ac2268c05725b5c") (:keywords "lisp" "baidu"))]) (badwolf-theme . [(20161004 15) ((emacs (24))) "Bad Wolf color theme" single ((:commit . "ea01a3d9358e968f75e3ed15dec6a2a96ce3d9a1") (:url . "https://github.com/bkruczyk/badwolf-emacs") (:keywords "themes"))]) (badger-theme . [(20140716 1932) nil "A dark theme for Emacs 24." single ((:commit . "80fb9f8ace37b2e8807da639f7da499a53ffefd4") (:url . "https://github.com/ccann/badger-theme"))]) (backward-forward . [(20161228 2150) ((emacs (24 5))) "navigation backwards and forwards across marks" single ((:commit . "58489957a62a0da25dfb5df902624d2548d800b4") (:url . "https://gitlab.com/vancan1ty/emacs-backward-forward/tree/master") (:keywords "navigation" "convenience" "backward" "forward"))]) (backup-walker . [(20130720 816) nil "quickly traverse all backups of a file" single ((:commit . "934a4128c122972ac32bb9952addf279a60a94da") (:url . "https://github.com/lewang/backup-walker") (:keywords "backup"))]) (backup-each-save . [(20130704 732) nil "backup each savepoint of a file" single nil]) (back-button . [(20150804 1304) ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (list-utils (0 4 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Visual navigation through mark rings" single ((:commit . "98d92984a740acd1547bd7ed05cca0affdb21c3e") (:url . "http://github.com/rolandwalker/back-button") (:keywords "convenience" "navigation" "interface"))]) (babel-repl . [(20160504 1501) ((emacs (24))) "Run babel REPL" single ((:commit . "e619c16e349a1ee7bd0ee0d7f3650d33bff73fc3") (:url . "https://github.com/hung-phan/babel-repl/") (:keywords "babel" "javascript" "es6"))]) (babel . [(20161122 2340) nil "interface to web translation services such as Babelfish" single ((:commit . "d4212e25fcbd22b8e38be13936f937a2963d34a9") (:url . "http://github.com/juergenhoetzel/babel") (:keywords "translation" "web"))]) (axiom-environment . [(20161120 1200) ((emacs (24 2))) "An environment for using Axiom/OpenAxiom/FriCAS" tar ((:keywords "axiom" "openaxiom" "fricas"))]) (aws-ec2 . [(20161007 1214) ((emacs (24 4)) (dash (2 12 1)) (tblui (0 1 0))) "Manage AWS EC2 instances" single ((:commit . "5601d4f268fc34b86a02ca90cde7d3771619a368") (:url . "https://github.com/Yuki-Inoue/aws.el"))]) (awk-it . [(20130917 1148) nil "Run AWK interactively on region!" single ((:keywords "awk"))]) (avy-zap . [(20160921 1444) ((avy (0 2 0))) "Zap to char using `avy'" single ((:commit . "6081738668ab726099ce1c711c580d9745dfaede") (:url . "https://github.com/cute-jumper/avy-zap") (:keywords "extensions"))]) (avy-migemo . [(20170411 858) ((emacs (24 4)) (avy (0 4 0)) (migemo (1 9))) "avy with migemo" tar ((:commit . "97020c34176538480cfd28004f16f9b5494315e6") (:url . "https://github.com/momomo5717/avy-migemo") (:keywords "avy" "migemo"))]) (avy-menu . [(20170518 2245) ((emacs (24 3)) (avy (0 3 0))) "Library providing avy-powered popup menu" single ((:commit . "71b71e64900d0637e17013781042e086e9bf56e7") (:url . "https://github.com/mrkkrp/avy-menu") (:keywords "popup" "menu"))]) (avy-flycheck . [(20160720 800) ((emacs (24 1)) (flycheck (0 14)) (seq (1 11)) (avy (0 4 0))) "Jump to and fix syntax errors using `flycheck' with `avy' interface" single ((:commit . "5522f3bbbed1801d9278ed696ec0cbba38352985") (:url . "https://github.com/magicdirac/avy-flycheck") (:keywords "tools" "convenience" "avy" "flycheck"))]) (avy . [(20170702 237) ((emacs (24 1)) (cl-lib (0 5))) "tree-based completion" single ((:commit . "228ed97d07d51e369eb6ad27bf408c5b3218a23b") (:url . "https://github.com/abo-abo/avy") (:keywords "point" "location"))]) (avk-emacs-themes . [(20170110 1046) nil "Collection of avk themes" tar ((:commit . "c75079ec9a84116c84c884c3bf258c95afcce7a7") (:url . "https://github.com/avkoval/avk-emacs-themes"))]) (avandu . [(20170101 1103) nil "Gateway to Tiny Tiny RSS" tar ((:commit . "f44588d8e747fa880411cb4542cc39962252b90a") (:keywords "net"))]) (autumn-light-theme . [(20150515 747) nil "A light color theme with muted, autumnal colors." single ((:commit . "1e3b2a43a3001e4a97a5ff073ba3f0d2ea3888f9") (:url . "http://github.com/aalpern/emacs-color-theme-autumn-light") (:keywords "color" "theme"))]) (autothemer . [(20170112 1324) ((dash (2 10 0)) (emacs (24)) (cl-lib (0 5))) "Conveniently define themes." single ((:commit . "8c467f57571c154129d660dfccebd151c998f2d9") (:url . "https://github.com/sebastiansturm/autothemer"))]) (autotetris-mode . [(20141114 846) ((cl-lib (0 5))) "automatically play tetris" single ((:commit . "dd490d5ad6d84bd964ab349484f6a2d05651ede1") (:url . "https://github.com/skeeto/autotetris-mode"))]) (autotest . [(20150130 225) nil "ZenTest's autotest integration with emacs." single ((:commit . "164ae0f8302c1e1938a9e30597901b1164b43f96") (:url . "https://github.com/zenspider/elisp/blob/master/autotest.el") (:keywords "testing" "ruby" "convenience"))]) (autopair . [(20160304 437) ((cl-lib (0 3))) "Automagically pair braces and quotes like TextMate" single ((:commit . "2b6d72bccb0ebba6e7e711528872b898b0c65b0a") (:url . "https://github.com/capitaomorte/autopair") (:keywords "convenience" "emulations"))]) (automargin . [(20131112 14) nil "add margins to windows not-splitted, and center them" single ((:commit . "4901d969ad69f5244e6300baab4ba04efed800c3") (:url . "http://hins11.yu-yake.com/"))]) (autofit-frame . [(20170221 752) ((fit-frame (0))) "Automatically resize one-window frames to fit" single ((:url . "https://www.emacswiki.org/emacs/download/autofit-frame.el") (:keywords "internal" "extensions" "convenience" "local"))]) (autodisass-llvm-bitcode . [(20150410 1825) nil "Automatically disassemble LLVM bitcode" tar ((:commit . "d2579e3a1427af2dc947c343e49eb3434078bf04"))]) (autodisass-java-bytecode . [(20151005 912) nil "Automatically disassemble Java bytecode" tar ((:commit . "3d61dbe266133c950b39e880f78d142751c7dc4c"))]) (autobookmarks . [(20170417 1407) ((dash (2 10 0)) (cl-lib (0 5))) "Save recently visited files and buffers" single ((:commit . "cd19e15b8951a7af55d67a5bb4e0948e62b0a119") (:keywords "files"))]) (auto-yasnippet . [(20160925 225) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" single ((:commit . "d1ccfea87312c6dd8cf8501ab5b71b1d3d44d95b") (:url . "https://github.com/abo-abo/auto-yasnippet"))]) (auto-virtualenvwrapper . [(20170618 52) ((cl-lib (0 6)) (s (1 10 0)) (virtualenvwrapper (0))) "Lightweight auto activate python virtualenvs" single ((:commit . "516cb0406a98fd5a41d389f37544f11b28b1d027") (:keywords "python" "virtualenv" "tools"))]) (auto-virtualenv . [(20170125 1117) ((cl-lib (0 5)) (pyvenv (1 9)) (s (1 10 0))) "Auto activate python virtualenvs" single ((:commit . "3826db66b417788e2b2eb138717255b1f52a55c3") (:url . "http://github.com/marcwebbie/auto-virtualenv") (:keywords "python" "virtualenv" "tools"))]) (auto-shell-command . [(20160603 1938) ((deferred (20130312)) (popwin (20130329))) "Run the shell command asynchronously that you specified when you save the file." single ((:commit . "454b75a07b663095334381d5bf5625c7f136f743") (:keywords "shell" "save" "async" "deferred" "auto"))]) (auto-save-buffers-enhanced . [(20161108 2310) nil "Automatically save buffers in a decent way" single ((:commit . "461e8c816c1b7c650be5f209078b381fe55da8c6"))]) (auto-read-only . [(20170305 2043) ((cl-lib (0 5))) "Automatically make the buffer to read-only" single ((:commit . "79654f8fc024f383ae7af05487c1345738236500") (:url . "https://github.com/zonuexe/auto-read-only.el") (:keywords "files" "convenience"))]) (auto-pause . [(20160426 516) ((emacs (24 4))) "Run processes which will be paused when Emacs is idle" single ((:commit . "a4d778de774ca3895542cb559a953e0d98657338") (:url . "https://github.com/lujun9972/auto-pause") (:keywords "convenience" "menu"))]) (auto-package-update . [(20151025 2311) ((emacs (24 4)) (dash (2 1 0))) "Automatically update Emacs packages." single ((:commit . "cdef79f9fc6f8347fdd05664978fb9a948ea0410") (:url . "http://github.com/rranelli/auto-package-update.el") (:keywords "package" "update"))]) (auto-org-md . [(20160923 708) ((org (8 0)) (emacs (24 4))) "export a markdown file automatically when you save an org-file" single ((:commit . "7604c06c1b2f1d01c2e88f114bb0d2d00f21dabb") (:url . "https://github.com/jamcha-aa/auto-org-md") (:keywords "org" "markdown"))]) (auto-minor-mode . [(20170620 1001) ((emacs (25))) "Enable minor modes by file name and contents" single ((:commit . "c91c566cbaf8eac1fff0c7d9eef88308a566cc43") (:keywords "convenience"))]) (auto-install . [(20150418 1702) nil "Auto install elisp file" single ((:url . "http://www.emacswiki.org/emacs/download/auto-install.el") (:keywords "auto-install"))]) (auto-indent-mode . [(20161118 1458) nil "Auto indent Minor mode" tar ((:commit . "7e939f3a7b092c6c32c97d63fd88aef6cc355cdb") (:url . "https://github.com/mlf176f2/auto-indent-mode.el/") (:keywords "auto" "indentation"))]) (auto-highlight-symbol . [(20130313 243) nil "Automatic highlighting current symbol minor mode" single ((:commit . "26573de912d760e04321b350897aea70958cee8b") (:url . "http://github.com/gennad/auto-highlight-symbol/raw/master/auto-highlight-symbol.el") (:keywords "highlight" "face" "match" "convenience"))]) (auto-dim-other-buffers . [(20161004 539) nil "Makes non-current buffers less prominent" single ((:commit . "31c13e7ed87dd862c73b836d11c127164edb1458") (:url . "https://github.com/mina86/auto-dim-other-buffers.el"))]) (auto-dictionary . [(20150410 910) nil "automatic dictionary switcher for flyspell" single ((:commit . "b364e08009fe0062cf0927d8a0582fad5a12b8e7") (:url . "http://nschum.de/src/emacs/auto-dictionary/") (:keywords "wp"))]) (auto-complete-sage . [(20160514 51) ((auto-complete (1 5 1)) (sage-shell-mode (0 1 0))) "An auto-complete source for sage-shell-mode." single ((:commit . "51b8e3905196d266e1f8aa47881189833151b398") (:url . "https://github.com/stakemori/auto-complete-sage") (:keywords "sage" "math" "auto-complete"))]) (auto-complete-rst . [(20140225 144) ((auto-complete (1 4))) "Auto-complete extension for ReST and Sphinx" tar ((:commit . "4803ce41a96224e6fa54e6741a5b5f40ebed7351") (:url . "https://github.com/tkf/auto-complete-rst"))]) (auto-complete-pcmp . [(20140226 2251) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide auto-complete sources using pcomplete results" single ((:commit . "2595d3dab1ef3549271ca922f212928e9d830eec") (:url . "https://github.com/aki2o/auto-complete-pcmp") (:keywords "completion"))]) (auto-complete-nxml . [(20140220 2058) ((auto-complete (1 4))) "do completion by auto-complete.el on nXML-mode" single ((:commit . "ac7b09a23e45f9bd02affb31847263de4180163a") (:url . "https://github.com/aki2o/auto-complete-nxml") (:keywords "completion" "html" "xml"))]) (auto-complete-exuberant-ctags . [(20140320 24) ((auto-complete (1 4 0))) "Exuberant ctags auto-complete.el source" single ((:commit . "ff6121ff8b71beb5aa606d28fd389c484ed49765") (:url . "http://code.101000lab.org") (:keywords "anto-complete" "exuberant ctags"))]) (auto-complete-distel . [(20160815 2300) ((auto-complete (1 4)) (distel-completion-lib (1 0 0))) "Erlang/distel completion backend for auto-complete-mode" single ((:commit . "2ba4eea51cecfa75cf62f58180460ee9ff43131f") (:url . "github.com/sebastiw/distel-completion") (:keywords "erlang" "distel" "auto-complete"))]) (auto-complete-clang-async . [(20130526 814) nil "Auto Completion source for clang for GNU Emacs" single ((:commit . "5d9c5cabbb6b31e0ac3637631c0c8b25184aa8b4") (:keywords "completion" "convenience"))]) (auto-complete-clang . [(20140409 52) ((auto-complete (1 3 1))) "Auto Completion source for clang for GNU Emacs" single ((:commit . "a195db1d0593b4fb97efe50885e12aa6764d998c") (:url . "https://github.com/brianjcj/auto-complete-clang") (:keywords "completion" "convenience"))]) (auto-complete-chunk . [(20140225 146) ((auto-complete (1 4))) "Auto-completion for dot.separated.words." single ((:commit . "a9aa77ffb84a1037984a7ce4dda25074272f13fe") (:url . "https://github.com/tkf/auto-complete-chunk"))]) (auto-complete-c-headers . [(20150911 2023) ((auto-complete (1 4))) "An auto-complete source for C/C++ header files" single ((:commit . "52fef720c6f274ad8de52bef39a343421006c511") (:keywords "c"))]) (auto-complete-auctex . [(20140223 958) ((yasnippet (0 6 1)) (auto-complete (1 4))) "auto-completion for auctex" single ((:commit . "855633f668bcc4b9408396742a7cb84e0c4a2f77"))]) (auto-complete . [(20170124 1845) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar ((:commit . "2e83566ddfa758c69afe50b8a1c62a66f47471e3"))]) (auto-compile . [(20170130 1017) ((emacs (24 3)) (dash (2 13 0)) (packed (2 0 0))) "automatically compile Emacs Lisp libraries" single ((:commit . "0cbebd8fd22c88a57a834797e4841900ea1bae1c") (:url . "https://github.com/tarsius/auto-compile") (:keywords "compile" "convenience" "lisp"))]) (auto-capitalize . [(20160415 1403) nil "Automatically capitalize (or upcase) words" single ((:keywords "text" "wp" "convenience rcs $id: auto-capitalize.el" "v 2.21 2016/04/15 18:47:22 oub exp $"))]) (auto-auto-indent . [(20131106 1103) ((es-lib (0 1)) (cl-lib (1 0))) "Indents code as you type" single ((:commit . "0139378577f936d34b20276af6f022fb457af490") (:url . "https://github.com/sabof/auto-auto-indent"))]) (auto-async-byte-compile . [(20160915 2154) nil "Automatically byte-compile when saved" single ((:commit . "8681e74ddb8481789c5dbb3cafabb327db4c4484") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/auto-async-byte-compile.el") (:keywords "lisp" "convenience"))]) (auth-password-store . [(20170123 107) ((emacs (24 4)) (password-store (0 1)) (seq (1 9)) (cl-lib (0 5))) "Integrate auth-source with password-store" single ((:commit . "e8d8733b1af67e4ea088d1ed015c554171feecb9") (:keywords "pass" "password-store" "auth-source" "username" "password" "login"))]) (aurora-config-mode . [(20140520 203) nil "Major mode for Apache Aurora configuration files" single ((:commit . "0a7ca7987c3a0824e25470389c7d25c337a81593") (:url . "https://github.com/bdd/aurora-config.el") (:keywords "languages" "configuration"))]) (aurel . [(20170114 137) ((emacs (24 3)) (bui (1 1 0)) (dash (2 11 0))) "Search, get info, vote for and download AUR packages" single ((:commit . "fc7ad208f43f8525f84a18941c9b55f956df8961") (:url . "https://github.com/alezost/aurel") (:keywords "tools"))]) (audio-notes-mode . [(20170611 1459) nil "Play audio notes synced from somewhere else." single ((:commit . "fa38350829c7e97257efc746a010471d33748a68") (:url . "http://github.com/Bruce-Connor/audio-notes-mode") (:keywords "hypermedia" "convenience"))]) (auctex-lua . [(20151121 810) ((auctex (11 86)) (lua-mode (20130419))) "Lua editing support for AUCTeX" single ((:commit . "799cd8ac10c96991bb63d9aa60528ae5d8c786b5") (:url . "http://github.com/vermiculus/auctex-lua") (:keywords "latex" "lua"))]) (auctex-latexmk . [(20170618 936) ((auctex (11 87))) "Add LatexMk support to AUCTeX" single ((:commit . "4d353522650d7685acbf1d38f7dbc504f734bd84") (:url . "https://github.com/tom-tan/auctex-latexmk/") (:keywords "tex"))]) (atomic-chrome . [(20161213 730) ((emacs (24 3)) (let-alist (1 0 4)) (websocket (1 4))) "Edit Chrome text area with Emacs using Atomic Chrome" single ((:commit . "1b96d563c5d435baf8dfa9cdae5ef38ce34629b9") (:url . "https://github.com/alpha22jp/atomic-chrome") (:keywords "chrome" "edit" "textarea"))]) (atom-one-dark-theme . [(20170117 1905) nil "Atom One Dark color theme" single ((:commit . "44903ab7c349ef225499d642f249b6dfef5c5161") (:url . "https://github.com/jonathanchu/atom-one-dark-theme"))]) (atom-dark-theme . [(20151119 2335) nil "An Emacs port of the Atom Dark theme from Atom.io." single ((:commit . "b6963e486d27eae7cd472736c106c7079c2a3d3c") (:url . "https://github.com/whitlockjc/atom-dark-theme-emacs") (:keywords "themes" "atom" "dark"))]) (async-await . [(20170208 350) ((emacs (25)) (promise (1 0))) "Async/Await" single ((:commit . "56ab90e4019ed1f81fd4ad9e8701b5cec7ffa795") (:url . "https://github.com/chuntaro/emacs-async-await") (:keywords "async" "await" "convenience"))]) (async . [(20170610 2241) nil "Asynchronous processing in Emacs" tar ((:commit . "d6222c2959caaca5c4980038756097da8a51e505") (:keywords "async") (:url . "https://github.com/jwiegley/emacs-async"))]) (assess . [(20170504 657) ((emacs (24 1)) (m-buffer (0 15))) "Test support functions" tar ((:commit . "e5b0415126c6bd24bd220759ff04220d963a0195"))]) (asn1-mode . [(20160626 2240) ((emacs (24 3)) (s (1 10 0))) "ASN.1/GDMO mode for GNU Emacs" single ((:commit . "c244717529229d7ecc2b2c160992f28dcb755d2c") (:url . "https://github.com/kawabata/asn1-mode/") (:keywords "languages" "processes" "tools"))]) (asilea . [(20150105 725) ((emacs (24)) (cl-lib (0 5))) "Find best compiler options using simulated annealing" single ((:commit . "2aab1cc63b64ef08d12e84fd7ba5c94065f6039f") (:url . "https://github.com/Fanael/asilea"))]) (ascii . [(20130824 500) nil "ASCII code display." single ((:url . "http://www.emacswiki.org/cgi-bin/wiki/ViniciusJoseLatorre") (:keywords "data" "ascii"))]) (arview . [(20160419 1409) nil "extract and view archives in the temporary directory" single ((:commit . "5437b4221b64b238c273a651d4792c577dba6d45") (:url . "https://github.com/afainer/arview") (:keywords "files"))]) (artbollocks-mode . [(20170523 2122) nil "Improve your writing (especially about art)" single ((:commit . "4a907e470bf345b88c3802c1241ce2b8cf4123ee") (:url . "https://github.com/sachac/artbollocks-mode"))]) (arjen-grey-theme . [(20170522 1347) nil "A soothing dark grey theme" single ((:commit . "4cd0be72b65d42390e2105cfdaa408a1ead8d8d1") (:url . "https://github.com/credmp/arjen-grey") (:keywords "faces"))]) (ariadne . [(20131117 911) ((bert (0 1))) "Ariadne plugin for Emacs" single ((:commit . "6fe401c7f996bcbc2f685e7971324c6f5e5eaf15") (:keywords "comm" "convenience" "processes"))]) (aria2 . [(20141107 1517) ((emacs (24 4))) "Control aria2c commandline tool from Emacs" single ((:commit . "3c54254e424c6c8b4eb0d8e7c4907b094c27a3f0") (:url . "https://bitbucket.org/ukaszg/aria2-mode") (:keywords "download" "bittorrent" "aria2"))]) (arduino-mode . [(20151017 2335) nil "Major mode for the Arduino language" single ((:commit . "3e2bad4569ad26e929e6db2cbcff0d6d36812698") (:keywords "languages" "arduino"))]) (archive-region . [(20140201 1542) nil "Move region to archive file instead of killing" single ((:commit . "0d357d4c42a6a248c457f358f81b20fd20fede2f") (:url . "http://www.emacswiki.org/cgi-bin/wiki/download/archive-region.el") (:keywords "languages"))]) (arch-packer . [(20170506 1005) ((emacs (25 1)) (s (1 11 0)) (async (1 9 2))) "Arch Linux package management frontend" single ((:commit . "e195c4f30da2a756f6e14715f436ff22826b5e82") (:url . "https://github.com/brotzeitmacher/arch-packer"))]) (apu . [(20170221 750) nil "Apropos Unicode characters." single ((:url . "https://www.emacswiki.org/emacs/download/apu.el") (:keywords "unicode" "characters" "encoding" "commands" "ucs-names"))]) (apropospriate-theme . [(20170418 1352) nil "A colorful, low-contrast, light & dark theme set for Emacs with a fun name." tar ((:commit . "0d918da74a7a225fe5a586e26f5d834e579c5323") (:keywords "color" "theme") (:url . "https://github.com/waymondo/apropospriate-theme"))]) (apropos-fn+var . [(20170221 748) nil "Apropos for functions and variables" single ((:url . "https://www.emacswiki.org/emacs/download/apropos-fn%2bvar.el") (:keywords "apropos"))]) (aproject . [(20150605 206) nil "Basic project framework for Emacs" tar ((:commit . "3c7d23c341862dfd77fd0a64775df12ddb44ab54") (:url . "https://github.com/vietor/aproject") (:keywords "environment" "project"))]) (applescript-mode . [(20120205 307) nil "Major mode for editing AppleScript source" single ((:keywords "applescript" "languages"))]) (apples-mode . [(20110120 2018) nil "Major mode for editing and executing AppleScript code" tar ((:commit . "83a9ab0d6ba82496e2f7df386909b1a55701fccb") (:keywords "applescript" "languages"))]) (apiwrap . [(20170506 2356) ((emacs (25))) "api-wrapping macros" single ((:commit . "4ae045879cb3d7ce45f0a4a8ad4520b9225ca37b") (:url . "https://github.com/vermiculus/apiwrap.el") (:keywords "tools" "maint" "convenience"))]) (apib-mode . [(20170520 658) ((markdown-mode (2 1))) "Major mode for API Blueprint files" single ((:commit . "6cc7c6f21b8e415b1718bb6a07ab2182e9e9dde6") (:url . "http://github.com/w-vi/apib-mode") (:keywords "tools" "api-blueprint"))]) (apel . [(20170122 1458) nil "APEL (A Portable Emacs Library) provides support for portable Emacs Lisp programs" tar ((:commit . "339eb28ffae3165255a79de9b1fd362f43cd37c3"))]) (apache-mode . [(20170407 1140) nil "major mode for editing Apache configuration files" single ((:commit . "8fd0d4db7ede5d4e360630235ede3beb1ba56cdf") (:keywords "languages" "faces"))]) (aozora-view . [(20140310 617) nil "Aozora Bunko text Emacs viewer." tar ((:commit . "b0390616d19e45f15f9a2f5d5688274831e721fd") (:url . "https://github.com/kawabata/aozora-view") (:keywords "text"))]) (aok . [(20130824 427) nil "various useful ways to do `multi-occur'" single nil]) (anzu . [(20161017 907) ((emacs (24 3))) "Show number of matches in mode-line while searching" single ((:commit . "e6c56ca8b23ac433f7be58b6f3f50801dd4164e4") (:url . "https://github.com/syohex/emacs-anzu"))]) (anything-tramp . [(20170419 152) ((emacs (24 3)) (anything (1 0))) "Tramp with anything for ssh server and docker" single ((:commit . "5af52ef940493d3d5acb56fc6372004ca48f75ca") (:url . "https://github.com/masasam/emacs-anything-tramp"))]) (anything-sage . [(20141005 413) ((cl-lib (0 5)) (anything (1 3 9)) (sage-shell-mode (0 0 1))) "An anything extension for sage-shell-mode." single ((:commit . "370b4248935dd4527127954788a028399644f578") (:url . "https://github.com/stakemori/anything-sage") (:keywords "sage" "math" "anything"))]) (anything-replace-string . [(20140317 336) ((anything (1 3 9))) "`replace-string' and `query-replace' `anything.el' interface" single ((:commit . "1962f24243d6013bcef7e8d23136277d42e13130") (:url . "http://code.101000lab.org"))]) (anything-prosjekt . [(20140129 4) ((prosjekt (0 3)) (anything (0))) "Anything integration for prosjekt." single ((:commit . "a864a8be5842223043702395f311e3350c28e9db") (:url . "https://github.com/abingham/prosjekt"))]) (anything-project . [(20141024 227) ((imakado (0 12)) (anything (1 3 9))) "finding any resource of a project" single ((:commit . "9f6f04bc1911474e97e99faf52e204cf159add83") (:url . "https://github.com/imakado/anything-project") (:keywords "convenience"))]) (anything-milkode . [(20140518 743) ((milkode (0 3)) (anything (1 3 9))) "Command line search with Milkode" single ((:commit . "d6b2be13a351c41793e9cc13c1320953939d3ac9") (:keywords "milkode" "anything" "search" "grep" "jump" "keyword"))]) (anything-git-grep . [(20130608 1940) ((anything (1 3 9))) "anything for git grep" tar ((:commit . "6ee26e68bb8ec23ffacf5c5f9698c451a4bc905c") (:url . "https://github.com/mechairoi/anything-git-grep") (:keywords "anything" "git"))]) (anything-git-files . [(20130609 243) ((anything (1 3 9))) "anything for git files" single ((:commit . "efeec4f8001e2a95f36a9c31181bb30f7561015c") (:keywords "anything" "git"))]) (anything-exuberant-ctags . [(20140316 1637) ((anything (1 3 9))) "Exuberant ctags anything.el interface" single ((:commit . "8ed688fd526751e044435bb77135f5315c8167e5") (:url . "http://code.101000lab.org") (:keywords "anything" "exuberant ctags"))]) (anything . [(20170125 1710) nil "open anything / QuickSilver-like candidate-selection framework" tar ((:commit . "9e2259fc779eef1a3e947e74cc7d301d1cea0ca6") (:url . "http://repo.or.cz/w/anything-config.git") (:keywords "files" "frames" "help" "matching" "outlines"))]) (anyins . [(20131229 241) nil "Insert content at multiple places from shell command or kill-ring" single ((:commit . "83844c17ac9b5b6c7655ee556b75689e4c8ea663") (:url . "http://github.com/antham/anyins") (:keywords "insert" "rectangular"))]) (anybar . [(20160816 721) nil "Control AnyBar from Emacs" single ((:commit . "7a0743e0d31bcb36ab1bb2e351f3e7139c422ac5") (:keywords "anybar"))]) (anx-api . [(20140208 714) nil "Interact with the AppNexus API from Emacs." single ((:commit . "b2411ebc966ac32c3ffc61bc22bf183834df0fa0") (:keywords "convenience" "json" "rest" "api" "appnexus"))]) (anti-zenburn-theme . [(20160725 1559) nil "Low-contrast Zenburn-inverted theme" single ((:commit . "164122ebb7a39c41b953e90fe05cf440c5335d9e") (:url . "https://github.com/m00natic/anti-zenburn-theme"))]) (ant . [(20160211 743) nil "helpers for compiling with ant" single ((:commit . "510b5a3f57ee4b2855422d88d359a28922c1ab70") (:keywords "compilation" "ant" "java"))]) (ansible-vault . [(20170111 1318) ((emacs (24 3))) "Minor mode for editing ansible vault files" single ((:commit . "71d1df3b1c2d1569b6c3091a9d54baf2ebc7019d") (:url . "http://github.com/zellio/ansible-vault-mode") (:keywords "ansible" "ansible-vault" "tools"))]) (ansible-doc . [(20160924 124) ((emacs (24 3))) "Ansible documentation Minor Mode" single ((:commit . "86083a7bb2ed0468ca64e52076b06441a2f8e9e0") (:url . "https://github.com/lunaryorn/ansible-doc.el") (:keywords "tools" "help"))]) (ansible . [(20161218 1707) ((s (1 9 0)) (f (0 16 2))) "Ansible minor mode" tar ((:commit . "a712d9b48809c975525cb059ea278cbe8a839f5a") (:url . "http://101000lab.org"))]) (ansi . [(20150703 126) ((s (1 6 1)) (dash (1 5 0))) "Turn string into ansi strings" single ((:commit . "12b4c5d91b3da1902838f421e5af6d40e2cd57dd") (:url . "http://github.com/rejeep/ansi") (:keywords "color" "ansi"))]) (annoying-arrows-mode . [(20161023 2346) ((cl-lib (0 5))) "Ring the bell if using arrows too much" single ((:commit . "3c42e9807d7696da2da2a21b63beebf9cdb3f5dc"))]) (annotate-depth . [(20160520 1340) nil "Annotate buffer if indentation depth is beyond threshold." single ((:commit . "fcb24fa36287250e40d195590c4ca4a8a696277b") (:url . "https://github.com/netromdk/annotate-depth") (:keywords "convenience"))]) (annotate . [(20170227 23) nil "annotate files without changing them" single ((:commit . "f08923762fb851edb292ba4d3ebb07bea025f83d") (:url . "https://github.com/bastibe/annotate.el"))]) (angular-snippets . [(20140513 2223) ((s (1 4 0)) (dash (1 2 0))) "Yasnippets for AngularJS" tar ((:commit . "af5ae0a4a8603b040446c28afcf6ca01a8b4bd7b"))]) (angular-mode . [(20151201 1327) nil "Major mode for Angular.js" tar ((:commit . "8720cde86af0f1859ccc8580571e8d0ad1c52cff") (:url . "https://github.com/omouse/angularjs-mode") (:keywords "languages" "javascript"))]) (angry-police-captain . [(20120829 552) nil "Show quote from http://theangrypolicecaptain.com in the minibuffer" single ((:commit . "d11931c5cb63368dcc4a48797962428cca6d3e9d") (:keywords "games" "web" "fun"))]) (android-mode . [(20170323 115) nil "Minor mode for Android application development" single ((:commit . "f274da87429617b0b9c5889d46b36de64d982da4") (:url . "https://github.com/remvee/android-mode") (:keywords "tools" "processes"))]) (anchored-transpose . [(20080904 2254) nil "Transposes a phrase around an anchor phrase" single ((:keywords "tools" "convenience"))]) (anaphora . [(20140728 1536) nil "anaphoric macros providing implicit temp variables" single ((:commit . "ed99ad4502e6fccde76050496984c6454676a410") (:url . "http://github.com/rolandwalker/anaphora") (:keywords "extensions"))]) (anaconda-mode . [(20170405 301) ((emacs (24)) (pythonic (0 1 0)) (dash (2 6 0)) (s (1 9)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" single ((:commit . "1e7c9322c1ef395c4c4585bb29f5a421f2aa3077") (:url . "https://github.com/proofit404/anaconda-mode"))]) (ample-zen-theme . [(20150119 1354) nil "AmpleZen Theme for Emacs 24" single ((:commit . "b277bb7abd4b6624e8d59f02474b79af50a007bd") (:url . "https://github.com/mjwall/ample-zen") (:keywords "theme" "dark" "emacs 24"))]) (ample-theme . [(20161213 912) nil "Calm Dark Theme for Emacs" tar ((:commit . "8fbae3a9965f933c487f4cfdf2d881753d9feeb1") (:url . "https://github.com/jordonbiondo/ample-theme") (:keywords "theme" "dark"))]) (ample-regexps . [(20151023 300) nil "ample regular expressions for Emacs" tar ((:commit . "cbe91e148cac1ee8e223874dc956ed4cf607f046") (:keywords "regexps" "extensions" "tools"))]) (amd-mode . [(20161124 550) ((emacs (25)) (projectile (20161008 47)) (s (1 9 0)) (f (0 16 2)) (seq (2 16)) (makey (0 3)) (js2-mode (20140114)) (js2-refactor (0 6 1))) "Minor mode for handling JavaScript AMD module requirements." single ((:commit . "11e27444692bbf0eb38ec28af6bd041618c5c091") (:keywords "javascript" "amd" "projectile"))]) (all-the-icons-ivy . [(20170508 25) ((emacs (24 4)) (all-the-icons (2 4 0)) (ivy (0 8 0))) "Shows icons while using ivy and counsel" single ((:commit . "aa791d6b0055bce3ac68970a8ef6abf0726edf0f") (:keywords "faces"))]) (all-the-icons-dired . [(20170418 1431) ((emacs (24 4)) (all-the-icons (2 2 0))) "Shows icons for each file in dired mode" single ((:commit . "980b7747d6c4a7992a1ec56afad908956db0a519") (:keywords "files" "icons" "dired"))]) (all-the-icons . [(20170627 538) ((emacs (24 3)) (font-lock+ (0)) (memoize (1 0 1))) "A library for inserting Developer icons" tar ((:commit . "c491f5fa2267e7f8df180d7d125d9faeccbdea46") (:url . "https://github.com/domtronn/all-the-icons.el") (:keywords "convenient" "lisp"))]) (all-ext . [(20170114 1805) ((all (1 0))) "M-x all with helm-swoop/anything/multiple-cursors/line-number" single ((:commit . "9f4ef84a147cf4e0af6ef45826d6cb3558db6b88") (:url . "https://github.com/rubikitch/all-ext") (:keywords "all" "search" "replace" "anything" "helm" "helm-swoop" "occur"))]) (align-cljlet . [(20160112 1301) ((clojure-mode (1 11 5))) "Space align various Clojure forms" single ((:commit . "602d72a7ad52788a0265e3c6da519464a98166b8") (:url . "https://github.com/gstamp/align-cljlet"))]) (alert . [(20170503 1714) ((gntp (0 1)) (log4e (0 3 0))) "Growl-style notification system for Emacs" single ((:commit . "affbbc5f359a7abcf50f4509b712fc7a80843f51") (:url . "https://github.com/jwiegley/alert") (:keywords "notification" "emacs" "message"))]) (alect-themes . [(20170701 751) ((emacs (24 0))) "Configurable light, dark and black themes for Emacs 24 or later" tar ((:commit . "d1d19c76393ffe80fb11c6837e8582c3cb087d40") (:url . "https://github.com/alezost/alect-themes") (:keywords "color" "theme"))]) (alda-mode . [(20170629 2153) ((emacs (24 0))) "A simple major mode for the musical programming language Alda" single ((:commit . "24f2495ab209f8f00b7883285637e207b6f07201") (:url . "http://github.com/jgkamat/alda-mode") (:keywords "alda" "highlight"))]) (alchemist . [(20170614 218) ((elixir-mode (2 2 5)) (dash (2 11 0)) (emacs (24 4)) (company (0 8 0)) (pkg-info (0 4)) (s (1 11 0))) "Elixir tooling integration into Emacs" tar ((:commit . "38c0d2a21e3fedf71eda5f21f51aa79a0fddeb3b") (:url . "http://www.github.com/tonini/alchemist.el") (:keywords "languages" "elixir" "elixirc" "mix" "hex" "alchemist"))]) (airplay . [(20130212 426) ((request (20130110 2144)) (simple-httpd (1 4 1)) (deferred (0 3 1))) "Airplay bindings to Emacs" tar ((:commit . "bd690aafcae3a887946e1bba8327597932d964ad") (:url . "https://github.com/gongo/airplay-el") (:keywords "appletv" "airplay"))]) (airline-themes . [(20170623 958) ((powerline (2 3))) "vim-airline themes for emacs powerline" tar ((:commit . "40cb03bbb56f09cfbfae07ff9ff97f3aaf8324be") (:url . "http://github.com/AnthonyDiGirolamo/airline-themes") (:keywords "evil" "mode-line" "powerline" "airline" "themes"))]) (ahungry-theme . [(20160721 2122) ((emacs (24))) "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)." single ((:commit . "3ce72cf77cf5958d91b65bc4867cbacff968da74") (:url . "https://github.com/ahungry/color-theme-ahungry") (:keywords "ahungry" "palette" "color" "theme" "emacs" "color-theme" "deftheme"))]) (ahk-mode . [(20160320 1521) ((emacs (24 3))) "Major mode for editing AHK (AutoHotkey and AutoHotkey_L)" single ((:commit . "9cfc4840507f6cc8016fdede84ad90df53285359") (:url . "https://github.com/ralesi/ahk-mode") (:keywords "ahk" "autohotkey" "hotkey" "keyboard shortcut" "automation"))]) (ahg . [(20161110 455) nil "Alberto's Emacs interface for Mercurial (Hg)" single ((:url . "https://bitbucket.org/agriggio/ahg"))]) (aggressive-indent . [(20170627 1223) ((emacs (24 1)) (cl-lib (0 5))) "Minor mode to aggressively keep your code always indented" single ((:commit . "d6778ae89cd2d40949aa076a43e327f7acff59c3") (:url . "https://github.com/Malabarba/aggressive-indent-mode") (:keywords "indent" "lisp" "maint" "tools"))]) (aggressive-fill-paragraph . [(20161023 321) ((dash (2 10 0))) "A mode to automatically keep paragraphs filled" single ((:commit . "25668da48db3b505f01875e0f4ededc5ad8dcb9e") (:url . "https://github.com/davidshepherd7/aggressive-fill-paragraph-mode") (:keywords "fill-paragraph" "automatic" "comments"))]) (ag . [(20170420 1424) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." single ((:commit . "2718190a0202aa4ab02b1f1f3d6ba7b996b69d6d"))]) (afternoon-theme . [(20140104 1059) ((emacs (24 1))) "Dark color theme with a deep blue background" single ((:commit . "89b1d778a1f8b385775c122f2bd1c62f0fbf931a") (:url . "http://github.com/osener/emacs-afternoon-theme") (:keywords "themes"))]) (aes . [(20170607 157) nil "Implementation of AES" single ((:commit . "8d9ddaa7d13875745241f0f98758b1d72dd3be92") (:url . "https://github.com/Sauermann/emacs-aes") (:keywords "data" "tools"))]) (adoc-mode . [(20160314 1430) ((markup-faces (1 0 0))) "a major-mode for editing AsciiDoc files in Emacs" single ((:commit . "745884359a1b8826ede2c4cfd2f0b5478953ac40") (:url . "https://github.com/sensorflo/adoc-mode/wiki") (:keywords "wp" "asciidoc"))]) (addressbook-bookmark . [(20170424 808) ((emacs (24))) "An address book based on Standard Emacs bookmarks." single ((:commit . "2c2051aa4f9309931a0aa22e97e1e9ce16d9d99d") (:url . "https://github.com/thierryvolpiatto/addressbook-bookmark"))]) (add-node-modules-path . [(20170501 151) nil "Add node_modules to your exec-path" single ((:commit . "8eef7fa6765af1716fc21db08f19f3d3e9b68998") (:url . "https://github.com/codesuki/add-node-modules-path") (:keywords "javascript" "node" "node_modules" "eslint"))]) (add-hooks . [(20170518 209) nil "Functions for setting multiple hooks" single ((:commit . "9b1bdb91c59ea9c2cc0aba48262c49069273d856") (:url . "https://github.com/nickmccurdy/add-hooks") (:keywords "lisp"))]) (actionscript-mode . [(20160820 1731) nil "A simple mode for editing Actionscript 3 files" single ((:commit . "39287f00465559a58df1ea71a9dc5b15d4ac882a") (:keywords "language" "modes"))]) (ack-menu . [(20150504 1322) ((mag-menu (0 1 0))) "A menu-based front-end for ack" single ((:commit . "f77be93a4697926ecf3195a355eb69580f695f4d") (:url . "https://github.com/chumpage/ack-menu") (:keywords "tools" "matching" "convenience"))]) (achievements . [(20150530 1126) ((keyfreq (0 0 3))) "Achievements for emacs usage." tar nil]) (ace-window . [(20170421 428) ((avy (0 2 0))) "Quickly switch windows." single ((:commit . "0a59342b7aafa9f89b477b0cc28f41a1abb8096c") (:url . "https://github.com/abo-abo/ace-window") (:keywords "window" "location"))]) (ace-popup-menu . [(20170518 2244) ((emacs (24 3)) (avy-menu (0 1))) "Replace GUI popup menu with something more efficient" single ((:commit . "e7cc8bace9dda5c9fbe545c6fbd41c12679c3d7d") (:url . "https://github.com/mrkkrp/ace-popup-menu") (:keywords "convenience" "popup" "menu"))]) (ace-pinyin . [(20170430 2326) ((avy (0 2 0)) (pinyinlib (0 1 0))) "Jump to Chinese characters using avy or ace-jump-mode" single ((:commit . "a9df88c1e6a32a4f4895acbb8c45383693c494c1") (:url . "https://github.com/cute-jumper/ace-pinyin") (:keywords "extensions"))]) (ace-mc . [(20160408 1737) ((ace-jump-mode (1 0)) (multiple-cursors (1 0)) (dash (2 10 0))) "Add multiple cursors quickly using ace jump" single ((:commit . "b106bf6a6c78c3e026fbe9a99a34d6239adce4fd") (:url . "https://github.com/mm--/ace-mc") (:keywords "motion" "location" "cursor"))]) (ace-link . [(20170528 1158) ((avy (0 2 0))) "Quickly follow links" single ((:commit . "99787dc79ed9ec14a2b87257d6c8ce5b8ec0a0b0") (:url . "https://github.com/abo-abo/ace-link") (:keywords "convenience" "links"))]) (ace-jump-zap . [(20150330 1342) ((ace-jump-mode (1 0)) (dash (2 10 0))) "Character zapping, `ace-jump-mode` style" single ((:commit . "c60af83a857955b68c568c274a3c80cbe93f3150") (:url . "https://github.com/waymondo/ace-jump-zap") (:keywords "convenience" "tools" "extensions"))]) (ace-jump-mode . [(20140616 115) nil "a quick cursor location minor mode for emacs" single ((:commit . "8351e2df4fbbeb2a4003f2fb39f46d33803f3dac") (:url . "https://github.com/winterTTr/ace-jump-mode/") (:keywords "motion" "location" "cursor"))]) (ace-jump-helm-line . [(20160918 1136) ((avy (0 4 0)) (helm (1 6 3))) "Ace-jump to a candidate in helm window" single ((:commit . "1483055255df3f8ae349f7520f05b1e43ea3ed37") (:url . "https://github.com/cute-jumper/ace-jump-helm-line") (:keywords "extensions"))]) (ace-jump-buffer . [(20160229 1458) ((avy (0 4 0)) (dash (2 4 0))) "fast buffer switching extension to `avy'" single ((:commit . "9224e279a53fba06ed5561e22bf89ab94f74b9e7") (:url . "https://github.com/waymondo/ace-jump-buffer"))]) (ace-isearch . [(20170506 12) ((emacs (24))) "A seamless bridge between isearch, ace-jump-mode, avy, helm-swoop and swiper" single ((:commit . "0502f95e333c8059a678745e5a112542965661d1") (:url . "https://github.com/tam17aki/ace-isearch"))]) (ace-flyspell . [(20170308 2109) ((avy (0 4 0))) "Jump to and correct spelling errors using `ace-jump-mode' and flyspell" single ((:commit . "538d4f8508d305262ba0228dfe7c819fb65b53c9") (:url . "https://github.com/cute-jumper/ace-flyspell") (:keywords "extensions"))]) (ac-sly . [(20150421 1322) ((sly (1 0 0 -3)) (auto-complete (1 4)) (cl-lib (0 5))) "An auto-complete source using sly completions" single ((:commit . "b37a1ecfaab10a6d81c6d894417176d3bb4c5285") (:url . "https://github.com/qoocku/ac-sly"))]) (ac-slime . [(20150729 2035) ((auto-complete (1 4)) (slime (2 9)) (cl-lib (0 5))) "An auto-complete source using slime completions" single ((:commit . "fafc6f75c90b2dbf124edd3e2887860ce052081e") (:url . "https://github.com/purcell/ac-slime"))]) (ac-skk . [(20141229 1719) ((auto-complete (1 3 1)) (ddskk (16 0 50)) (tinysegmenter (0)) (cl-lib (0 5))) "auto-complete-mode source for DDSKK a.k.a Japanese input method" single ((:commit . "d25a265930430d080329789fb253d786c01dfa24") (:url . "https://github.com/myuhe/ac-skk.el") (:keywords "convenience" "auto-complete"))]) (ac-rtags . [(20170522 2154) ((auto-complete (1 4 0)) (rtags (2 10))) "auto-complete back-end for RTags" single ((:commit . "7e6b6f21935eedbe4678ba91c5531ac162b51a5a") (:url . "http://rtags.net"))]) (ac-racer . [(20170114 9) ((emacs (24 3)) (auto-complete (1 5 0)) (racer (0 0 2))) "auto-complete source of racer" single ((:commit . "4408c2d652dec0432e20c05e001db8222d778c6b") (:url . "https://github.com/syohex/emacs-ac-racer"))]) (ac-php-core . [(20170612 2134) ((emacs (24)) (dash (1)) (php-mode (1)) (xcscope (1)) (s (1)) (f (0 17 0)) (popup (0 5 0))) "gen tags for php" tar ((:commit . "e0aaae30e4e5f18390e5d00953db02c1f03c44f6") (:url . "https://github.com/xcwen/ac-php") (:keywords "completion" "convenience" "intellisense"))]) (ac-php . [(20170110 2036) ((ac-php-core (1)) (auto-complete (1 4 0)) (yasnippet (0 8 0))) "auto-completion source for php" single ((:commit . "e0aaae30e4e5f18390e5d00953db02c1f03c44f6") (:url . "https://github.com/xcwen/ac-php") (:keywords "completion" "convenience" "intellisense"))]) (ac-octave . [(20170220 1728) ((auto-complete (1 4 0))) "An auto-complete source for Octave" single ((:commit . "f131ed6859a0945ac0c0520d2ab076f16ce7314c") (:url . "https://github.com/coldnew/ac-octave") (:keywords "octave" "auto-complete" "completion"))]) (ac-mozc . [(20150227 819) ((cl-lib (0 5)) (auto-complete (1 4)) (mozc (0))) "auto-complete sources for Japanese input using Mozc" single ((:commit . "4c6c8be4701010d9362184437c0f783e0335c631") (:url . "https://github.com/igjit/ac-mozc"))]) (ac-math . [(20141116 1327) ((auto-complete (1 4)) (math-symbol-lists (1 0))) "Auto-complete sources for input of mathematical symbols and latex tags" single ((:commit . "c012a8f620a48cb18db7d78995035d65eae28f11") (:url . "https://github.com/vitoshka/ac-math") (:keywords "latex" "auto-complete" "unicode" "symbols"))]) (ac-js2 . [(20140906 442) ((js2-mode (20090723)) (skewer-mode (1 4))) "Auto-complete source for Js2-mode, with navigation" tar ((:commit . "721c482e1d4a08f4a29a74437257d573e8f69969") (:url . "https://github.com/ScottyB/ac-js2"))]) (ac-ispell . [(20151031 1926) ((auto-complete (1 4)) (cl-lib (0 5))) "ispell completion source for auto-complete" single ((:commit . "22bace7387e9012002a6a444922f75f9913077b0") (:url . "https://github.com/syohex/emacs-ac-ispell"))]) (ac-inf-ruby . [(20131115 350) ((inf-ruby (2 3 2)) (auto-complete (1 4))) "Enable auto-complete in inf-ruby sessions" single ((:commit . "ee53fc9c61950da9a96df3ff5ef186f9a9faf151") (:keywords "languages" "tools"))]) (ac-html-csswatcher . [(20151208 1313) ((web-completion-data (0 1))) "css/less class/id completion with `ac-html' or `company-web'" single ((:commit . "b0f3e7e1a3fe49e88b6eb6432377232fc715f221") (:url . "https://github.com/osv/ac-html-csswatcher") (:keywords "html" "css" "less" "auto-complete"))]) (ac-html-bootstrap . [(20160302 901) ((web-completion-data (0 1))) "auto complete bootstrap3/fontawesome classes for `ac-html' and `company-web'" tar ((:commit . "481e6e441cd566554ce71cd8cb28c9e7ebb1c24b") (:url . "https://github.com/osv/ac-html-bootstrap") (:keywords "html" "auto-complete" "bootstrap" "cssx"))]) (ac-html-angular . [(20151224 2319) ((web-completion-data (0 1))) "auto complete angular15 data for `ac-html' and `company-web'" tar ((:commit . "6bafe09afe03112ca4183d58461c1a6f6c2b3c67") (:url . "https://github.com/osv/ac-html-bootstrap") (:keywords "html" "auto-complete" "angular"))]) (ac-html . [(20151005 31) ((auto-complete (1 4)) (s (1 9)) (f (0 17)) (dash (2 10))) "auto complete source for html tags and attributes" tar ((:commit . "668154cba123c321d1b07c2dc8b26d14092253b8") (:url . "https://github.com/cheunghy/ac-html") (:keywords "html" "auto-complete" "slim" "haml" "jade"))]) (ac-helm . [(20160318 1933) ((helm (1 6 3)) (auto-complete (1 4 0)) (popup (0 5 0)) (cl-lib (0 5))) "Helm interface for auto-complete" single ((:commit . "baf2b1e04bcffa835084389c0fab415f26efbf32") (:keywords "completion" "convenience" "helm"))]) (ac-haskell-process . [(20150423 702) ((auto-complete (1 4)) (haskell-mode (13))) "Haskell auto-complete source which uses the current haskell process" single ((:commit . "0362d4323511107ec70e7165cb612f3ab01b712f") (:keywords "languages"))]) (ac-geiser . [(20130928 2347) ((geiser (0 5)) (auto-complete (1 4))) "Auto-complete backend for geiser" tar ((:commit . "502d18a8a0bd4b5fdd495a99299ba2a632c5cd9a"))]) (ac-etags . [(20161001 807) ((auto-complete (1 4))) "etags/ctags completion source for auto-complete" single ((:commit . "7983e631c226fe0fa53af3b2d56bf4eca3d785ce") (:url . "https://github.com/syohex/emacs-ac-etags"))]) (ac-emoji . [(20150823 11) ((auto-complete (1 5 0)) (cl-lib (0 5))) "auto-complete source of Emoji" tar ((:commit . "40a639764eb654f1b4bb705c817b66032a26ff2b") (:url . "https://github.com/syohex/emacs-ac-emoji"))]) (ac-emmet . [(20131015 858) ((emmet-mode (1 0 2)) (auto-complete (1 4))) "auto-complete sources for emmet-mode's snippets" single ((:commit . "88f24876ee3b759978d4614a758280b5d512d543") (:url . "https://github.com/yasuyk/ac-emmet") (:keywords "completion" "convenience" "emmet"))]) (ac-emacs-eclim . [(20170104 743) ((eclim (0 3)) (auto-complete (1 5))) "auto-complete source for eclim" single ((:commit . "ebb844d1ebdd7eb347e89063a9b6e9f890a1ff57"))]) (ac-dcd . [(20170323 601) ((auto-complete (1 3 1)) (flycheck-dmd-dub (0 7))) "Auto Completion source for dcd for GNU Emacs" single ((:commit . "1614aa624252e3445b0392c8a9b7197084f3e422") (:url . "http://github.com/atilaneves/ac-dcd") (:keywords "languages"))]) (ac-dabbrev . [(20130905 2218) nil "auto-complete.el source for dabbrev" single nil]) (ac-clang . [(20170615 838) ((emacs (24)) (cl-lib (0 5)) (auto-complete (1 4 0)) (pos-tip (0 4 6)) (yasnippet (0 8 0))) "Auto Completion source by libclang for GNU Emacs" tar ((:commit . "ee692f7cde535f317e440a132b8e60b7c5e34dfd") (:url . "https://github.com/yaruopooner/ac-clang") (:keywords "completion" "convenience" "intellisense"))]) (ac-cider . [(20161006 19) ((cider (0 8 0)) (auto-complete (1 4)) (cl-lib (0 3))) "Clojure auto-complete sources using CIDER" single ((:commit . "d8670939bbf88079263d5ace2b8bc04cf325be36") (:url . "https://github.com/clojure-emacs/ac-cider") (:keywords "languages" "clojure" "nrepl" "cider" "compliment"))]) (ac-capf . [(20151031 1917) ((auto-complete (1 4)) (cl-lib (0 5))) "auto-complete source with completion-at-point" single ((:commit . "17571dba0a8f98111f2ab758e9bea285b263781b") (:url . "https://github.com/syohex/emacs-ac-capf"))]) (ac-cake2 . [(20140320 8) ((cake2 (1 1 2)) (auto-complete (1 4 0))) "CakePHP 2 Minor Mode auto-complete.el source" single ((:commit . "ffbb679c0d5c261b05abde06d8d1d1e5d5990b6a") (:url . "http://code.101000lab.org"))]) (ac-cake . [(20140315 929) ((cake (1 4 2)) (auto-complete (1 4 0))) "CakePHP Minor Mode auto-complete.el source" single ((:commit . "f34c9e3ba8cb962e4708c8f53b623e1922500176") (:url . "http://code.101000lab.org"))]) (ac-c-headers . [(20151021 134) ((auto-complete (1 3 1))) "auto-complete source for C headers" single ((:commit . "de13a1d35b311e6601556d8ef163de102057deea") (:url . "http://hins11.yu-yake.com/"))]) (ac-anaconda . [(20160221 1123) ((auto-complete (1 4 0)) (anaconda-mode (0 1 1)) (dash (2 6 0))) "Anaconda sources for auto-complete-mode" single ((:commit . "94f66b4d4bf0fd9683ee77511833b1eceace0462") (:url . "https://github.com/proofit404/ac-anaconda"))]) (ac-alchemist . [(20150907 2356) ((auto-complete (1 5 0)) (alchemist (1 5 0)) (cl-lib (0 5))) "auto-complete source for alchemist" single ((:commit . "b1891c3d41aed83f61d78a609ea97be5cc2758d9") (:url . "https://github.com/syohex/emacs-ac-alchemist"))]) (abyss-theme . [(20160420 512) ((emacs (24))) "A dark theme with contrasting colours." single ((:commit . "e860499a0b2ae0d6d2a27eab12b67dec896a7afc") (:url . "https://github.com/mgrbyte/emacs-abyss-theme") (:keywords "theme" "dark" "contrasting colours"))]) (abl-mode . [(20170604 1309) nil "Python TDD minor mode" single ((:commit . "9aff997fe7b4caded60150a832e3704ac55e69e5") (:url . "http://github.com/afroisalreadyinu/abl-mode"))]) (abc-mode . [(20140225 944) nil "Major mode for editing abc music files" single ((:commit . "1dd6e1217136a6f986917a3e5f41c1007bac908d") (:keywords "local" "docs"))]) (aa-edit-mode . [(20170118 1920) ((emacs (24 3)) (navi2ch (2 0 0))) "Major mode for editing AA(S_JIS Art) and .mlt file" single ((:commit . "1dd801225b7ad3c23ad09698f5e77f0df7012a65") (:keywords "wp" "text" "shiftjis" "mlt" "yaruo"))]) (@ . [(20140707 520) ((queue (0 1)) (emacs (24))) "multiple-inheritance prototype-based objects DSL" tar ((:commit . "114dfe3761bf0c9dd89f794106c3a6a436ed06cc") (:url . "https://github.com/skeeto/at-el"))]) (4clojure . [(20131014 1507) ((json (1 2)) (request (0 2 0))) "Open and evaluate 4clojure.com questions" single ((:commit . "3cdfd356c24cd3518397d29ae833f56a4d20b4ca") (:keywords "languages" "data"))]) (2048-game . [(20151026 1233) nil "play 2048 in Emacs" single ((:url . "https://bitbucket.org/zck/2048.el"))]) (0xc . [(20170125 1953) ((emacs (24 4)) (s (1 11 0))) "Base conversion made easy" single ((:commit . "31890af88234e4e098f1c340a5990515b934c7f7") (:url . "http://github.com/AdamNiederer/0xc") (:keywords "base" "conversion"))]) (0blayout . [(20161007 2307) nil "Layout grouping with ease" single ((:commit . "873732ddb99a3ec18845a37467ee06bce4e61d87") (:url . "https://github.com/etu/0blayout") (:keywords "convenience" "window-management"))]))
